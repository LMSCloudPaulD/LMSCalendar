{"version":3,"file":"Header.js","sourceRoot":"","sources":["../../src/components/Header.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,GAAG,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,wBAAwB,MAAM,sCAAsC,CAAC;AAC5E,OAAO,EAAC,SAAS,EAAE,GAAG,EAAC,MAAM,eAAe,CAAC;AAI7C,IAAqB,MAAM,GAA3B,MAAqB,MAAO,SAAQ,UAAU;IAsEnC,MAAM;;QACb,OAAO,IAAI,CAAA;;;oBAGK,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,eAAe,CAAC;;;oCAGpB,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC;aAClE,MAAA,IAAI,CAAC,YAAY,0CAAE,GAAG;;8BAEL,MAAA,IAAI,CAAC,UAAU,0CAAE,KAAK;6BACvB,MAAA,IAAI,CAAC,UAAU,0CAAE,IAAI;;oCAEd,IAAI,CAAC,mBAAmB;;yBAEnC,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC;;aAExD,GAAG,CAAC,KAAK,CAAC;;;yBAGE,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC;;aAEvD,GAAG,CAAC,OAAO,CAAC;;;oCAGW,IAAI,CAAC,mBAAmB;;;;WAIjD,CAAC;IACV,CAAC;IAED,mBAAmB,CAAC,CAAQ;QAC1B,MAAM,MAAM,GAAG,CAAC,CAAC,MAA2B,CAAC;QAC7C,MAAM,SAAS,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;QAC3E,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,YAAY,EAAE;YAC1C,MAAM,EAAE,EAAC,SAAS,EAAC;YACnB,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,mBAAmB,CAAC,CAAQ;QAC1B,MAAM,MAAM,GAAG,CAAC,CAAC,MAAqB,CAAC;QACvC,MAAM,IAAI,GACR,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QACtE,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,YAAY,EAAE;YAC1C,MAAM,EAAE,EAAC,IAAI,EAAC;YACd,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;CACF,CAAA;AAnHiB,aAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0D1B,CAAA;AAlEF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;uCACR;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;0CACC;AAG1B;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4CACG;AART,MAAM;IAF1B,SAAS,EAAE;IACX,aAAa,CAAC,qBAAqB,CAAC;GAChB,MAAM,CA6H1B;eA7HoB,MAAM","sourcesContent":["import {LitElement, css, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport isEmptyObjectOrUndefined from '../utils/isEmptyObjectOrUndefined.js';\nimport {localized, msg} from '@lit/localize';\n\n@localized()\n@customElement('lms-calendar-header')\nexport default class Header extends LitElement {\n  @property({type: String})\n  heading?: string;\n\n  @property({type: Object})\n  activeDate?: CalendarDate;\n\n  @property({type: Object})\n  expandedDate?: CalendarDate;\n\n  static override styles = css`\n    .controls {\n      height: 3.5em;\n      width: 100%;\n      /* padding: 0.75em 0; */\n      display: flex;\n      flex-direction: row;\n      flex-wrap: nowrap;\n      align-content: center;\n      justify-content: space-between;\n      align-items: center;\n      border-bottom: 1px solid var(--separator-light);\n    }\n\n    @media (max-width: 360px) {\n      .controls {\n        font-size: small;\n        height: 4.5em;\n      }\n    }\n    .info {\n      padding-left: 1em;\n      text-align: right;\n    }\n    .day,\n    .month,\n    .year {\n      color: rgba(0, 0, 0, 0.6);\n    }\n    .context {\n      display: flex;\n    }\n    .context > * {\n      padding: 0.25em 0.5em;\n      border: 1px solid var(--separator-light);\n    }\n    .context > *:first-child {\n      border-radius: var(--border-radius-sm) 0 0 var(--border-radius-sm);\n      border-right: none;\n    }\n    .context > *:last-child {\n      border-radius: 0 var(--border-radius-sm) var(--border-radius-sm) 0;\n      border-left: none;\n    }\n\n    .buttons {\n      padding-right: 1em;\n    }\n    button {\n      padding: 0.75em;\n      margin: 0;\n      border-radius: 50%;\n      line-height: 0.5em;\n      border: 1px solid transparent;\n    }\n    span[data-active] {\n      background-color: var(--separator-light);\n    }\n  `;\n\n  override render() {\n    return html`<div class=\"controls\">\n      <div class=\"info\">\n        <span>\n          <strong>${this.heading || msg('Current Month')}</strong>\n        </span>\n        <br />\n        <span class=\"day\" ?hidden=${isEmptyObjectOrUndefined(this.expandedDate)}\n          >${this.expandedDate?.day}</span\n        >\n        <span class=\"month\">${this.activeDate?.month}</span>\n        <span class=\"year\">${this.activeDate?.year}</span>\n      </div>\n      <div class=\"context\" @click=${this._dispatchSwitchView}>\n        <span\n          ?data-active=${!isEmptyObjectOrUndefined(this.expandedDate)}\n          data-context=\"day\"\n          >${msg('Day')}</span\n        >\n        <span\n          ?data-active=${isEmptyObjectOrUndefined(this.expandedDate)}\n          data-context=\"month\"\n          >${msg('Month')}</span\n        >\n      </div>\n      <div class=\"buttons\" @click=${this._dispatchSwitchDate}>\n        <button name=\"previous\">«</button>\n        <button name=\"next\">»</button>\n      </div>\n    </div>`;\n  }\n\n  _dispatchSwitchDate(e: Event) {\n    const target = e.target as HTMLButtonElement;\n    const direction = e.target === e.currentTarget ? 'container' : target.name;\n    const event = new CustomEvent('switchdate', {\n      detail: {direction},\n      bubbles: true,\n      composed: true,\n    });\n    console.log(event);\n    this.dispatchEvent(event);\n  }\n\n  _dispatchSwitchView(e: Event) {\n    const target = e.target as HTMLElement;\n    const view =\n      e.target === e.currentTarget ? 'container' : target.dataset.context;\n    const event = new CustomEvent('switchview', {\n      detail: {view},\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n}\n"]}
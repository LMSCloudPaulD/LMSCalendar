{"version":3,"file":"haveSameValues.js","sourceRoot":"","sources":["../../src/utils/haveSameValues.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,OAAO,UAAU,cAAc,CACpC,CAAK,EACL,CAAK;IAEL,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;QACnD,OAAO,KAAK,CAAC;KACd;IAED,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QAC9C,+FAA+F;QAC/F,IACE,GAAG,IAAI,CAAC;YACR,GAAG,IAAI,CAAC;YACR,OAAO,CAAC,CAAC,GAAe,CAAC,KAAK,OAAO,CAAC,CAAC,GAAe,CAAC,EACvD;YACA,gDAAgD;YAChD,OAAO,KAAK,KAAK,CAAC,CAAC,GAAe,CAAC,CAAC;SACrC;QAED,OAAO,KAAK,CAAC;IACf,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["export default function haveSameValues<T1 extends object, T2 extends object>(\n  a: T1,\n  b: T2\n): boolean {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n\n  return Object.entries(a).every(([key, value]) => {\n    // Check if the key exists in both objects and if the type of the value for the key is the same\n    if (\n      key in a &&\n      key in b &&\n      typeof a[key as keyof T1] === typeof b[key as keyof T2]\n    ) {\n      // Compare the values of the key in both objects\n      return value === b[key as keyof T2];\n    }\n\n    return false;\n  });\n}\n"]}
{"version":3,"file":"calculateEventPositions.js","sourceRoot":"","sources":["../../src/utils/calculateEventPositions.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,OAAO,UAAU,uBAAuB,CAAC,MAY5C;IACA,4BAA4B;IAC5B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9D,MAAM,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9D,OAAO,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,mDAAmD;IACnD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QACjC,8DAA8D;QAC9D,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,yDAAyD;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACrE,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;YAC/D,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACpF,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;YAE9E,gFAAgF;YAChF,IAAI,KAAK,GAAG,QAAQ,IAAI,GAAG,GAAG,UAAU,EAAE;gBACxC,MAAM,IAAI,GAAG,CAAC;gBACd,GAAG,IAAI,GAAG,CAAC;gBACX,MAAM,IAAI,CAAC,CAAC;aACb;SACF;QAED,OAAO;YACL,GAAG,KAAK;YACR,MAAM;YACN,GAAG;YACH,MAAM;SACP,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["export default function calculateEventPositions(events: Array<{\n    date: {\n      start: { day: number; month: number; year: number };\n      end: { day: number; month: number; year: number };\n    };\n    time: {\n      start: { hours: number; minutes: number };\n      end: { hours: number; minutes: number };\n    };\n    heading: string;\n    content: string;\n    color: string;\n  }>) {\n    // Sort events by start time\n    events.sort((a, b) => {\n      const startA = a.time.start.hours * 60 + a.time.start.minutes;\n      const startB = b.time.start.hours * 60 + b.time.start.minutes;\n      return startA - startB;\n    });\n  \n    // Calculate height, top, and zIndex for each event\n    return events.map((event, index) => {\n      // Start with a height of 100%, a top of 0, and a z-index of 0\n      let height = 1;\n      let top = 0;\n      let zIndex = 0;\n  \n      // Loop through all previous events and check for overlap\n      for (let i = 0; i < index; i++) {\n        const otherEvent = events[i];\n        const start = event.time.start.hours * 60 + event.time.start.minutes;\n        const end = event.time.end.hours * 60 + event.time.end.minutes;\n        const otherStart = otherEvent.time.start.hours * 60 + otherEvent.time.start.minutes;\n        const otherEnd = otherEvent.time.end.hours * 60 + otherEvent.time.end.minutes;\n  \n        // If the two events overlap, reduce the height and increase the top and z-index\n        if (start < otherEnd && end > otherStart) {\n          height -= 0.2;\n          top += 0.1;\n          zIndex += 1;\n        }\n      }\n  \n      return {\n        ...event,\n        height,\n        top,\n        zIndex,\n      };\n    });\n  }"]}
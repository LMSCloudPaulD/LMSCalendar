{"version":3,"file":"lms-calendar.js","sourceRoot":"","sources":["../src/lms-calendar.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,GAAG,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAEjE,OAAO,wBAAwB,CAAC;AAChC,OAAO,uBAAuB,CAAC;AAC/B,OAAO,qBAAqB,CAAC;AAC7B,OAAO,yBAAyB,CAAC;AACjC,OAAO,uBAAuB,CAAC;AAC/B,OAAO,yBAAyB,MAAM,sCAAsC,CAAC;AAC7E,OAAO,wBAAwB,MAAM,qCAAqC,CAAC;AAC3E,OAAO,wBAAwB,MAAM,qCAAqC,CAAC;AAC3E,OAAO,6BAA6B,MAAM,0CAA0C,CAAC;AACrF,OAAO,6BAA6B,MAAM,0CAA0C,CAAC;AACrF,OAAO,cAAc,MAAM,2BAA2B,CAAC;AACvD,OAAO,wBAAwB,MAAM,qCAAqC,CAAC;AAG3E,IAAqB,WAAW,GAAhC,MAAqB,WAAY,SAAQ,UAAU;IAAnD;;QAEE,YAAO,GAAG,kBAAkB,CAAC;QAG7B,eAAU,GAAiB;YACzB,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,IAAI;SACX,CAAC;QAGF,aAAQ,GAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAGhE,YAAO,GAAoB,EAAE,CAAC;QAG9B,UAAK,GAAG,SAAS,CAAC;IA0MpB,CAAC;IApKU,MAAM;QACb,OAAO,IAAI,CAAA;;;yBAGU,IAAI,CAAC,kBAAkB;wBACxB,IAAI,CAAC,iBAAiB;qBACzB,IAAI,CAAC,OAAO;wBACT,IAAI,CAAC,UAAU;0BACb,IAAI,CAAC,aAAa;;;;;sBAKtB,IAAI,CAAC,QAAQ;oBACf,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC;;;;;oBAK7C,IAAI,CAAC,aAAa;wBACd,IAAI,CAAC,UAAU;oBACnB,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC;;YAErD,IAAI,CAAC,WAAW,EAAE;;;;oBAIV,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC;;YAEpD,IAAI,CAAC,iBAAiB,EAAE;;;KAG/B,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,CAAc;QAC/B,IAAI,CAAC,UAAU,GAAG,yBAAyB,CACzC,IAAI,CAAC,UAAU,EACf,CAAC,CAAC,MAAM,CAAC,SAAS,CACnB,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,CAAc;QAC9B,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,EAAE;YAC3B,IAAI,CAAC,aAAa,GAAG,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC;gBAChE,CAAC,CAAC,IAAI,CAAC,aAAa;gBACpB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;SACrB;QAED,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;YAC7B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAChC;IACH,CAAC;IAED,aAAa,CAAC,CAAc;QAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC;YAC9B,CAAC,CAAC,IAAI,CAAA,GAAG,IAAI,CAAC,OAAO;iBAChB,IAAI,CACH,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CACP,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;gBACvC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAC9C;iBACA,GAAG,CAAC,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC,EAAE,KAAK,EAAE,EAAE;gBAC3C,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;gBAC3D,OAAO,IAAI,CAAA;;qCAEc,IAAI,KAAK,EAAE;;gCAEhB,UAAU;+BACX,IAAI;;;;wBAIX,IAAI,KAAK,EAAE;wBACX,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG;wBACrD,IAAI;2BACD,OAAO;;;aAGrB,CAAC;YACJ,CAAC,CAAC,EAAE;YACR,CAAC,CAAC,IAAI,CAAA,EAAE,CAAC;IACb,CAAC;IAED,iBAAiB;QACf,IAAI,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAChD,OAAO;SACR;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE;YAClD,OAAO,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,wBAAwB,CACtC,CAAC,wBAAwB,CAAC,aAAa,CAAC;YACtC,CAAC,CAAC,6BAA6B,CAC3B,IAAI,CAAC,2BAA2B,CAAC,aAAa,CAAC,CAChD;YACH,CAAC,CAAC,EAAE,CACP,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAErB,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC,EAAE,KAAK,EAAE,EAAE;YAClE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAA;;+BAEc,IAAI,KAAK,EAAE;4BACd,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;yBAChC,IAAI,CAAC,oBAAoB,CAAC,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC;mCACjC,IAAI,CAAC,iBAAiB,CAAC,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC;0BACjD,UAAU;yBACX,IAAI;;;;kBAIX,IAAI,KAAK,EAAE;iBACZ,IAAI,CAAC,KAAK,CAAC,KAAK;kBACf,IAAI;qBACD,OAAO;qBACP,OAAO;;;OAGrB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,EAAC,KAAK,EAAE,GAAG,EAAuB;QACnD,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QACxD,OAAO,GAAG,QAAQ,IAChB,QAAQ,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,OAAO,GAAG,QAAQ,CACrD,EAAE,CAAC;IACL,CAAC;IAED,oBAAoB,CAAC,EAAC,OAAO,EAAE,KAAK,EAAsC;QACxE,OAAO,CACL,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAC3E,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,EAAC,OAAO,EAAE,KAAK,EAAsC;QACrE,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK;gBAClB,CAAC,GAAG;oBACF,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;yBAC1D,MAAM,CAAC,CAAC;IACrB,CAAC;IAED,2BAA2B,CAAC,KAAsB;QAChD,OAAO,6BAA6B,CAClC,KAAK;aACF,GAAG,CAAC,CAAC,KAAoB,EAAE,EAAE,CAC5B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC;aAChC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;aACxB,KAAK,CAAC,GAAG,CAAC,CACd;aACA,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;aAC/D,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC,CACzC,CAAC;IACJ,CAAC;CACF,CAAA;AArMiB,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+B1B,CAAA;AApDF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4CACI;AAG7B;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;+CAKvB;AAGF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;6CACwC;AAGhE;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;4CACM;AAG9B;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;0CACP;AAGlB;IADC,KAAK,EAAE;kDACqB;AArBV,WAAW;IAD/B,aAAa,CAAC,cAAc,CAAC;GACT,WAAW,CA4N/B;eA5NoB,WAAW","sourcesContent":["import {LitElement, css, html} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n\nimport './components/Header.js';\nimport './components/Month.js';\nimport './components/Day.js';\nimport './components/Context.js';\nimport './components/Entry.js';\nimport getDateByMonthInDirection from './utils/getDateByMonthInDirection.js';\nimport isEmptyObjectOrUndefined from './utils/isEmptyObjectOrUndefined.js';\nimport getColorTextWithContrast from './utils/getColorTextWithContrast.js';\nimport partitionOverlappingIntervals from './utils/partitionOverlappingIntervals.js';\nimport getOverlappingEntitiesIndices from './utils/getOverlappingEntitiesIndices.js';\nimport haveSameValues from './utils/haveSameValues.js';\nimport getSortedGradingsByIndex from './utils/getSortedGradingsByIndex.js';\n\n@customElement('lms-calendar')\nexport default class LMSCalendar extends LitElement {\n  @property({type: String})\n  heading = 'Current Bookings';\n\n  @property({type: Object})\n  activeDate: CalendarDate = {\n    day: 1,\n    month: 1,\n    year: 2022,\n  };\n\n  @property({type: Array})\n  weekdays: string[] = ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'];\n\n  @property({type: Array})\n  entries: CalendarEntry[] = [];\n\n  @property({type: String})\n  color = '#000000';\n\n  @state()\n  _expandedDate?: CalendarDate;\n\n  static override styles = css`\n    :host {\n      --shadow-sm: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n      --shadow-md: rgba(0, 0, 0, 0.15) 0px 3px 3px 0px;\n      --shadow-lg: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n      --shadow-hv: rgba(0, 0, 0, 0.08) 0px 4px 12px;\n\n      --breakpoint-xs: 425px;\n      --breakpoint-sm: 768px;\n      --breakpoint-md: 1024px;\n\n      --separator-light: rgba(0, 0, 0, 0.1);\n      --separator-mid: rgba(0, 0, 0, 0.4);\n      --separator-dark: rgba(0, 0, 0, 0.7);\n\n      --system-ui: system, -apple-system, '.SFNSText-Regular', 'San Francisco',\n        'Roboto', 'Segoe UI', 'Helvetica Neue', 'Lucida Grande', sans-serif;\n\n      --border-radius-sm: 5px;\n      --border-radius-md: 7px;\n      --border-radius-lg: 12px;\n    }\n    div {\n      height: 100%;\n      width: 100%;\n      border-radius: var(--border-radius-lg);\n      border: 1px solid var(--separator-light);\n      font-family: var(--system-ui);\n      color: var(--separator-dark);\n      box-shadow: var(--shadow-md);\n    }\n  `;\n\n  override render() {\n    return html`\n      <div>\n        <lms-calendar-header\n          @switchmonth=${this._handleSwitchMonth}\n          @switchview=${this._handleSwitchView}\n          .heading=${this.heading}\n          .activeDate=${this.activeDate}\n          .expandedDate=${this._expandedDate}\n        >\n        </lms-calendar-header>\n\n        <lms-calendar-context\n          .weekdays=${this.weekdays}\n          ?hidden=${!isEmptyObjectOrUndefined(this._expandedDate)}\n        >\n        </lms-calendar-context>\n\n        <lms-calendar-month\n          @expand=${this._handleExpand}\n          .activeDate=${this.activeDate}\n          ?hidden=${!isEmptyObjectOrUndefined(this._expandedDate)}\n        >\n          ${this._getEntries()}\n        </lms-calendar-month>\n\n        <lms-calendar-day\n          ?hidden=${isEmptyObjectOrUndefined(this._expandedDate)}\n        >\n          ${this._getEntriesByDate()}\n        </lms-calendar-day>\n      </div>\n    `;\n  }\n\n  _handleSwitchMonth(e: CustomEvent) {\n    this.activeDate = getDateByMonthInDirection(\n      this.activeDate,\n      e.detail.direction\n    );\n  }\n\n  _handleSwitchView(e: CustomEvent) {\n    if (e.detail.view === 'day') {\n      this._expandedDate = !isEmptyObjectOrUndefined(this._expandedDate)\n        ? this._expandedDate\n        : this.activeDate;\n    }\n\n    if (e.detail.view === 'month') {\n      this._expandedDate = undefined;\n    }\n  }\n\n  _handleExpand(e: CustomEvent) {\n    this._expandedDate = e.detail.date;\n  }\n\n  _getEntries() {\n    return this.entries.length !== 0\n      ? html`${this.entries\n          .sort(\n            (a, b) =>\n              a.time.start.hours - b.time.start.hours ||\n              a.time.start.minutes - b.time.start.minutes\n          )\n          .map(({date, time, heading, color}, index) => {\n            const [background, text] = getColorTextWithContrast(color);\n            return html`\n              <style>\n                lms-calendar-entry.${`_${index}`} {\n                  --entry-m: 0 0.25em 0 1.5em;\n                  --entry-bc: ${background};\n                  --entry-c: ${text};\n                }\n              </style>\n              <lms-calendar-entry\n                class=${`_${index}`}\n                slot=\"${date.start.year}-${date.start.month}-${date.start.day}\"\n                .time=${time}\n                .heading=${heading}\n              >\n              </lms-calendar-entry>\n            `;\n          })}`\n      : html``;\n  }\n\n  _getEntriesByDate() {\n    if (isEmptyObjectOrUndefined(this._expandedDate)) {\n      return;\n    }\n    const entriesByDate = this.entries.filter((entry) => {\n      return haveSameValues(entry.date.start, this._expandedDate || {});\n    });\n\n    const grading = getSortedGradingsByIndex(\n      !isEmptyObjectOrUndefined(entriesByDate)\n        ? getOverlappingEntitiesIndices(\n            this._getPartitionedSlottedItems(entriesByDate)\n          )\n        : []\n    );\n\n    console.log(grading);\n\n    return entriesByDate.map(({time, heading, content, color}, index) => {\n      const [background, text] = getColorTextWithContrast(color);\n      return html`\n        <style>\n          lms-calendar-entry.${`_${index}`} {\n            --start-slot: ${this._getGridSlotByTime(time)};\n            --entry-w: ${this._getWidthByGroupSize({grading, index})}%;\n            --entry-m: 0 1.5em 0 ${this._getOffsetByDepth({grading, index})}%;\n            --entry-bc: ${background};\n            --entry-c: ${text};\n          }\n        </style>\n        <lms-calendar-entry\n          class=${`_${index}`}\n          slot=${time.start.hours}\n          .time=${time}\n          .heading=${heading}\n          .content=${content}\n        >\n        </lms-calendar-entry>\n      `;\n    });\n  }\n\n  _getGridSlotByTime({start, end}: CalendarTimeInterval) {\n    const startRow = start.hours * 60 + (start.minutes + 1);\n    return `${startRow}/${\n      startRow + (end.hours * 60 + end.minutes - startRow)\n    }`;\n  }\n\n  _getWidthByGroupSize({grading, index}: {grading: Grading[]; index: number}) {\n    return (\n      100 / grading.filter((item) => item.group === grading[index].group).length\n    );\n  }\n\n  _getOffsetByDepth({grading, index}: {grading: Grading[]; index: number}) {\n    return grading[index].depth === 0\n      ? 0\n      : grading[index].depth *\n          (100 /\n            grading.filter((item) => item.group === grading[index].group)\n              .length);\n  }\n\n  _getPartitionedSlottedItems(items: CalendarEntry[]) {\n    return partitionOverlappingIntervals(\n      items\n        .map((entry: CalendarEntry) =>\n          this._getGridSlotByTime(entry.time)\n            .replace(/[^0-9/]+/g, '')\n            .split('/')\n        )\n        .map(([start, end]) => [parseInt(start, 10), parseInt(end, 10)])\n        .map(([start, end]) => ({start, end}))\n    );\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'lms-calendar': LMSCalendar;\n  }\n\n  interface CalendarDate {\n    day: number;\n    month: number;\n    year: number;\n  }\n\n  interface CalendarDateInterval {\n    start: CalendarDate;\n    end: CalendarDate;\n  }\n\n  interface CalendarTime {\n    hours: number;\n    minutes: number;\n  }\n\n  interface CalendarTimeInterval {\n    start: CalendarTime;\n    end: CalendarTime;\n  }\n\n  interface CalendarEntry {\n    date: CalendarDateInterval;\n    time: CalendarTimeInterval;\n    heading: string;\n    content: string;\n    color: string;\n  }\n\n  interface Interval {\n    start: number;\n    end: number;\n  }\n\n  interface Grading {\n    index: number;\n    depth: number;\n    group: number;\n  }\n\n  interface Partition {\n    index: number | undefined;\n    depth: number | undefined;\n    group: number | undefined;\n    start: number;\n    end: number;\n  }\n}\n"]}
{"version":3,"file":"lms-calendar.bundled.js","sources":["../node_modules/.pnpm/@rollup+plugin-typescript@11.1.6_rollup@4.12.0_tslib@2.6.2_typescript@5.3.3/node_modules/tslib/tslib.es6.js","../node_modules/.pnpm/@lit-labs+observers@2.0.2/node_modules/@lit-labs/observers/resize-controller.js","../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/css-tag.js","../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/reactive-element.js","../node_modules/.pnpm/lit-html@3.1.2/node_modules/lit-html/lit-html.js","../node_modules/.pnpm/lit-element@4.0.4/node_modules/lit-element/lit-element.js","../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/decorators/custom-element.js","../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/decorators/property.js","../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/decorators/state.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/errors.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/formats.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/zone.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/zones/systemZone.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/zones/IANAZone.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/locale.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/english.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/zones/fixedOffsetZone.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/zones/invalidZone.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/zoneUtil.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/util.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/settings.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/invalid.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/conversions.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/formatter.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/regexParser.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/duration.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/interval.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/info.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/diff.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/digits.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/impl/tokenParser.js","../node_modules/.pnpm/luxon@3.4.4/node_modules/luxon/src/datetime.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/purry.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/pipe.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/_reduceLazy.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/equals.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/_toLazyIndexed.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/filter.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/flatten.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/isEmpty.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/isArray.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/isString.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/isObject.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/map.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/merge.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/reduce.js","../node_modules/.pnpm/remeda@1.43.0/node_modules/remeda/dist/es/sort.js","../node_modules/.pnpm/ts-pattern@5.0.8/node_modules/ts-pattern/dist/index.js","../src/locales/Translations.ts","../src/components/Context.ts","../src/components/Day.ts","../src/components/Entry.ts","../src/components/Header.ts","../node_modules/.pnpm/lit-html@3.1.2/node_modules/lit-html/directive.js","../node_modules/.pnpm/lit-html@3.1.2/node_modules/lit-html/directives/class-map.js","../src/lib/DirectionalCalendarDateCalculator.ts","../src/components/Month.ts","../src/lib/getColorTextWithContrast.ts","../src/lib/partitionOverlappingIntervals.ts","../src/lib/getOverlappingEntitiesIndices.ts","../src/lib/getSortedGradingsByIndex.ts","../src/lms-calendar.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","class s{constructor(s,{target:t,config:i,callback:h,skipInitial:e}){this.t=new Set,this.o=!1,this.i=!1,this.h=s,null!==t&&this.t.add(t??s),this.l=i,this.o=e??this.o,this.callback=h,window.ResizeObserver?(this.u=new ResizeObserver((s=>{this.handleChanges(s),this.h.requestUpdate()})),s.addController(this)):console.warn(\"ResizeController error: browser does not support ResizeObserver.\")}handleChanges(s){this.value=this.callback?.(s,this.u)}hostConnected(){for(const s of this.t)this.observe(s)}hostDisconnected(){this.disconnect()}async hostUpdated(){!this.o&&this.i&&this.handleChanges([]),this.i=!1}observe(s){this.t.add(s),this.u.observe(s,this.l),this.i=!0,this.h.requestUpdate()}unobserve(s){this.t.delete(s),this.u.unobserve(s)}disconnect(){this.u.disconnect()}}export{s as ResizeController};\n//# sourceMappingURL=resize-controller.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:r,getOwnPropertyNames:h,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),y={attribute:!0,type:String,converter:u,reflect:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class b extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=y){if(s.state&&(s.attribute=!1),this._$Ei(),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),r=this.getPropertyDescriptor(t,i,s);void 0!==r&&e(this.prototype,t,r)}}static getPropertyDescriptor(t,s,i){const{get:e,set:h}=r(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get(){return e?.call(this)},set(s){const r=e?.call(this);h.call(this,s),this.requestUpdate(t,r,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??y}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...h(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$EC(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const r=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==r?this.removeAttribute(e):this.setAttribute(e,r),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),r=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=r.fromAttribute(s,t.type),this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){if(i??=this.constructor.getPropertyOptions(t),!(i.hasChanged??f)(this[t],s))return;this.P(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$ET())}P(t,s,i){this._$AL.has(t)||this._$AL.set(t,s),!0===i.reflect&&this._$Em!==t&&(this._$Ej??=new Set).add(t)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t)!0!==i.wrapped||this._$AL.has(s)||void 0===this[s]||this.P(s,this[s],i)}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EU()}catch(s){throw t=!1,this._$EU(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Ej&&=this._$Ej.forEach((t=>this._$EC(t,this[t]))),this._$EU()}updated(t){}firstUpdated(t){}}b.elementStyles=[],b.shadowRootOptions={mode:\"open\"},b[d(\"elementProperties\")]=new Map,b[d(\"finalized\")]=new Map,p?.({ReactiveElement:b}),(a.reactiveElementVersions??=[]).push(\"2.0.4\");export{b as ReactiveElement,u as defaultConverter,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${(Math.random()+\"\").slice(9)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=Symbol.for(\"lit-noChange\"),T=Symbol.for(\"lit-nothing\"),A=new WeakMap,E=r.createTreeWalker(r,129);function C(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const P=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[C(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),o]};class V{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=P(t,s);if(this.el=V.createElement(f,n),E.currentNode=this.el.content,2===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=E.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?k:\"?\"===e[1]?H:\"@\"===e[1]?I:R}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),E.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function N(t,i,s=t,e){if(i===w)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=N(t,h._$AS(t,i.values),h,e)),i}class S{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);E.currentNode=e;let h=E.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new M(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new L(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=E.nextNode(),o++)}return E.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class M{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=T,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=N(this,t,i),c(t)?t===T||null==t||\"\"===t?(this._$AH!==T&&this._$AR(),this._$AH=T):t!==this._$AH&&t!==w&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}S(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.S(t))}_(t){this._$AH!==T&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=V.createElement(C(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new S(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new V(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new M(this.S(l()),this.S(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class R{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=T,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=T}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=N(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==w,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=N(this,e[s+n],i,n),r===w&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===T?t=T:t!==T&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===T?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class k extends R{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===T?void 0:t}}class H extends R{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==T)}}class I extends R{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=N(this,t,i,0)??T)===w)return;const s=this._$AH,e=t===T&&s!==T||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==T&&(s===T||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class L{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){N(this,t)}}const z={P:e,A:h,C:o,M:1,L:P,R:S,D:u,V:N,I:M,H:R,N:H,U:I,B:k,F:L},Z=t.litHtmlPolyfillSupport;Z?.(V,M),(t.litHtmlVersions??=[]).push(\"3.1.2\");const j=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new M(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{z as _$LH,x as html,w as noChange,T as nothing,j as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as i}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class s extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const i=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(i,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return i}}s._$litElement$=!0,s[(\"finalized\",\"finalized\")]=!0,globalThis.litElementHydrateSupport?.({LitElement:s});const r=globalThis.litElementPolyfillSupport;r?.({LitElement:s});const o={_$AK:(t,e,i)=>{t._$AK(e,i)},_$AL:t=>t._$AL};(globalThis.litElementVersions??=[]).push(\"4.0.4\");export{s as LitElement,o as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.P(o,void 0,t),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,r?{...t,wrapped:!0}:t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n","/**\n * @private\n */\n\nconst n = \"numeric\",\n  s = \"short\",\n  l = \"long\";\n\nexport const DATE_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n};\n\nexport const DATE_MED = {\n  year: n,\n  month: s,\n  day: n,\n};\n\nexport const DATE_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n};\n\nexport const DATE_FULL = {\n  year: n,\n  month: l,\n  day: n,\n};\n\nexport const DATE_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n};\n\nexport const TIME_SIMPLE = {\n  hour: n,\n  minute: n,\n};\n\nexport const TIME_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const TIME_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const TIME_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n\nexport const TIME_24_SIMPLE = {\n  hour: n,\n  minute: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: s,\n};\n\nexport const TIME_24_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: l,\n};\n\nexport const DATETIME_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_SHORT_WITH_SECONDS = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_MED_WITH_SECONDS = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_FULL = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_FULL_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  timeZoneName: l,\n};\n\nexport const DATETIME_HUGE_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n","import { ZoneIsAbstractError } from \"./errors.js\";\n\n/**\n * @interface\n */\nexport default class Zone {\n  /**\n   * The type of zone\n   * @abstract\n   * @type {string}\n   */\n  get type() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The name of this zone.\n   * @abstract\n   * @type {string}\n   */\n  get name() {\n    throw new ZoneIsAbstractError();\n  }\n\n  get ianaName() {\n    return this.name;\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year.\n   * @abstract\n   * @type {boolean}\n   */\n  get isUniversal() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, opts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @abstract\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @abstract\n   * @type {boolean}\n   */\n  get isValid() {\n    throw new ZoneIsAbstractError();\n  }\n}\n","import { formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new SystemZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import { formatOffset, parseZoneInfo, isUndefined, objToLocalTS } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet dtfCache = {};\nfunction makeDTF(zone) {\n  if (!dtfCache[zone]) {\n    dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: zone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      era: \"short\",\n    });\n  }\n  return dtfCache[zone];\n}\n\nconst typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  era: 3,\n  hour: 4,\n  minute: 5,\n  second: 6,\n};\n\nfunction hackyOffset(dtf, date) {\n  const formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n    parsed = /(\\d+)\\/(\\d+)\\/(\\d+) (AD|BC),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n    [, fMonth, fDay, fYear, fadOrBc, fHour, fMinute, fSecond] = parsed;\n  return [fYear, fMonth, fDay, fadOrBc, fHour, fMinute, fSecond];\n}\n\nfunction partsOffset(dtf, date) {\n  const formatted = dtf.formatToParts(date);\n  const filled = [];\n  for (let i = 0; i < formatted.length; i++) {\n    const { type, value } = formatted[i];\n    const pos = typeToPos[type];\n\n    if (type === \"era\") {\n      filled[pos] = value;\n    } else if (!isUndefined(pos)) {\n      filled[pos] = parseInt(value, 10);\n    }\n  }\n  return filled;\n}\n\nlet ianaZoneCache = {};\n/**\n * A zone identified by an IANA identifier, like America/New_York\n * @implements {Zone}\n */\nexport default class IANAZone extends Zone {\n  /**\n   * @param {string} name - Zone name\n   * @return {IANAZone}\n   */\n  static create(name) {\n    if (!ianaZoneCache[name]) {\n      ianaZoneCache[name] = new IANAZone(name);\n    }\n    return ianaZoneCache[name];\n  }\n\n  /**\n   * Reset local caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCache() {\n    ianaZoneCache = {};\n    dtfCache = {};\n  }\n\n  /**\n   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n   * @param {string} s - The string to check validity on\n   * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n   * @deprecated This method returns false for some valid IANA names. Use isValidZone instead.\n   * @return {boolean}\n   */\n  static isValidSpecifier(s) {\n    return this.isValidZone(s);\n  }\n\n  /**\n   * Returns whether the provided string identifies a real zone\n   * @param {string} zone - The string to check\n   * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n   * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n   * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidZone(zone) {\n    if (!zone) {\n      return false;\n    }\n    try {\n      new Intl.DateTimeFormat(\"en-US\", { timeZone: zone }).format();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  constructor(name) {\n    super();\n    /** @private **/\n    this.zoneName = name;\n    /** @private **/\n    this.valid = IANAZone.isValidZone(name);\n  }\n\n  /** @override **/\n  get type() {\n    return \"iana\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale, this.name);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    const date = new Date(ts);\n\n    if (isNaN(date)) return NaN;\n\n    const dtf = makeDTF(this.name);\n    let [year, month, day, adOrBc, hour, minute, second] = dtf.formatToParts\n      ? partsOffset(dtf, date)\n      : hackyOffset(dtf, date);\n\n    if (adOrBc === \"BC\") {\n      year = -Math.abs(year) + 1;\n    }\n\n    // because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat\n    const adjustedHour = hour === 24 ? 0 : hour;\n\n    const asUTC = objToLocalTS({\n      year,\n      month,\n      day,\n      hour: adjustedHour,\n      minute,\n      second,\n      millisecond: 0,\n    });\n\n    let asTS = +date;\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return (asUTC - asTS) / (60 * 1000);\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"iana\" && otherZone.name === this.name;\n  }\n\n  /** @override **/\n  get isValid() {\n    return this.valid;\n  }\n}\n","import { hasLocaleWeekInfo, hasRelative, padStart, roundTo, validateWeekSettings } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n// todo - remap caching\n\nlet intlLFCache = {};\nfunction getCachedLF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlLFCache[key];\n  if (!dtf) {\n    dtf = new Intl.ListFormat(locString, opts);\n    intlLFCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\n\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const { base, ...cacheKeyOpts } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\n\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\n\nlet weekInfoCache = {};\nfunction getCachedWeekInfo(locString) {\n  let data = weekInfoCache[locString];\n  if (!data) {\n    const locale = new Intl.Locale(locString);\n    // browsers currently implement this as a property, but spec says it should be a getter function\n    data = \"getWeekInfo\" in locale ? locale.getWeekInfo() : locale.weekInfo;\n    weekInfoCache[locString] = data;\n  }\n  return data;\n}\n\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  // private subtags and unicode subtags have ordering requirements,\n  // and we're not properly parsing this, so just strip out the\n  // private ones if they exist.\n  const xIndex = localeStr.indexOf(\"-x-\");\n  if (xIndex !== -1) {\n    localeStr = localeStr.substring(0, xIndex);\n  }\n\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    let selectedStr;\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n      selectedStr = localeStr;\n    } catch (e) {\n      const smaller = localeStr.substring(0, uIndex);\n      options = getCachedDTF(smaller).resolvedOptions();\n      selectedStr = smaller;\n    }\n\n    const { numberingSystem, calendar } = options;\n    return [selectedStr, numberingSystem, calendar];\n  }\n}\n\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    if (!localeStr.includes(\"-u-\")) {\n      localeStr += \"-u\";\n    }\n\n    if (outputCalendar) {\n      localeStr += `-ca-${outputCalendar}`;\n    }\n\n    if (numberingSystem) {\n      localeStr += `-nu-${numberingSystem}`;\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\n\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2009, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction listStuff(loc, length, englishFn, intlFn) {\n  const mode = loc.listingMode();\n\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\n\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return (\n      loc.numberingSystem === \"latn\" ||\n      !loc.locale ||\n      loc.locale.startsWith(\"en\") ||\n      new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\"\n    );\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n\n    const { padTo, floor, ...otherOpts } = opts;\n\n    if (!forceSimple || Object.keys(otherOpts).length > 0) {\n      const intlOpts = { useGrouping: false, ...opts };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n    this.originalZone = undefined;\n\n    let z = undefined;\n    if (this.opts.timeZone) {\n      // Don't apply any workarounds if a timeZone is explicitly provided in opts\n      this.dt = dt;\n    } else if (dt.zone.type === \"fixed\") {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata so\n        // we manually apply the offset and substitute the zone as needed.\n        z = \"UTC\";\n        this.dt = dt.offset === 0 ? dt : dt.setZone(\"UTC\").plus({ minutes: dt.offset });\n        this.originalZone = dt.zone;\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else if (dt.zone.type === \"iana\") {\n      this.dt = dt;\n      z = dt.zone.name;\n    } else {\n      // Custom zones can have any offset / offsetName so we just manually\n      // apply the offset and substitute the zone as needed.\n      z = \"UTC\";\n      this.dt = dt.setZone(\"UTC\").plus({ minutes: dt.offset });\n      this.originalZone = dt.zone;\n    }\n\n    const intlOpts = { ...this.opts };\n    intlOpts.timeZone = intlOpts.timeZone || z;\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n\n  format() {\n    if (this.originalZone) {\n      // If we have to substitute in the actual zone name, we have to use\n      // formatToParts so that the timezone can be replaced.\n      return this.formatToParts()\n        .map(({ value }) => value)\n        .join(\"\");\n    }\n    return this.dtf.format(this.dt.toJSDate());\n  }\n\n  formatToParts() {\n    const parts = this.dtf.formatToParts(this.dt.toJSDate());\n    if (this.originalZone) {\n      return parts.map((part) => {\n        if (part.type === \"timeZoneName\") {\n          const offsetName = this.originalZone.offsetName(this.dt.ts, {\n            locale: this.dt.locale,\n            format: this.opts.timeZoneName,\n          });\n          return {\n            ...part,\n            value: offsetName,\n          };\n        } else {\n          return part;\n        }\n      });\n    }\n    return parts;\n  }\n\n  resolvedOptions() {\n    return this.dtf.resolvedOptions();\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = { style: \"long\", ...opts };\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\n\nconst fallbackWeekSettings = {\n  firstDay: 1,\n  minimalDays: 4,\n  weekend: [6, 7],\n};\n\n/**\n * @private\n */\n\nexport default class Locale {\n  static fromOpts(opts) {\n    return Locale.create(\n      opts.locale,\n      opts.numberingSystem,\n      opts.outputCalendar,\n      opts.weekSettings,\n      opts.defaultToEN\n    );\n  }\n\n  static create(locale, numberingSystem, outputCalendar, weekSettings, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale;\n    // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n    const localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    const weekSettingsR = validateWeekSettings(weekSettings) || Settings.defaultWeekSettings;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, weekSettingsR, specifiedLocale);\n  }\n\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n\n  static fromObject({ locale, numberingSystem, outputCalendar, weekSettings } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar, weekSettings);\n  }\n\n  constructor(locale, numbering, outputCalendar, weekSettings, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.weekSettings = weekSettings;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n\n    this.weekdaysCache = { format: {}, standalone: {} };\n    this.monthsCache = { format: {}, standalone: {} };\n    this.meridiemCache = null;\n    this.eraCache = {};\n\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n\n    return this.fastNumbersCached;\n  }\n\n  listingMode() {\n    const isActuallyEn = this.isEnglish();\n    const hasNoWeirdness =\n      (this.numberingSystem === null || this.numberingSystem === \"latn\") &&\n      (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n    return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n  }\n\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(\n        alts.locale || this.specifiedLocale,\n        alts.numberingSystem || this.numberingSystem,\n        alts.outputCalendar || this.outputCalendar,\n        validateWeekSettings(alts.weekSettings) || this.weekSettings,\n        alts.defaultToEN || false\n      );\n    }\n  }\n\n  redefaultToEN(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: true });\n  }\n\n  redefaultToSystem(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: false });\n  }\n\n  months(length, format = false) {\n    return listStuff(this, length, English.months, () => {\n      const intl = format ? { month: length, day: \"numeric\" } : { month: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths((dt) => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n\n  weekdays(length, format = false) {\n    return listStuff(this, length, English.weekdays, () => {\n      const intl = format\n          ? { weekday: length, year: \"numeric\", month: \"long\", day: \"numeric\" }\n          : { weekday: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays((dt) =>\n          this.extract(dt, intl, \"weekday\")\n        );\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n\n  meridiems() {\n    return listStuff(\n      this,\n      undefined,\n      () => English.meridiems,\n      () => {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!this.meridiemCache) {\n          const intl = { hour: \"numeric\", hourCycle: \"h12\" };\n          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(\n            (dt) => this.extract(dt, intl, \"dayperiod\")\n          );\n        }\n\n        return this.meridiemCache;\n      }\n    );\n  }\n\n  eras(length) {\n    return listStuff(this, length, English.eras, () => {\n      const intl = { era: length };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map((dt) =>\n          this.extract(dt, intl, \"era\")\n        );\n      }\n\n      return this.eraCache[length];\n    });\n  }\n\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find((m) => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n\n  listFormatter(opts = {}) {\n    return getCachedLF(this.intl, opts);\n  }\n\n  isEnglish() {\n    return (\n      this.locale === \"en\" ||\n      this.locale.toLowerCase() === \"en-us\" ||\n      new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\")\n    );\n  }\n\n  getWeekSettings() {\n    if (this.weekSettings) {\n      return this.weekSettings;\n    } else if (!hasLocaleWeekInfo()) {\n      return fallbackWeekSettings;\n    } else {\n      return getCachedWeekInfo(this.locale);\n    }\n  }\n\n  getStartOfWeek() {\n    return this.getWeekSettings().firstDay;\n  }\n\n  getMinDaysInFirstWeek() {\n    return this.getWeekSettings().minimalDays;\n  }\n\n  getWeekendDays() {\n    return this.getWeekSettings().weekend;\n  }\n\n  equals(other) {\n    return (\n      this.locale === other.locale &&\n      this.numberingSystem === other.numberingSystem &&\n      this.outputCalendar === other.outputCalendar\n    );\n  }\n}\n","import * as Formats from \"./formats.js\";\nimport { pick } from \"./util.js\";\n\nfunction stringify(obj) {\n  return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\n/**\n * @private\n */\n\nexport const monthsLong = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const monthsShort = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\n\nexport function months(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...monthsNarrow];\n    case \"short\":\n      return [...monthsShort];\n    case \"long\":\n      return [...monthsLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    case \"2-digit\":\n      return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    default:\n      return null;\n  }\n}\n\nexport const weekdaysLong = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nexport const weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\nexport const weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n\nexport function weekdays(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...weekdaysNarrow];\n    case \"short\":\n      return [...weekdaysShort];\n    case \"long\":\n      return [...weekdaysLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    default:\n      return null;\n  }\n}\n\nexport const meridiems = [\"AM\", \"PM\"];\n\nexport const erasLong = [\"Before Christ\", \"Anno Domini\"];\n\nexport const erasShort = [\"BC\", \"AD\"];\n\nexport const erasNarrow = [\"B\", \"A\"];\n\nexport function eras(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...erasNarrow];\n    case \"short\":\n      return [...erasShort];\n    case \"long\":\n      return [...erasLong];\n    default:\n      return null;\n  }\n}\n\nexport function meridiemForDateTime(dt) {\n  return meridiems[dt.hour < 12 ? 0 : 1];\n}\n\nexport function weekdayForDateTime(dt, length) {\n  return weekdays(length)[dt.weekday - 1];\n}\n\nexport function monthForDateTime(dt, length) {\n  return months(length)[dt.month - 1];\n}\n\nexport function eraForDateTime(dt, length) {\n  return eras(length)[dt.year < 0 ? 0 : 1];\n}\n\nexport function formatRelativeTime(unit, count, numeric = \"always\", narrow = false) {\n  const units = {\n    years: [\"year\", \"yr.\"],\n    quarters: [\"quarter\", \"qtr.\"],\n    months: [\"month\", \"mo.\"],\n    weeks: [\"week\", \"wk.\"],\n    days: [\"day\", \"day\", \"days\"],\n    hours: [\"hour\", \"hr.\"],\n    minutes: [\"minute\", \"min.\"],\n    seconds: [\"second\", \"sec.\"],\n  };\n\n  const lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n\n  if (numeric === \"auto\" && lastable) {\n    const isDay = unit === \"days\";\n    switch (count) {\n      case 1:\n        return isDay ? \"tomorrow\" : `next ${units[unit][0]}`;\n      case -1:\n        return isDay ? \"yesterday\" : `last ${units[unit][0]}`;\n      case 0:\n        return isDay ? \"today\" : `this ${units[unit][0]}`;\n      default: // fall through\n    }\n  }\n\n  const isInPast = Object.is(count, -0) || count < 0,\n    fmtValue = Math.abs(count),\n    singular = fmtValue === 1,\n    lilUnits = units[unit],\n    fmtUnit = narrow\n      ? singular\n        ? lilUnits[1]\n        : lilUnits[2] || lilUnits[1]\n      : singular\n      ? units[unit][0]\n      : unit;\n  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;\n}\n\nexport function formatString(knownFormat) {\n  // these all have the offsets removed because we don't have access to them\n  // without all the intl stuff this is backfilling\n  const filtered = pick(knownFormat, [\n      \"weekday\",\n      \"era\",\n      \"year\",\n      \"month\",\n      \"day\",\n      \"hour\",\n      \"minute\",\n      \"second\",\n      \"timeZoneName\",\n      \"hourCycle\",\n    ]),\n    key = stringify(filtered),\n    dateTimeHuge = \"EEEE, LLLL d, yyyy, h:mm a\";\n  switch (key) {\n    case stringify(Formats.DATE_SHORT):\n      return \"M/d/yyyy\";\n    case stringify(Formats.DATE_MED):\n      return \"LLL d, yyyy\";\n    case stringify(Formats.DATE_MED_WITH_WEEKDAY):\n      return \"EEE, LLL d, yyyy\";\n    case stringify(Formats.DATE_FULL):\n      return \"LLLL d, yyyy\";\n    case stringify(Formats.DATE_HUGE):\n      return \"EEEE, LLLL d, yyyy\";\n    case stringify(Formats.TIME_SIMPLE):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_SECONDS):\n      return \"h:mm:ss a\";\n    case stringify(Formats.TIME_WITH_SHORT_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_LONG_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_24_SIMPLE):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_SECONDS):\n      return \"HH:mm:ss\";\n    case stringify(Formats.TIME_24_WITH_SHORT_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_LONG_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.DATETIME_SHORT):\n      return \"M/d/yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_MED):\n      return \"LLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL):\n      return \"LLLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_HUGE):\n      return dateTimeHuge;\n    case stringify(Formats.DATETIME_SHORT_WITH_SECONDS):\n      return \"M/d/yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_SECONDS):\n      return \"LLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_WEEKDAY):\n      return \"EEE, d LLL yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL_WITH_SECONDS):\n      return \"LLLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_HUGE_WITH_SECONDS):\n      return \"EEEE, LLLL d, yyyy, h:mm:ss a\";\n    default:\n      return dateTimeHuge;\n  }\n}\n","import { formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nexport default class FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /** @override **/\n  get type() {\n    return \"fixed\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  get ianaName() {\n    if (this.fixed === 0) {\n      return \"Etc/UTC\";\n    } else {\n      return `Etc/GMT${formatOffset(-this.fixed, \"narrow\")}`;\n    }\n  }\n\n  /** @override **/\n  offsetName() {\n    return this.name;\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return true;\n  }\n\n  /** @override **/\n  offset() {\n    return this.fixed;\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import Zone from \"../zone.js\";\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n","/**\n * @private\n */\n\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\n\nimport { isUndefined, isString, isNumber } from \"./util.js\";\nimport SystemZone from \"../zones/systemZone.js\";\n\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"default\") return defaultZone;\n    else if (lowered === \"local\" || lowered === \"system\") return SystemZone.instance;\n    else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;\n    else return FixedOffsetZone.parseSpecifier(lowered) || IANAZone.create(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && \"offset\" in input && typeof input.offset === \"function\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n","/*\n  This is just a junk drawer, containing anything used across multiple classes.\n  Because Luxon is small(ish), this should stay small and we won't worry about splitting\n  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n*/\n\nimport { InvalidArgumentError } from \"../errors.js\";\nimport Settings from \"../settings.js\";\nimport { dayOfWeek, isoWeekdayToLocal } from \"./conversions.js\";\n\n/**\n * @private\n */\n\n// TYPES\n\nexport function isUndefined(o) {\n  return typeof o === \"undefined\";\n}\n\nexport function isNumber(o) {\n  return typeof o === \"number\";\n}\n\nexport function isInteger(o) {\n  return typeof o === \"number\" && o % 1 === 0;\n}\n\nexport function isString(o) {\n  return typeof o === \"string\";\n}\n\nexport function isDate(o) {\n  return Object.prototype.toString.call(o) === \"[object Date]\";\n}\n\n// CAPABILITIES\n\nexport function hasRelative() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function hasLocaleWeekInfo() {\n  try {\n    return (\n      typeof Intl !== \"undefined\" &&\n      !!Intl.Locale &&\n      (\"weekInfo\" in Intl.Locale.prototype || \"getWeekInfo\" in Intl.Locale.prototype)\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n// OBJECTS AND ARRAYS\n\nexport function maybeArray(thing) {\n  return Array.isArray(thing) ? thing : [thing];\n}\n\nexport function bestBy(arr, by, compare) {\n  if (arr.length === 0) {\n    return undefined;\n  }\n  return arr.reduce((best, next) => {\n    const pair = [by(next), next];\n    if (!best) {\n      return pair;\n    } else if (compare(best[0], pair[0]) === best[0]) {\n      return best;\n    } else {\n      return pair;\n    }\n  }, null)[1];\n}\n\nexport function pick(obj, keys) {\n  return keys.reduce((a, k) => {\n    a[k] = obj[k];\n    return a;\n  }, {});\n}\n\nexport function hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function validateWeekSettings(settings) {\n  if (settings == null) {\n    return null;\n  } else if (typeof settings !== \"object\") {\n    throw new InvalidArgumentError(\"Week settings must be an object\");\n  } else {\n    if (\n      !integerBetween(settings.firstDay, 1, 7) ||\n      !integerBetween(settings.minimalDays, 1, 7) ||\n      !Array.isArray(settings.weekend) ||\n      settings.weekend.some((v) => !integerBetween(v, 1, 7))\n    ) {\n      throw new InvalidArgumentError(\"Invalid week settings\");\n    }\n    return {\n      firstDay: settings.firstDay,\n      minimalDays: settings.minimalDays,\n      weekend: Array.from(settings.weekend),\n    };\n  }\n}\n\n// NUMBERS AND STRINGS\n\nexport function integerBetween(thing, bottom, top) {\n  return isInteger(thing) && thing >= bottom && thing <= top;\n}\n\n// x % n but takes the sign of n instead of x\nexport function floorMod(x, n) {\n  return x - n * Math.floor(x / n);\n}\n\nexport function padStart(input, n = 2) {\n  const isNeg = input < 0;\n  let padded;\n  if (isNeg) {\n    padded = \"-\" + (\"\" + -input).padStart(n, \"0\");\n  } else {\n    padded = (\"\" + input).padStart(n, \"0\");\n  }\n  return padded;\n}\n\nexport function parseInteger(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseInt(string, 10);\n  }\n}\n\nexport function parseFloating(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseFloat(string);\n  }\n}\n\nexport function parseMillis(fraction) {\n  // Return undefined (instead of 0) in these cases, where fraction is not set\n  if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n    return undefined;\n  } else {\n    const f = parseFloat(\"0.\" + fraction) * 1000;\n    return Math.floor(f);\n  }\n}\n\nexport function roundTo(number, digits, towardZero = false) {\n  const factor = 10 ** digits,\n    rounder = towardZero ? Math.trunc : Math.round;\n  return rounder(number * factor) / factor;\n}\n\n// DATE BASICS\n\nexport function isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function daysInMonth(year, month) {\n  const modMonth = floorMod(month - 1, 12) + 1,\n    modYear = year + (month - modMonth) / 12;\n\n  if (modMonth === 2) {\n    return isLeapYear(modYear) ? 29 : 28;\n  } else {\n    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n  }\n}\n\n// convert a calendar object to a local timestamp (epoch, but with the offset baked in)\nexport function objToLocalTS(obj) {\n  let d = Date.UTC(\n    obj.year,\n    obj.month - 1,\n    obj.day,\n    obj.hour,\n    obj.minute,\n    obj.second,\n    obj.millisecond\n  );\n\n  // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n  if (obj.year < 100 && obj.year >= 0) {\n    d = new Date(d);\n    // set the month and day again, this is necessary because year 2000 is a leap year, but year 100 is not\n    // so if obj.year is in 99, but obj.day makes it roll over into year 100,\n    // the calculations done by Date.UTC are using year 2000 - which is incorrect\n    d.setUTCFullYear(obj.year, obj.month - 1, obj.day);\n  }\n  return +d;\n}\n\n// adapted from moment.js: https://github.com/moment/moment/blob/000ac1800e620f770f4eb31b5ae908f6167b0ab2/src/lib/units/week-calendar-utils.js\nfunction firstWeekOffset(year, minDaysInFirstWeek, startOfWeek) {\n  const fwdlw = isoWeekdayToLocal(dayOfWeek(year, 1, minDaysInFirstWeek), startOfWeek);\n  return -fwdlw + minDaysInFirstWeek - 1;\n}\n\nexport function weeksInWeekYear(weekYear, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const weekOffset = firstWeekOffset(weekYear, minDaysInFirstWeek, startOfWeek);\n  const weekOffsetNext = firstWeekOffset(weekYear + 1, minDaysInFirstWeek, startOfWeek);\n  return (daysInYear(weekYear) - weekOffset + weekOffsetNext) / 7;\n}\n\nexport function untruncateYear(year) {\n  if (year > 99) {\n    return year;\n  } else return year > Settings.twoDigitCutoffYear ? 1900 + year : 2000 + year;\n}\n\n// PARSING\n\nexport function parseZoneInfo(ts, offsetFormat, locale, timeZone = null) {\n  const date = new Date(ts),\n    intlOpts = {\n      hourCycle: \"h23\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    };\n\n  if (timeZone) {\n    intlOpts.timeZone = timeZone;\n  }\n\n  const modified = { timeZoneName: offsetFormat, ...intlOpts };\n\n  const parsed = new Intl.DateTimeFormat(locale, modified)\n    .formatToParts(date)\n    .find((m) => m.type.toLowerCase() === \"timezonename\");\n  return parsed ? parsed.value : null;\n}\n\n// signedOffset('-5', '30') -> -330\nexport function signedOffset(offHourStr, offMinuteStr) {\n  let offHour = parseInt(offHourStr, 10);\n\n  // don't || this because we want to preserve -0\n  if (Number.isNaN(offHour)) {\n    offHour = 0;\n  }\n\n  const offMin = parseInt(offMinuteStr, 10) || 0,\n    offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n  return offHour * 60 + offMinSigned;\n}\n\n// COERCION\n\nexport function asNumber(value) {\n  const numericValue = Number(value);\n  if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue))\n    throw new InvalidArgumentError(`Invalid unit value ${value}`);\n  return numericValue;\n}\n\nexport function normalizeObject(obj, normalizer) {\n  const normalized = {};\n  for (const u in obj) {\n    if (hasOwnProperty(obj, u)) {\n      const v = obj[u];\n      if (v === undefined || v === null) continue;\n      normalized[normalizer(u)] = asNumber(v);\n    }\n  }\n  return normalized;\n}\n\nexport function formatOffset(offset, format) {\n  const hours = Math.trunc(Math.abs(offset / 60)),\n    minutes = Math.trunc(Math.abs(offset % 60)),\n    sign = offset >= 0 ? \"+\" : \"-\";\n\n  switch (format) {\n    case \"short\":\n      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;\n    case \"narrow\":\n      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : \"\"}`;\n    case \"techie\":\n      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;\n    default:\n      throw new RangeError(`Value format ${format} is out of range for property format`);\n  }\n}\n\nexport function timeObject(obj) {\n  return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n}\n","import SystemZone from \"./zones/systemZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport Locale from \"./impl/locale.js\";\n\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\nimport { validateWeekSettings } from \"./impl/util.js\";\n\nlet now = () => Date.now(),\n  defaultZone = \"system\",\n  defaultLocale = null,\n  defaultNumberingSystem = null,\n  defaultOutputCalendar = null,\n  twoDigitCutoffYear = 60,\n  throwOnInvalid,\n  defaultWeekSettings = null;\n\n/**\n * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n */\nexport default class Settings {\n  /**\n   * Get the callback for returning the current timestamp.\n   * @type {function}\n   */\n  static get now() {\n    return now;\n  }\n\n  /**\n   * Set the callback for returning the current timestamp.\n   * The function should return a number, which will be interpreted as an Epoch millisecond count\n   * @type {function}\n   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n   */\n  static set now(n) {\n    now = n;\n  }\n\n  /**\n   * Set the default time zone to create DateTimes in. Does not affect existing instances.\n   * Use the value \"system\" to reset this value to the system's time zone.\n   * @type {string}\n   */\n  static set defaultZone(zone) {\n    defaultZone = zone;\n  }\n\n  /**\n   * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.\n   * The default value is the system's time zone (the one set on the machine that runs this code).\n   * @type {Zone}\n   */\n  static get defaultZone() {\n    return normalizeZone(defaultZone, SystemZone.instance);\n  }\n\n  /**\n   * Get the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultLocale() {\n    return defaultLocale;\n  }\n\n  /**\n   * Set the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultLocale(locale) {\n    defaultLocale = locale;\n  }\n\n  /**\n   * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultNumberingSystem() {\n    return defaultNumberingSystem;\n  }\n\n  /**\n   * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultNumberingSystem(numberingSystem) {\n    defaultNumberingSystem = numberingSystem;\n  }\n\n  /**\n   * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultOutputCalendar() {\n    return defaultOutputCalendar;\n  }\n\n  /**\n   * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultOutputCalendar(outputCalendar) {\n    defaultOutputCalendar = outputCalendar;\n  }\n\n  /**\n   * @typedef {Object} WeekSettings\n   * @property {number} firstDay\n   * @property {number} minimalDays\n   * @property {number[]} weekend\n   */\n\n  /**\n   * @return {WeekSettings|null}\n   */\n  static get defaultWeekSettings() {\n    return defaultWeekSettings;\n  }\n\n  /**\n   * Allows overriding the default locale week settings, i.e. the start of the week, the weekend and\n   * how many days are required in the first week of a year.\n   * Does not affect existing instances.\n   *\n   * @param {WeekSettings|null} weekSettings\n   */\n  static set defaultWeekSettings(weekSettings) {\n    defaultWeekSettings = validateWeekSettings(weekSettings);\n  }\n\n  /**\n   * Get the cutoff year after which a string encoding a year as two digits is interpreted to occur in the current century.\n   * @type {number}\n   */\n  static get twoDigitCutoffYear() {\n    return twoDigitCutoffYear;\n  }\n\n  /**\n   * Set the cutoff year after which a string encoding a year as two digits is interpreted to occur in the current century.\n   * @type {number}\n   * @example Settings.twoDigitCutoffYear = 0 // cut-off year is 0, so all 'yy' are interpreted as current century\n   * @example Settings.twoDigitCutoffYear = 50 // '49' -> 1949; '50' -> 2050\n   * @example Settings.twoDigitCutoffYear = 1950 // interpreted as 50\n   * @example Settings.twoDigitCutoffYear = 2050 // ALSO interpreted as 50\n   */\n  static set twoDigitCutoffYear(cutoffYear) {\n    twoDigitCutoffYear = cutoffYear % 100;\n  }\n\n  /**\n   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static get throwOnInvalid() {\n    return throwOnInvalid;\n  }\n\n  /**\n   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static set throwOnInvalid(t) {\n    throwOnInvalid = t;\n  }\n\n  /**\n   * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCaches() {\n    Locale.resetCache();\n    IANAZone.resetCache();\n  }\n}\n","export default class Invalid {\n  constructor(reason, explanation) {\n    this.reason = reason;\n    this.explanation = explanation;\n  }\n\n  toMessage() {\n    if (this.explanation) {\n      return `${this.reason}: ${this.explanation}`;\n    } else {\n      return this.reason;\n    }\n  }\n}\n","import {\n  integerBetween,\n  isLeapYear,\n  timeObject,\n  daysInYear,\n  daysInMonth,\n  weeksInWeekYear,\n  isInteger,\n  isUndefined,\n} from \"./util.js\";\nimport Invalid from \"./invalid.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n  leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\nfunction unitOutOfRange(unit, value) {\n  return new Invalid(\n    \"unit out of range\",\n    `you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`\n  );\n}\n\nexport function dayOfWeek(year, month, day) {\n  const d = new Date(Date.UTC(year, month - 1, day));\n\n  if (year < 100 && year >= 0) {\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n\n  const js = d.getUTCDay();\n\n  return js === 0 ? 7 : js;\n}\n\nfunction computeOrdinal(year, month, day) {\n  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n}\n\nfunction uncomputeOrdinal(year, ordinal) {\n  const table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n    month0 = table.findIndex((i) => i < ordinal),\n    day = ordinal - table[month0];\n  return { month: month0 + 1, day };\n}\n\nexport function isoWeekdayToLocal(isoWeekday, startOfWeek) {\n  return ((isoWeekday - startOfWeek + 7) % 7) + 1;\n}\n\n/**\n * @private\n */\n\nexport function gregorianToWeek(gregObj, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const { year, month, day } = gregObj,\n    ordinal = computeOrdinal(year, month, day),\n    weekday = isoWeekdayToLocal(dayOfWeek(year, month, day), startOfWeek);\n\n  let weekNumber = Math.floor((ordinal - weekday + 14 - minDaysInFirstWeek) / 7),\n    weekYear;\n\n  if (weekNumber < 1) {\n    weekYear = year - 1;\n    weekNumber = weeksInWeekYear(weekYear, minDaysInFirstWeek, startOfWeek);\n  } else if (weekNumber > weeksInWeekYear(year, minDaysInFirstWeek, startOfWeek)) {\n    weekYear = year + 1;\n    weekNumber = 1;\n  } else {\n    weekYear = year;\n  }\n\n  return { weekYear, weekNumber, weekday, ...timeObject(gregObj) };\n}\n\nexport function weekToGregorian(weekData, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const { weekYear, weekNumber, weekday } = weekData,\n    weekdayOfJan4 = isoWeekdayToLocal(dayOfWeek(weekYear, 1, minDaysInFirstWeek), startOfWeek),\n    yearInDays = daysInYear(weekYear);\n\n  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 7 + minDaysInFirstWeek,\n    year;\n\n  if (ordinal < 1) {\n    year = weekYear - 1;\n    ordinal += daysInYear(year);\n  } else if (ordinal > yearInDays) {\n    year = weekYear + 1;\n    ordinal -= daysInYear(weekYear);\n  } else {\n    year = weekYear;\n  }\n\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(weekData) };\n}\n\nexport function gregorianToOrdinal(gregData) {\n  const { year, month, day } = gregData;\n  const ordinal = computeOrdinal(year, month, day);\n  return { year, ordinal, ...timeObject(gregData) };\n}\n\nexport function ordinalToGregorian(ordinalData) {\n  const { year, ordinal } = ordinalData;\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(ordinalData) };\n}\n\n/**\n * Check if local week units like localWeekday are used in obj.\n * If so, validates that they are not mixed with ISO week units and then copies them to the normal week unit properties.\n * Modifies obj in-place!\n * @param obj the object values\n */\nexport function usesLocalWeekValues(obj, loc) {\n  const hasLocaleWeekData =\n    !isUndefined(obj.localWeekday) ||\n    !isUndefined(obj.localWeekNumber) ||\n    !isUndefined(obj.localWeekYear);\n  if (hasLocaleWeekData) {\n    const hasIsoWeekData =\n      !isUndefined(obj.weekday) || !isUndefined(obj.weekNumber) || !isUndefined(obj.weekYear);\n\n    if (hasIsoWeekData) {\n      throw new ConflictingSpecificationError(\n        \"Cannot mix locale-based week fields with ISO-based week fields\"\n      );\n    }\n    if (!isUndefined(obj.localWeekday)) obj.weekday = obj.localWeekday;\n    if (!isUndefined(obj.localWeekNumber)) obj.weekNumber = obj.localWeekNumber;\n    if (!isUndefined(obj.localWeekYear)) obj.weekYear = obj.localWeekYear;\n    delete obj.localWeekday;\n    delete obj.localWeekNumber;\n    delete obj.localWeekYear;\n    return {\n      minDaysInFirstWeek: loc.getMinDaysInFirstWeek(),\n      startOfWeek: loc.getStartOfWeek(),\n    };\n  } else {\n    return { minDaysInFirstWeek: 4, startOfWeek: 1 };\n  }\n}\n\nexport function hasInvalidWeekData(obj, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const validYear = isInteger(obj.weekYear),\n    validWeek = integerBetween(\n      obj.weekNumber,\n      1,\n      weeksInWeekYear(obj.weekYear, minDaysInFirstWeek, startOfWeek)\n    ),\n    validWeekday = integerBetween(obj.weekday, 1, 7);\n\n  if (!validYear) {\n    return unitOutOfRange(\"weekYear\", obj.weekYear);\n  } else if (!validWeek) {\n    return unitOutOfRange(\"week\", obj.weekNumber);\n  } else if (!validWeekday) {\n    return unitOutOfRange(\"weekday\", obj.weekday);\n  } else return false;\n}\n\nexport function hasInvalidOrdinalData(obj) {\n  const validYear = isInteger(obj.year),\n    validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validOrdinal) {\n    return unitOutOfRange(\"ordinal\", obj.ordinal);\n  } else return false;\n}\n\nexport function hasInvalidGregorianData(obj) {\n  const validYear = isInteger(obj.year),\n    validMonth = integerBetween(obj.month, 1, 12),\n    validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validMonth) {\n    return unitOutOfRange(\"month\", obj.month);\n  } else if (!validDay) {\n    return unitOutOfRange(\"day\", obj.day);\n  } else return false;\n}\n\nexport function hasInvalidTimeData(obj) {\n  const { hour, minute, second, millisecond } = obj;\n  const validHour =\n      integerBetween(hour, 0, 23) ||\n      (hour === 24 && minute === 0 && second === 0 && millisecond === 0),\n    validMinute = integerBetween(minute, 0, 59),\n    validSecond = integerBetween(second, 0, 59),\n    validMillisecond = integerBetween(millisecond, 0, 999);\n\n  if (!validHour) {\n    return unitOutOfRange(\"hour\", hour);\n  } else if (!validMinute) {\n    return unitOutOfRange(\"minute\", minute);\n  } else if (!validSecond) {\n    return unitOutOfRange(\"second\", second);\n  } else if (!validMillisecond) {\n    return unitOutOfRange(\"millisecond\", millisecond);\n  } else return false;\n}\n","import * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\n\nconst macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS,\n};\n\n/**\n * @private\n */\n\nexport default class Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n\n  static parseFormat(fmt) {\n    // white-space is always considered a literal in user-provided formats\n    // the \" \" token has a special meaning (see unitForToken)\n\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({ literal: bracketed || /^\\s+$/.test(currentFull), val: currentFull });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({ literal: /^\\s+$/.test(currentFull), val: currentFull });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n\n    if (currentFull.length > 0) {\n      splits.push({ literal: bracketed || /^\\s+$/.test(currentFull), val: currentFull });\n    }\n\n    return splits;\n  }\n\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  dtFormatter(dt, opts = {}) {\n    return this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n  }\n\n  formatDateTime(dt, opts) {\n    return this.dtFormatter(dt, opts).format();\n  }\n\n  formatDateTimeParts(dt, opts) {\n    return this.dtFormatter(dt, opts).formatToParts();\n  }\n\n  formatInterval(interval, opts) {\n    const df = this.dtFormatter(interval.start, opts);\n    return df.dtf.formatRange(interval.start.toJSDate(), interval.end.toJSDate());\n  }\n\n  resolvedOptions(dt, opts) {\n    return this.dtFormatter(dt, opts).resolvedOptions();\n  }\n\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n\n    const opts = { ...this.opts };\n\n    if (p > 0) {\n      opts.padTo = p;\n    }\n\n    return this.loc.numberFormatter(opts).format(n);\n  }\n\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = (opts) => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () =>\n        knownEnglish\n          ? English.meridiemForDateTime(dt)\n          : string({ hour: \"numeric\", hourCycle: \"h12\" }, \"dayperiod\"),\n      month = (length, standalone) =>\n        knownEnglish\n          ? English.monthForDateTime(dt, length)\n          : string(standalone ? { month: length } : { month: length, day: \"numeric\" }, \"month\"),\n      weekday = (length, standalone) =>\n        knownEnglish\n          ? English.weekdayForDateTime(dt, length)\n          : string(\n              standalone ? { weekday: length } : { weekday: length, month: \"long\", day: \"numeric\" },\n              \"weekday\"\n            ),\n      maybeMacro = (token) => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = (length) =>\n        knownEnglish ? English.eraForDateTime(dt, length) : string({ era: length }, \"era\"),\n      tokenToString = (token) => {\n        // Where possible: https://cldr.unicode.org/translation/date-time/date-time-symbols\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // fractional seconds\n          case \"uu\":\n            return this.num(Math.floor(dt.millisecond / 10), 2);\n          case \"uuu\":\n            return this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({ format: \"narrow\", allowZ: this.opts.allowZ });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({ format: \"short\", allowZ: this.opts.allowZ });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({ format: \"techie\", allowZ: this.opts.allowZ });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, { format: \"short\", locale: this.loc.locale });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, { format: \"long\", locale: this.loc.locale });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({ day: \"numeric\" }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({ day: \"2-digit\" }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({ year: \"numeric\" }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter\n              ? string({ year: \"2-digit\" }, \"year\")\n              : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"n\":\n            return this.num(dt.localWeekNumber);\n          case \"nn\":\n            return this.num(dt.localWeekNumber, 2);\n          case \"ii\":\n            return this.num(dt.localWeekYear.toString().slice(-2), 2);\n          case \"iiii\":\n            return this.num(dt.localWeekYear, 4);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = (token) => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"w\":\n            return \"week\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = (lildur) => (token) => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce(\n        (found, { literal, val }) => (literal ? found : found.concat(val)),\n        []\n      ),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t) => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n","import {\n  untruncateYear,\n  signedOffset,\n  parseInteger,\n  parseMillis,\n  isUndefined,\n  parseFloating,\n} from \"./util.js\";\nimport * as English from \"./english.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n/*\n * This file handles parsing for well-specified formats. Here's how it works:\n * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n */\n\nconst ianaRegex = /[A-Za-z_+-]{1,256}(?::?\\/[A-Za-z0-9_+-]{1,256}(?:\\/[A-Za-z0-9_+-]{1,256})?)?/;\n\nfunction combineRegexes(...regexes) {\n  const full = regexes.reduce((f, r) => f + r.source, \"\");\n  return RegExp(`^${full}$`);\n}\n\nfunction combineExtractors(...extractors) {\n  return (m) =>\n    extractors\n      .reduce(\n        ([mergedVals, mergedZone, cursor], ex) => {\n          const [val, zone, next] = ex(m, cursor);\n          return [{ ...mergedVals, ...val }, zone || mergedZone, next];\n        },\n        [{}, null, 1]\n      )\n      .slice(0, 2);\n}\n\nfunction parse(s, ...patterns) {\n  if (s == null) {\n    return [null, null];\n  }\n\n  for (const [regex, extractor] of patterns) {\n    const m = regex.exec(s);\n    if (m) {\n      return extractor(m);\n    }\n  }\n  return [null, null];\n}\n\nfunction simpleParse(...keys) {\n  return (match, cursor) => {\n    const ret = {};\n    let i;\n\n    for (i = 0; i < keys.length; i++) {\n      ret[keys[i]] = parseInteger(match[cursor + i]);\n    }\n    return [ret, null, cursor + i];\n  };\n}\n\n// ISO and SQL parsing\nconst offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/;\nconst isoExtendedZone = `(?:${offsetRegex.source}?(?:\\\\[(${ianaRegex.source})\\\\])?)?`;\nconst isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/;\nconst isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);\nconst isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`);\nconst isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/;\nconst isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/;\nconst isoOrdinalRegex = /(\\d{4})-?(\\d{3})/;\nconst extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\");\nconst extractISOOrdinalData = simpleParse(\"year\", \"ordinal\");\nconst sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/; // dumbed-down version of the ISO one\nconst sqlTimeRegex = RegExp(\n  `${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`\n);\nconst sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);\n\nfunction int(match, pos, fallback) {\n  const m = match[pos];\n  return isUndefined(m) ? fallback : parseInteger(m);\n}\n\nfunction extractISOYmd(match, cursor) {\n  const item = {\n    year: int(match, cursor),\n    month: int(match, cursor + 1, 1),\n    day: int(match, cursor + 2, 1),\n  };\n\n  return [item, null, cursor + 3];\n}\n\nfunction extractISOTime(match, cursor) {\n  const item = {\n    hours: int(match, cursor, 0),\n    minutes: int(match, cursor + 1, 0),\n    seconds: int(match, cursor + 2, 0),\n    milliseconds: parseMillis(match[cursor + 3]),\n  };\n\n  return [item, null, cursor + 4];\n}\n\nfunction extractISOOffset(match, cursor) {\n  const local = !match[cursor] && !match[cursor + 1],\n    fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n    zone = local ? null : FixedOffsetZone.instance(fullOffset);\n  return [{}, zone, cursor + 3];\n}\n\nfunction extractIANAZone(match, cursor) {\n  const zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n  return [{}, zone, cursor + 1];\n}\n\n// ISO time parsing\n\nconst isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);\n\n// ISO duration parsing\n\nconst isoDuration =\n  /^-?P(?:(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)Y)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)W)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)D)?(?:T(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)H)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,20}))?S)?)?)$/;\n\nfunction extractISODuration(match) {\n  const [s, yearStr, monthStr, weekStr, dayStr, hourStr, minuteStr, secondStr, millisecondsStr] =\n    match;\n\n  const hasNegativePrefix = s[0] === \"-\";\n  const negativeSeconds = secondStr && secondStr[0] === \"-\";\n\n  const maybeNegate = (num, force = false) =>\n    num !== undefined && (force || (num && hasNegativePrefix)) ? -num : num;\n\n  return [\n    {\n      years: maybeNegate(parseFloating(yearStr)),\n      months: maybeNegate(parseFloating(monthStr)),\n      weeks: maybeNegate(parseFloating(weekStr)),\n      days: maybeNegate(parseFloating(dayStr)),\n      hours: maybeNegate(parseFloating(hourStr)),\n      minutes: maybeNegate(parseFloating(minuteStr)),\n      seconds: maybeNegate(parseFloating(secondStr), secondStr === \"-0\"),\n      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds),\n    },\n  ];\n}\n\n// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n// and not just that we're in -240 *right now*. But since I don't think these are used that often\n// I'm just going to ignore that\nconst obsOffsets = {\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60,\n};\n\nfunction fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = {\n    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n    month: English.monthsShort.indexOf(monthStr) + 1,\n    day: parseInteger(dayStr),\n    hour: parseInteger(hourStr),\n    minute: parseInteger(minuteStr),\n  };\n\n  if (secondStr) result.second = parseInteger(secondStr);\n  if (weekdayStr) {\n    result.weekday =\n      weekdayStr.length > 3\n        ? English.weekdaysLong.indexOf(weekdayStr) + 1\n        : English.weekdaysShort.indexOf(weekdayStr) + 1;\n  }\n\n  return result;\n}\n\n// RFC 2822/5322\nconst rfc2822 =\n  /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\n\nfunction extractRFC2822(match) {\n  const [\n      ,\n      weekdayStr,\n      dayStr,\n      monthStr,\n      yearStr,\n      hourStr,\n      minuteStr,\n      secondStr,\n      obsOffset,\n      milOffset,\n      offHourStr,\n      offMinuteStr,\n    ] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n\n  let offset;\n  if (obsOffset) {\n    offset = obsOffsets[obsOffset];\n  } else if (milOffset) {\n    offset = 0;\n  } else {\n    offset = signedOffset(offHourStr, offMinuteStr);\n  }\n\n  return [result, new FixedOffsetZone(offset)];\n}\n\nfunction preprocessRFC2822(s) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return s\n    .replace(/\\([^()]*\\)|[\\n\\t]/g, \" \")\n    .replace(/(\\s\\s+)/g, \" \")\n    .trim();\n}\n\n// http date\n\nconst rfc1123 =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  rfc850 =\n    /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  ascii =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\n\nfunction extractRFC1123Or850(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nfunction extractASCII(match) {\n  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nconst isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\nconst isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\nconst isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\nconst isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\n\nconst extractISOYmdTimeAndOffset = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOWeekTimeAndOffset = combineExtractors(\n  extractISOWeekData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOOrdinalDateAndTime = combineExtractors(\n  extractISOOrdinalData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOTimeAndOffset = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\n/*\n * @private\n */\n\nexport function parseISODate(s) {\n  return parse(\n    s,\n    [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset],\n    [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime],\n    [isoTimeCombinedRegex, extractISOTimeAndOffset]\n  );\n}\n\nexport function parseRFC2822Date(s) {\n  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n}\n\nexport function parseHTTPDate(s) {\n  return parse(\n    s,\n    [rfc1123, extractRFC1123Or850],\n    [rfc850, extractRFC1123Or850],\n    [ascii, extractASCII]\n  );\n}\n\nexport function parseISODuration(s) {\n  return parse(s, [isoDuration, extractISODuration]);\n}\n\nconst extractISOTimeOnly = combineExtractors(extractISOTime);\n\nexport function parseISOTimeOnly(s) {\n  return parse(s, [isoTimeOnly, extractISOTimeOnly]);\n}\n\nconst sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\nconst sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\n\nconst extractISOTimeOffsetAndIANAZone = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\nexport function parseSQL(s) {\n  return parse(\n    s,\n    [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]\n  );\n}\n","import { InvalidArgumentError, InvalidDurationError, InvalidUnitError } from \"./errors.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Locale from \"./impl/locale.js\";\nimport { parseISODuration, parseISOTimeOnly } from \"./impl/regexParser.js\";\nimport {\n  asNumber,\n  hasOwnProperty,\n  isNumber,\n  isUndefined,\n  normalizeObject,\n  roundTo,\n} from \"./impl/util.js\";\nimport Settings from \"./settings.js\";\nimport DateTime from \"./datetime.js\";\n\nconst INVALID = \"Invalid Duration\";\n\n// unit conversion constants\nexport const lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000,\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000,\n    },\n    hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1000 },\n    minutes: { seconds: 60, milliseconds: 60 * 1000 },\n    seconds: { milliseconds: 1000 },\n  },\n  casualMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: 52,\n      days: 365,\n      hours: 365 * 24,\n      minutes: 365 * 24 * 60,\n      seconds: 365 * 24 * 60 * 60,\n      milliseconds: 365 * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: 13,\n      days: 91,\n      hours: 91 * 24,\n      minutes: 91 * 24 * 60,\n      seconds: 91 * 24 * 60 * 60,\n      milliseconds: 91 * 24 * 60 * 60 * 1000,\n    },\n    months: {\n      weeks: 4,\n      days: 30,\n      hours: 30 * 24,\n      minutes: 30 * 24 * 60,\n      seconds: 30 * 24 * 60 * 60,\n      milliseconds: 30 * 24 * 60 * 60 * 1000,\n    },\n\n    ...lowOrderMatrix,\n  },\n  daysInYearAccurate = 146097.0 / 400,\n  daysInMonthAccurate = 146097.0 / 4800,\n  accurateMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: daysInYearAccurate / 7,\n      days: daysInYearAccurate,\n      hours: daysInYearAccurate * 24,\n      minutes: daysInYearAccurate * 24 * 60,\n      seconds: daysInYearAccurate * 24 * 60 * 60,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: daysInYearAccurate / 28,\n      days: daysInYearAccurate / 4,\n      hours: (daysInYearAccurate * 24) / 4,\n      minutes: (daysInYearAccurate * 24 * 60) / 4,\n      seconds: (daysInYearAccurate * 24 * 60 * 60) / 4,\n      milliseconds: (daysInYearAccurate * 24 * 60 * 60 * 1000) / 4,\n    },\n    months: {\n      weeks: daysInMonthAccurate / 7,\n      days: daysInMonthAccurate,\n      hours: daysInMonthAccurate * 24,\n      minutes: daysInMonthAccurate * 24 * 60,\n      seconds: daysInMonthAccurate * 24 * 60 * 60,\n      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000,\n    },\n    ...lowOrderMatrix,\n  };\n\n// units ordered by size\nconst orderedUnits = [\n  \"years\",\n  \"quarters\",\n  \"months\",\n  \"weeks\",\n  \"days\",\n  \"hours\",\n  \"minutes\",\n  \"seconds\",\n  \"milliseconds\",\n];\n\nconst reverseUnits = orderedUnits.slice(0).reverse();\n\n// clone really means \"create another instance just like this one, but with these changes\"\nfunction clone(dur, alts, clear = false) {\n  // deep merge for vals\n  const conf = {\n    values: clear ? alts.values : { ...dur.values, ...(alts.values || {}) },\n    loc: dur.loc.clone(alts.loc),\n    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy,\n    matrix: alts.matrix || dur.matrix,\n  };\n  return new Duration(conf);\n}\n\nfunction durationToMillis(matrix, vals) {\n  let sum = vals.milliseconds ?? 0;\n  for (const unit of reverseUnits.slice(1)) {\n    if (vals[unit]) {\n      sum += vals[unit] * matrix[unit][\"milliseconds\"];\n    }\n  }\n  return sum;\n}\n\n// NB: mutates parameters\nfunction normalizeValues(matrix, vals) {\n  // the logic below assumes the overall value of the duration is positive\n  // if this is not the case, factor is used to make it so\n  const factor = durationToMillis(matrix, vals) < 0 ? -1 : 1;\n\n  orderedUnits.reduceRight((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        const previousVal = vals[previous] * factor;\n        const conv = matrix[current][previous];\n\n        // if (previousVal < 0):\n        // lower order unit is negative (e.g. { years: 2, days: -2 })\n        // normalize this by reducing the higher order unit by the appropriate amount\n        // and increasing the lower order unit\n        // this can never make the higher order unit negative, because this function only operates\n        // on positive durations, so the amount of time represented by the lower order unit cannot\n        // be larger than the higher order unit\n        // else:\n        // lower order unit is positive (e.g. { years: 2, days: 450 } or { years: -2, days: 450 })\n        // in this case we attempt to convert as much as possible from the lower order unit into\n        // the higher order one\n        //\n        // Math.floor takes care of both of these cases, rounding away from 0\n        // if previousVal < 0 it makes the absolute value larger\n        // if previousVal >= it makes the absolute value smaller\n        const rollUp = Math.floor(previousVal / conv);\n        vals[current] += rollUp * factor;\n        vals[previous] -= rollUp * conv * factor;\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n\n  // try to convert any decimals into smaller units if possible\n  // for example for { years: 2.5, days: 0, seconds: 0 } we want to get { years: 2, days: 182, hours: 12 }\n  orderedUnits.reduce((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        const fraction = vals[previous] % 1;\n        vals[previous] -= fraction;\n        vals[current] += fraction * matrix[previous][current];\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n}\n\n// Remove all properties with a value of 0 from an object\nfunction removeZeroes(vals) {\n  const newVals = {};\n  for (const [key, value] of Object.entries(vals)) {\n    if (value !== 0) {\n      newVals[key] = value;\n    }\n  }\n  return newVals;\n}\n\n/**\n * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.\n *\n * Here is a brief overview of commonly used methods and getters in Duration:\n *\n * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.\n * * **Unit values** See the {@link Duration#years}, {@link Duration#months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.\n * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.\n * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.\n * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}\n *\n * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n */\nexport default class Duration {\n  /**\n   * @private\n   */\n  constructor(config) {\n    const accurate = config.conversionAccuracy === \"longterm\" || false;\n    let matrix = accurate ? accurateMatrix : casualMatrix;\n\n    if (config.matrix) {\n      matrix = config.matrix;\n    }\n\n    /**\n     * @access private\n     */\n    this.values = config.values;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.matrix = matrix;\n    /**\n     * @access private\n     */\n    this.isLuxonDuration = true;\n  }\n\n  /**\n   * Create Duration from a number of milliseconds.\n   * @param {number} count of milliseconds\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromMillis(count, opts) {\n    return Duration.fromObject({ milliseconds: count }, opts);\n  }\n\n  /**\n   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.\n   * If this object is empty then a zero milliseconds duration is returned.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.years\n   * @param {number} obj.quarters\n   * @param {number} obj.months\n   * @param {number} obj.weeks\n   * @param {number} obj.days\n   * @param {number} obj.hours\n   * @param {number} obj.minutes\n   * @param {number} obj.seconds\n   * @param {number} obj.milliseconds\n   * @param {Object} [opts=[]] - options for creating this Duration\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the custom conversion system to use\n   * @return {Duration}\n   */\n  static fromObject(obj, opts = {}) {\n    if (obj == null || typeof obj !== \"object\") {\n      throw new InvalidArgumentError(\n        `Duration.fromObject: argument expected to be an object, got ${\n          obj === null ? \"null\" : typeof obj\n        }`\n      );\n    }\n\n    return new Duration({\n      values: normalizeObject(obj, Duration.normalizeUnit),\n      loc: Locale.fromObject(opts),\n      conversionAccuracy: opts.conversionAccuracy,\n      matrix: opts.matrix,\n    });\n  }\n\n  /**\n   * Create a Duration from DurationLike.\n   *\n   * @param {Object | number | Duration} durationLike\n   * One of:\n   * - object with keys like 'years' and 'hours'.\n   * - number representing milliseconds\n   * - Duration instance\n   * @return {Duration}\n   */\n  static fromDurationLike(durationLike) {\n    if (isNumber(durationLike)) {\n      return Duration.fromMillis(durationLike);\n    } else if (Duration.isDuration(durationLike)) {\n      return durationLike;\n    } else if (typeof durationLike === \"object\") {\n      return Duration.fromObject(durationLike);\n    } else {\n      throw new InvalidArgumentError(\n        `Unknown duration argument ${durationLike} of type ${typeof durationLike}`\n      );\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 duration string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the preset conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n   * @return {Duration}\n   */\n  static fromISO(text, opts) {\n    const [parsed] = parseISODuration(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 time string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }\n   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @return {Duration}\n   */\n  static fromISOTime(text, opts) {\n    const [parsed] = parseISOTimeOnly(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create an invalid Duration.\n   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Duration}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDurationError(invalid);\n    } else {\n      return new Duration({ invalid });\n    }\n  }\n\n  /**\n   * @private\n   */\n  static normalizeUnit(unit) {\n    const normalized = {\n      year: \"years\",\n      years: \"years\",\n      quarter: \"quarters\",\n      quarters: \"quarters\",\n      month: \"months\",\n      months: \"months\",\n      week: \"weeks\",\n      weeks: \"weeks\",\n      day: \"days\",\n      days: \"days\",\n      hour: \"hours\",\n      hours: \"hours\",\n      minute: \"minutes\",\n      minutes: \"minutes\",\n      second: \"seconds\",\n      seconds: \"seconds\",\n      millisecond: \"milliseconds\",\n      milliseconds: \"milliseconds\",\n    }[unit ? unit.toLowerCase() : unit];\n\n    if (!normalized) throw new InvalidUnitError(unit);\n\n    return normalized;\n  }\n\n  /**\n   * Check if an object is a Duration. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDuration(o) {\n    return (o && o.isLuxonDuration) || false;\n  }\n\n  /**\n   * Get  the locale of a Duration, such 'en-GB'\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n   * * `S` for milliseconds\n   * * `s` for seconds\n   * * `m` for minutes\n   * * `h` for hours\n   * * `d` for days\n   * * `w` for weeks\n   * * `M` for months\n   * * `y` for years\n   * Notes:\n   * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n   * * Tokens can be escaped by wrapping with single quotes.\n   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - options\n   * @param {boolean} [opts.floor=true] - floor numerical values\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n    const fmtOpts = {\n      ...opts,\n      floor: opts.round !== false && opts.floor !== false,\n    };\n    return this.isValid\n      ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a string representation of a Duration with all units included.\n   * To modify its behavior, use `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\n   * @param {Object} opts - Formatting options. Accepts the same keys as the options parameter of the native `Intl.NumberFormat` constructor, as well as `listStyle`.\n   * @param {string} [opts.listStyle='narrow'] - How to format the merged list. Corresponds to the `style` property of the options parameter of the native `Intl.ListFormat` constructor.\n   * @example\n   * ```js\n   * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })\n   * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'\n   * dur.toHuman({ listStyle: \"long\" }) //=> '1 day, 5 hours, and 6 minutes'\n   * dur.toHuman({ unitDisplay: \"short\" }) //=> '1 day, 5 hr, 6 min'\n   * ```\n   */\n  toHuman(opts = {}) {\n    if (!this.isValid) return INVALID;\n\n    const l = orderedUnits\n      .map((unit) => {\n        const val = this.values[unit];\n        if (isUndefined(val)) {\n          return null;\n        }\n        return this.loc\n          .numberFormatter({ style: \"unit\", unitDisplay: \"long\", ...opts, unit: unit.slice(0, -1) })\n          .format(val);\n      })\n      .filter((n) => n);\n\n    return this.loc\n      .listFormatter({ type: \"conjunction\", style: opts.listStyle || \"narrow\", ...opts })\n      .format(l);\n  }\n\n  /**\n   * Returns a JavaScript object with this Duration's values.\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n   * @return {Object}\n   */\n  toObject() {\n    if (!this.isValid) return {};\n    return { ...this.values };\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n   * @return {string}\n   */\n  toISO() {\n    // we could use the formatter, but this is an easier way to get the minimum string\n    if (!this.isValid) return null;\n\n    let s = \"P\";\n    if (this.years !== 0) s += this.years + \"Y\";\n    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n    if (this.weeks !== 0) s += this.weeks + \"W\";\n    if (this.days !== 0) s += this.days + \"D\";\n    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)\n      s += \"T\";\n    if (this.hours !== 0) s += this.hours + \"H\";\n    if (this.minutes !== 0) s += this.minutes + \"M\";\n    if (this.seconds !== 0 || this.milliseconds !== 0)\n      // this will handle \"floating point madness\" by removing extra decimal places\n      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n    if (s === \"P\") s += \"T0S\";\n    return s;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.\n   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'\n   * @return {string}\n   */\n  toISOTime(opts = {}) {\n    if (!this.isValid) return null;\n\n    const millis = this.toMillis();\n    if (millis < 0 || millis >= 86400000) return null;\n\n    opts = {\n      suppressMilliseconds: false,\n      suppressSeconds: false,\n      includePrefix: false,\n      format: \"extended\",\n      ...opts,\n      includeOffset: false,\n    };\n\n    const dateTime = DateTime.fromMillis(millis, { zone: \"UTC\" });\n    return dateTime.toISOTime(opts);\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n   * @return {string}\n   */\n  toString() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a string representation of this Duration appropriate for the REPL.\n   * @return {string}\n   */\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    if (this.isValid) {\n      return `Duration { values: ${JSON.stringify(this.values)} }`;\n    } else {\n      return `Duration { Invalid, reason: ${this.invalidReason} }`;\n    }\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration.\n   * @return {number}\n   */\n  toMillis() {\n    if (!this.isValid) return NaN;\n\n    return durationToMillis(this.matrix, this.values);\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration),\n      result = {};\n\n    for (const k of orderedUnits) {\n      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n        result[k] = dur.get(k) + this.get(k);\n      }\n    }\n\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration);\n    return this.plus(dur.negate());\n  }\n\n  /**\n   * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === \"hours\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n   * @return {Duration}\n   */\n  mapUnits(fn) {\n    if (!this.isValid) return this;\n    const result = {};\n    for (const k of Object.keys(this.values)) {\n      result[k] = asNumber(fn(this.values[k], k));\n    }\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2\n   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0\n   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3\n   * @return {number}\n   */\n  get(unit) {\n    return this[Duration.normalizeUnit(unit)];\n  }\n\n  /**\n   * \"Set\" the values of specified units. Return a newly-constructed Duration.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dur.set({ years: 2017 })\n   * @example dur.set({ hours: 8, minutes: 30 })\n   * @return {Duration}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const mixed = { ...this.values, ...normalizeObject(values, Duration.normalizeUnit) };\n    return clone(this, { values: mixed });\n  }\n\n  /**\n   * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n   * @example dur.reconfigure({ locale: 'en-GB' })\n   * @return {Duration}\n   */\n  reconfigure({ locale, numberingSystem, conversionAccuracy, matrix } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem });\n    const opts = { loc, matrix, conversionAccuracy };\n    return clone(this, opts);\n  }\n\n  /**\n   * Return the length of the duration in the specified unit.\n   * @param {string} unit - a unit such as 'minutes' or 'days'\n   * @example Duration.fromObject({years: 1}).as('days') //=> 365\n   * @example Duration.fromObject({years: 1}).as('months') //=> 12\n   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n   * @return {number}\n   */\n  as(unit) {\n    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n  }\n\n  /**\n   * Reduce this Duration to its canonical representation in its current units.\n   * Assuming the overall value of the Duration is positive, this means:\n   * - excessive values for lower-order units are converted to higher-order units (if possible, see first and second example)\n   * - negative lower-order units are converted to higher order units (there must be such a higher order unit, otherwise\n   *   the overall value would be negative, see third example)\n   * - fractional values for higher-order units are converted to lower-order units (if possible, see fourth example)\n   *\n   * If the overall value is negative, the result of this method is equivalent to `this.negate().normalize().negate()`.\n   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n   * @example Duration.fromObject({ days: 5000 }).normalize().toObject() //=> { days: 5000 }\n   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n   * @example Duration.fromObject({ years: 2.5, days: 0, hours: 0 }).normalize().toObject() //=> { years: 2, days: 182, hours: 12 }\n   * @return {Duration}\n   */\n  normalize() {\n    if (!this.isValid) return this;\n    const vals = this.toObject();\n    normalizeValues(this.matrix, vals);\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Rescale units to its largest representation\n   * @example Duration.fromObject({ milliseconds: 90000 }).rescale().toObject() //=> { minutes: 1, seconds: 30 }\n   * @return {Duration}\n   */\n  rescale() {\n    if (!this.isValid) return this;\n    const vals = removeZeroes(this.normalize().shiftToAll().toObject());\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Convert this Duration into its representation in a different set of units.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n   * @return {Duration}\n   */\n  shiftTo(...units) {\n    if (!this.isValid) return this;\n\n    if (units.length === 0) {\n      return this;\n    }\n\n    units = units.map((u) => Duration.normalizeUnit(u));\n\n    const built = {},\n      accumulated = {},\n      vals = this.toObject();\n    let lastUnit;\n\n    for (const k of orderedUnits) {\n      if (units.indexOf(k) >= 0) {\n        lastUnit = k;\n\n        let own = 0;\n\n        // anything we haven't boiled down yet should get boiled to this unit\n        for (const ak in accumulated) {\n          own += this.matrix[ak][k] * accumulated[ak];\n          accumulated[ak] = 0;\n        }\n\n        // plus anything that's already in this unit\n        if (isNumber(vals[k])) {\n          own += vals[k];\n        }\n\n        // only keep the integer part for now in the hopes of putting any decimal part\n        // into a smaller unit later\n        const i = Math.trunc(own);\n        built[k] = i;\n        accumulated[k] = (own * 1000 - i * 1000) / 1000;\n\n        // otherwise, keep it in the wings to boil it later\n      } else if (isNumber(vals[k])) {\n        accumulated[k] = vals[k];\n      }\n    }\n\n    // anything leftover becomes the decimal for the last unit\n    // lastUnit must be defined since units is not empty\n    for (const key in accumulated) {\n      if (accumulated[key] !== 0) {\n        built[lastUnit] +=\n          key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n      }\n    }\n\n    normalizeValues(this.matrix, built);\n    return clone(this, { values: built }, true);\n  }\n\n  /**\n   * Shift this Duration to all available units.\n   * Same as shiftTo(\"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\")\n   * @return {Duration}\n   */\n  shiftToAll() {\n    if (!this.isValid) return this;\n    return this.shiftTo(\n      \"years\",\n      \"months\",\n      \"weeks\",\n      \"days\",\n      \"hours\",\n      \"minutes\",\n      \"seconds\",\n      \"milliseconds\"\n    );\n  }\n\n  /**\n   * Return the negative of this Duration.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n   * @return {Duration}\n   */\n  negate() {\n    if (!this.isValid) return this;\n    const negated = {};\n    for (const k of Object.keys(this.values)) {\n      negated[k] = this.values[k] === 0 ? 0 : -this.values[k];\n    }\n    return clone(this, { values: negated }, true);\n  }\n\n  /**\n   * Get the years.\n   * @type {number}\n   */\n  get years() {\n    return this.isValid ? this.values.years || 0 : NaN;\n  }\n\n  /**\n   * Get the quarters.\n   * @type {number}\n   */\n  get quarters() {\n    return this.isValid ? this.values.quarters || 0 : NaN;\n  }\n\n  /**\n   * Get the months.\n   * @type {number}\n   */\n  get months() {\n    return this.isValid ? this.values.months || 0 : NaN;\n  }\n\n  /**\n   * Get the weeks\n   * @type {number}\n   */\n  get weeks() {\n    return this.isValid ? this.values.weeks || 0 : NaN;\n  }\n\n  /**\n   * Get the days.\n   * @type {number}\n   */\n  get days() {\n    return this.isValid ? this.values.days || 0 : NaN;\n  }\n\n  /**\n   * Get the hours.\n   * @type {number}\n   */\n  get hours() {\n    return this.isValid ? this.values.hours || 0 : NaN;\n  }\n\n  /**\n   * Get the minutes.\n   * @type {number}\n   */\n  get minutes() {\n    return this.isValid ? this.values.minutes || 0 : NaN;\n  }\n\n  /**\n   * Get the seconds.\n   * @return {number}\n   */\n  get seconds() {\n    return this.isValid ? this.values.seconds || 0 : NaN;\n  }\n\n  /**\n   * Get the milliseconds.\n   * @return {number}\n   */\n  get milliseconds() {\n    return this.isValid ? this.values.milliseconds || 0 : NaN;\n  }\n\n  /**\n   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n   * on invalid DateTimes or Intervals.\n   * @return {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this Duration became invalid, or null if the Duration is valid\n   * @return {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Equality check\n   * Two Durations are equal iff they have the same units and the same values for each unit.\n   * @param {Duration} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    if (!this.loc.equals(other.loc)) {\n      return false;\n    }\n\n    function eq(v1, v2) {\n      // Consider 0 and undefined as equal\n      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;\n      return v1 === v2;\n    }\n\n    for (const u of orderedUnits) {\n      if (!eq(this.values[u], other.values[u])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import DateTime, { friendlyDateTime } from \"./datetime.js\";\nimport Duration from \"./duration.js\";\nimport Settings from \"./settings.js\";\nimport { InvalidArgumentError, InvalidIntervalError } from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport * as Formats from \"./impl/formats.js\";\n\nconst INVALID = \"Invalid Interval\";\n\n// checks if the start is equal to or before the end\nfunction validateStartEnd(start, end) {\n  if (!start || !start.isValid) {\n    return Interval.invalid(\"missing or invalid start\");\n  } else if (!end || !end.isValid) {\n    return Interval.invalid(\"missing or invalid end\");\n  } else if (end < start) {\n    return Interval.invalid(\n      \"end before start\",\n      `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`\n    );\n  } else {\n    return null;\n  }\n}\n\n/**\n * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n *\n * Here is a brief overview of the most commonly used methods and getters in Interval:\n *\n * * **Creation** To create an Interval, use {@link Interval.fromDateTimes}, {@link Interval.after}, {@link Interval.before}, or {@link Interval.fromISO}.\n * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.\n * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.\n * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval.merge}, {@link Interval.xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.\n * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}\n * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toLocaleString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.\n */\nexport default class Interval {\n  /**\n   * @private\n   */\n  constructor(config) {\n    /**\n     * @access private\n     */\n    this.s = config.start;\n    /**\n     * @access private\n     */\n    this.e = config.end;\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.isLuxonInterval = true;\n  }\n\n  /**\n   * Create an invalid Interval.\n   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Interval}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidIntervalError(invalid);\n    } else {\n      return new Interval({ invalid });\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n   * @param {DateTime|Date|Object} start\n   * @param {DateTime|Date|Object} end\n   * @return {Interval}\n   */\n  static fromDateTimes(start, end) {\n    const builtStart = friendlyDateTime(start),\n      builtEnd = friendlyDateTime(end);\n\n    const validateError = validateStartEnd(builtStart, builtEnd);\n\n    if (validateError == null) {\n      return new Interval({\n        start: builtStart,\n        end: builtEnd,\n      });\n    } else {\n      return validateError;\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and a Duration to extend to.\n   * @param {DateTime|Date|Object} start\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static after(start, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(start);\n    return Interval.fromDateTimes(dt, dt.plus(dur));\n  }\n\n  /**\n   * Create an Interval from an end DateTime and a Duration to extend backwards to.\n   * @param {DateTime|Date|Object} end\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static before(end, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(end);\n    return Interval.fromDateTimes(dt.minus(dur), dt);\n  }\n\n  /**\n   * Create an Interval from an ISO 8601 string.\n   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n   * @param {string} text - the ISO string to parse\n   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {Interval}\n   */\n  static fromISO(text, opts) {\n    const [s, e] = (text || \"\").split(\"/\", 2);\n    if (s && e) {\n      let start, startIsValid;\n      try {\n        start = DateTime.fromISO(s, opts);\n        startIsValid = start.isValid;\n      } catch (e) {\n        startIsValid = false;\n      }\n\n      let end, endIsValid;\n      try {\n        end = DateTime.fromISO(e, opts);\n        endIsValid = end.isValid;\n      } catch (e) {\n        endIsValid = false;\n      }\n\n      if (startIsValid && endIsValid) {\n        return Interval.fromDateTimes(start, end);\n      }\n\n      if (startIsValid) {\n        const dur = Duration.fromISO(e, opts);\n        if (dur.isValid) {\n          return Interval.after(start, dur);\n        }\n      } else if (endIsValid) {\n        const dur = Duration.fromISO(s, opts);\n        if (dur.isValid) {\n          return Interval.before(end, dur);\n        }\n      }\n    }\n    return Interval.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n  }\n\n  /**\n   * Check if an object is an Interval. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isInterval(o) {\n    return (o && o.isLuxonInterval) || false;\n  }\n\n  /**\n   * Returns the start of the Interval\n   * @type {DateTime}\n   */\n  get start() {\n    return this.isValid ? this.s : null;\n  }\n\n  /**\n   * Returns the end of the Interval\n   * @type {DateTime}\n   */\n  get end() {\n    return this.isValid ? this.e : null;\n  }\n\n  /**\n   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalidReason === null;\n  }\n\n  /**\n   * Returns an error code if this Interval is invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Returns the length of the Interval in the specified unit.\n   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n   * @return {number}\n   */\n  length(unit = \"milliseconds\") {\n    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;\n  }\n\n  /**\n   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n   * @param {string} [unit='milliseconds'] - the unit of time to count.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; this operation will always use the locale of the start DateTime\n   * @return {number}\n   */\n  count(unit = \"milliseconds\", opts) {\n    if (!this.isValid) return NaN;\n    const start = this.start.startOf(unit, opts);\n    let end;\n    if (opts?.useLocaleWeeks) {\n      end = this.end.reconfigure({ locale: start.locale });\n    } else {\n      end = this.end;\n    }\n    end = end.startOf(unit, opts);\n    return Math.floor(end.diff(start, unit).get(unit)) + (end.valueOf() !== this.end.valueOf());\n  }\n\n  /**\n   * Returns whether this Interval's start and end are both in the same unit of time\n   * @param {string} unit - the unit of time to check sameness on\n   * @return {boolean}\n   */\n  hasSame(unit) {\n    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end DateTimes.\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.s.valueOf() === this.e.valueOf();\n  }\n\n  /**\n   * Return whether this Interval's start is after the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isAfter(dateTime) {\n    if (!this.isValid) return false;\n    return this.s > dateTime;\n  }\n\n  /**\n   * Return whether this Interval's end is before the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isBefore(dateTime) {\n    if (!this.isValid) return false;\n    return this.e <= dateTime;\n  }\n\n  /**\n   * Return whether this Interval contains the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  contains(dateTime) {\n    if (!this.isValid) return false;\n    return this.s <= dateTime && this.e > dateTime;\n  }\n\n  /**\n   * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n   * @param {Object} values - the values to set\n   * @param {DateTime} values.start - the starting DateTime\n   * @param {DateTime} values.end - the ending DateTime\n   * @return {Interval}\n   */\n  set({ start, end } = {}) {\n    if (!this.isValid) return this;\n    return Interval.fromDateTimes(start || this.s, end || this.e);\n  }\n\n  /**\n   * Split this Interval at each of the specified DateTimes\n   * @param {...DateTime} dateTimes - the unit of time to count.\n   * @return {Array}\n   */\n  splitAt(...dateTimes) {\n    if (!this.isValid) return [];\n    const sorted = dateTimes\n        .map(friendlyDateTime)\n        .filter((d) => this.contains(d))\n        .sort((a, b) => a.toMillis() - b.toMillis()),\n      results = [];\n    let { s } = this,\n      i = 0;\n\n    while (s < this.e) {\n      const added = sorted[i] || this.e,\n        next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      i += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into smaller Intervals, each of the specified length.\n   * Left over time is grouped into a smaller interval\n   * @param {Duration|Object|number} duration - The length of each resulting interval.\n   * @return {Array}\n   */\n  splitBy(duration) {\n    const dur = Duration.fromDurationLike(duration);\n\n    if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n      return [];\n    }\n\n    let { s } = this,\n      idx = 1,\n      next;\n\n    const results = [];\n    while (s < this.e) {\n      const added = this.start.plus(dur.mapUnits((x) => x * idx));\n      next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      idx += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into the specified number of smaller intervals.\n   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n   * @return {Array}\n   */\n  divideEqually(numberOfParts) {\n    if (!this.isValid) return [];\n    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n  }\n\n  /**\n   * Return whether this Interval overlaps with the specified Interval\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  overlaps(other) {\n    return this.e > other.s && this.s < other.e;\n  }\n\n  /**\n   * Return whether this Interval's end is adjacent to the specified Interval's start.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsStart(other) {\n    if (!this.isValid) return false;\n    return +this.e === +other.s;\n  }\n\n  /**\n   * Return whether this Interval's start is adjacent to the specified Interval's end.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsEnd(other) {\n    if (!this.isValid) return false;\n    return +other.e === +this.s;\n  }\n\n  /**\n   * Return whether this Interval engulfs the start and end of the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  engulfs(other) {\n    if (!this.isValid) return false;\n    return this.s <= other.s && this.e >= other.e;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end as the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    return this.s.equals(other.s) && this.e.equals(other.e);\n  }\n\n  /**\n   * Return an Interval representing the intersection of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n   * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  intersection(other) {\n    if (!this.isValid) return this;\n    const s = this.s > other.s ? this.s : other.s,\n      e = this.e < other.e ? this.e : other.e;\n\n    if (s >= e) {\n      return null;\n    } else {\n      return Interval.fromDateTimes(s, e);\n    }\n  }\n\n  /**\n   * Return an Interval representing the union of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  union(other) {\n    if (!this.isValid) return this;\n    const s = this.s < other.s ? this.s : other.s,\n      e = this.e > other.e ? this.e : other.e;\n    return Interval.fromDateTimes(s, e);\n  }\n\n  /**\n   * Merge an array of Intervals into a equivalent minimal set of Intervals.\n   * Combines overlapping and adjacent Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static merge(intervals) {\n    const [found, final] = intervals\n      .sort((a, b) => a.s - b.s)\n      .reduce(\n        ([sofar, current], item) => {\n          if (!current) {\n            return [sofar, item];\n          } else if (current.overlaps(item) || current.abutsStart(item)) {\n            return [sofar, current.union(item)];\n          } else {\n            return [sofar.concat([current]), item];\n          }\n        },\n        [[], null]\n      );\n    if (final) {\n      found.push(final);\n    }\n    return found;\n  }\n\n  /**\n   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static xor(intervals) {\n    let start = null,\n      currentCount = 0;\n    const results = [],\n      ends = intervals.map((i) => [\n        { time: i.s, type: \"s\" },\n        { time: i.e, type: \"e\" },\n      ]),\n      flattened = Array.prototype.concat(...ends),\n      arr = flattened.sort((a, b) => a.time - b.time);\n\n    for (const i of arr) {\n      currentCount += i.type === \"s\" ? 1 : -1;\n\n      if (currentCount === 1) {\n        start = i.time;\n      } else {\n        if (start && +start !== +i.time) {\n          results.push(Interval.fromDateTimes(start, i.time));\n        }\n\n        start = null;\n      }\n    }\n\n    return Interval.merge(results);\n  }\n\n  /**\n   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n   * @param {...Interval} intervals\n   * @return {Array}\n   */\n  difference(...intervals) {\n    return Interval.xor([this].concat(intervals))\n      .map((i) => this.intersection(i))\n      .filter((i) => i && !i.isEmpty());\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for debugging.\n   * @return {string}\n   */\n  toString() {\n    if (!this.isValid) return INVALID;\n    return `[${this.s.toISO()} – ${this.e.toISO()})`;\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for the REPL.\n   * @return {string}\n   */\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    if (this.isValid) {\n      return `Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`;\n    } else {\n      return `Interval { Invalid, reason: ${this.invalidReason} }`;\n    }\n  }\n\n  /**\n   * Returns a localized string representing this Interval. Accepts the same options as the\n   * Intl.DateTimeFormat constructor and any presets defined by Luxon, such as\n   * {@link DateTime.DATE_FULL} or {@link DateTime.TIME_SIMPLE}. The exact behavior of this method\n   * is browser-specific, but in general it will return an appropriate representation of the\n   * Interval in the assigned locale. Defaults to the system's locale if no locale has been\n   * specified.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {Object} [formatOpts=DateTime.DATE_SHORT] - Either a DateTime preset or\n   * Intl.DateTimeFormat constructor options.\n   * @param {Object} opts - Options to override the configuration of the start DateTime.\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(); //=> 11/7/2022 – 11/8/2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL); //=> November 7 – 8, 2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL, { locale: 'fr-FR' }); //=> 7–8 novembre 2022\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString(DateTime.TIME_SIMPLE); //=> 6:00 – 8:00 PM\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> Mon, Nov 07, 6:00 – 8:00 p\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.s.loc.clone(opts), formatOpts).formatInterval(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Interval.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISO(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of date of this Interval.\n   * The time components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {string}\n   */\n  toISODate() {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISODate()}/${this.e.toISODate()}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of time of this Interval.\n   * The date components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISOTime(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this Interval formatted according to the specified format\n   * string. **You may not want this.** See {@link Interval#toLocaleString} for a more flexible\n   * formatting tool.\n   * @param {string} dateFormat - The format string. This string formats the start and end time.\n   * See {@link DateTime#toFormat} for details.\n   * @param {Object} opts - Options.\n   * @param {string} [opts.separator =  ' – '] - A separator to place between the start and end\n   * representations.\n   * @return {string}\n   */\n  toFormat(dateFormat, { separator = \" – \" } = {}) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;\n  }\n\n  /**\n   * Return a Duration representing the time spanned by this interval.\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n   * @return {Duration}\n   */\n  toDuration(unit, opts) {\n    if (!this.isValid) {\n      return Duration.invalid(this.invalidReason);\n    }\n    return this.e.diff(this.s, unit, opts);\n  }\n\n  /**\n   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n   * @param {function} mapFn\n   * @return {Interval}\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n   */\n  mapEndpoints(mapFn) {\n    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n  }\n}\n","import DateTime from \"./datetime.js\";\nimport Settings from \"./settings.js\";\nimport Locale from \"./impl/locale.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nimport { hasLocaleWeekInfo, hasRelative } from \"./impl/util.js\";\n\n/**\n * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n */\nexport default class Info {\n  /**\n   * Return whether the specified zone contains a DST.\n   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n   * @return {boolean}\n   */\n  static hasDST(zone = Settings.defaultZone) {\n    const proto = DateTime.now().setZone(zone).set({ month: 12 });\n\n    return !zone.isUniversal && proto.offset !== proto.set({ month: 6 }).offset;\n  }\n\n  /**\n   * Return whether the specified zone is a valid IANA specifier.\n   * @param {string} zone - Zone to check\n   * @return {boolean}\n   */\n  static isValidIANAZone(zone) {\n    return IANAZone.isValidZone(zone);\n  }\n\n  /**\n   * Converts the input into a {@link Zone} instance.\n   *\n   * * If `input` is already a Zone instance, it is returned unchanged.\n   * * If `input` is a string containing a valid time zone name, a Zone instance\n   *   with that name is returned.\n   * * If `input` is a string that doesn't refer to a known time zone, a Zone\n   *   instance with {@link Zone#isValid} == false is returned.\n   * * If `input is a number, a Zone instance with the specified fixed offset\n   *   in minutes is returned.\n   * * If `input` is `null` or `undefined`, the default zone is returned.\n   * @param {string|Zone|number} [input] - the value to be converted\n   * @return {Zone}\n   */\n  static normalizeZone(input) {\n    return normalizeZone(input, Settings.defaultZone);\n  }\n\n  /**\n   * Get the weekday on which the week starts according to the given locale.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @returns {number} the start of the week, 1 for Monday through 7 for Sunday\n   */\n  static getStartOfWeek({ locale = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale)).getStartOfWeek();\n  }\n\n  /**\n   * Get the minimum number of days necessary in a week before it is considered part of the next year according\n   * to the given locale.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @returns {number}\n   */\n  static getMinimumDaysInFirstWeek({ locale = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale)).getMinDaysInFirstWeek();\n  }\n\n  /**\n   * Get the weekdays, which are considered the weekend according to the given locale\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @returns {number[]} an array of weekdays, 1 for Monday through 7 for Sunday\n   */\n  static getWeekendWeekdays({ locale = null, locObj = null } = {}) {\n    // copy the array, because we cache it internally\n    return (locObj || Locale.create(locale)).getWeekendDays().slice();\n  }\n\n  /**\n   * Return an array of standalone month names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @example Info.months()[0] //=> 'January'\n   * @example Info.months('short')[0] //=> 'Jan'\n   * @example Info.months('numeric')[0] //=> '1'\n   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'\n   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'\n   * @return {Array}\n   */\n  static months(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);\n  }\n\n  /**\n   * Return an array of format month names.\n   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n   * changes the string.\n   * See {@link Info#months}\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @return {Array}\n   */\n  static monthsFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);\n  }\n\n  /**\n   * Return an array of standalone week names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @example Info.weekdays()[0] //=> 'Monday'\n   * @example Info.weekdays('short')[0] //=> 'Mon'\n   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'\n   * @return {Array}\n   */\n  static weekdays(length = \"long\", { locale = null, numberingSystem = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);\n  }\n\n  /**\n   * Return an array of format week names.\n   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n   * changes the string.\n   * See {@link Info#weekdays}\n   * @param {string} [length='long'] - the length of the month representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale=null] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @return {Array}\n   */\n  static weekdaysFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);\n  }\n\n  /**\n   * Return an array of meridiems.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]\n   * @return {Array}\n   */\n  static meridiems({ locale = null } = {}) {\n    return Locale.create(locale).meridiems();\n  }\n\n  /**\n   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n   * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.eras() //=> [ 'BC', 'AD' ]\n   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]\n   * @return {Array}\n   */\n  static eras(length = \"short\", { locale = null } = {}) {\n    return Locale.create(locale, null, \"gregory\").eras(length);\n  }\n\n  /**\n   * Return the set of available features in this environment.\n   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.\n   * Keys:\n   * * `relative`: whether this environment supports relative time formatting\n   * * `localeWeek`: whether this environment supports different weekdays for the start of the week based on the locale\n   * @example Info.features() //=> { relative: false, localeWeek: true }\n   * @return {Object}\n   */\n  static features() {\n    return { relative: hasRelative(), localeWeek: hasLocaleWeekInfo() };\n  }\n}\n","import Duration from \"../duration.js\";\n\nfunction dayDiff(earlier, later) {\n  const utcDayStart = (dt) => dt.toUTC(0, { keepLocalTime: true }).startOf(\"day\").valueOf(),\n    ms = utcDayStart(later) - utcDayStart(earlier);\n  return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n}\n\nfunction highOrderDiffs(cursor, later, units) {\n  const differs = [\n    [\"years\", (a, b) => b.year - a.year],\n    [\"quarters\", (a, b) => b.quarter - a.quarter + (b.year - a.year) * 4],\n    [\"months\", (a, b) => b.month - a.month + (b.year - a.year) * 12],\n    [\n      \"weeks\",\n      (a, b) => {\n        const days = dayDiff(a, b);\n        return (days - (days % 7)) / 7;\n      },\n    ],\n    [\"days\", dayDiff],\n  ];\n\n  const results = {};\n  const earlier = cursor;\n  let lowestOrder, highWater;\n\n  /* This loop tries to diff using larger units first.\n     If we overshoot, we backtrack and try the next smaller unit.\n     \"cursor\" starts out at the earlier timestamp and moves closer and closer to \"later\"\n     as we use smaller and smaller units.\n     highWater keeps track of where we would be if we added one more of the smallest unit,\n     this is used later to potentially convert any difference smaller than the smallest higher order unit\n     into a fraction of that smallest higher order unit\n  */\n  for (const [unit, differ] of differs) {\n    if (units.indexOf(unit) >= 0) {\n      lowestOrder = unit;\n\n      results[unit] = differ(cursor, later);\n      highWater = earlier.plus(results);\n\n      if (highWater > later) {\n        // we overshot the end point, backtrack cursor by 1\n        results[unit]--;\n        cursor = earlier.plus(results);\n\n        // if we are still overshooting now, we need to backtrack again\n        // this happens in certain situations when diffing times in different zones,\n        // because this calculation ignores time zones\n        if (cursor > later) {\n          // keep the \"overshot by 1\" around as highWater\n          highWater = cursor;\n          // backtrack cursor by 1\n          results[unit]--;\n          cursor = earlier.plus(results);\n        }\n      } else {\n        cursor = highWater;\n      }\n    }\n  }\n\n  return [cursor, results, highWater, lowestOrder];\n}\n\nexport default function (earlier, later, units, opts) {\n  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);\n\n  const remainingMillis = later - cursor;\n\n  const lowerOrderUnits = units.filter(\n    (u) => [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0\n  );\n\n  if (lowerOrderUnits.length === 0) {\n    if (highWater < later) {\n      highWater = cursor.plus({ [lowestOrder]: 1 });\n    }\n\n    if (highWater !== cursor) {\n      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n    }\n  }\n\n  const duration = Duration.fromObject(results, opts);\n\n  if (lowerOrderUnits.length > 0) {\n    return Duration.fromMillis(remainingMillis, opts)\n      .shiftTo(...lowerOrderUnits)\n      .plus(duration);\n  } else {\n    return duration;\n  }\n}\n","const numberingSystems = {\n  arab: \"[\\u0660-\\u0669]\",\n  arabext: \"[\\u06F0-\\u06F9]\",\n  bali: \"[\\u1B50-\\u1B59]\",\n  beng: \"[\\u09E6-\\u09EF]\",\n  deva: \"[\\u0966-\\u096F]\",\n  fullwide: \"[\\uFF10-\\uFF19]\",\n  gujr: \"[\\u0AE6-\\u0AEF]\",\n  hanidec: \"[〇|一|二|三|四|五|六|七|八|九]\",\n  khmr: \"[\\u17E0-\\u17E9]\",\n  knda: \"[\\u0CE6-\\u0CEF]\",\n  laoo: \"[\\u0ED0-\\u0ED9]\",\n  limb: \"[\\u1946-\\u194F]\",\n  mlym: \"[\\u0D66-\\u0D6F]\",\n  mong: \"[\\u1810-\\u1819]\",\n  mymr: \"[\\u1040-\\u1049]\",\n  orya: \"[\\u0B66-\\u0B6F]\",\n  tamldec: \"[\\u0BE6-\\u0BEF]\",\n  telu: \"[\\u0C66-\\u0C6F]\",\n  thai: \"[\\u0E50-\\u0E59]\",\n  tibt: \"[\\u0F20-\\u0F29]\",\n  latn: \"\\\\d\",\n};\n\nconst numberingSystemsUTF16 = {\n  arab: [1632, 1641],\n  arabext: [1776, 1785],\n  bali: [6992, 7001],\n  beng: [2534, 2543],\n  deva: [2406, 2415],\n  fullwide: [65296, 65303],\n  gujr: [2790, 2799],\n  khmr: [6112, 6121],\n  knda: [3302, 3311],\n  laoo: [3792, 3801],\n  limb: [6470, 6479],\n  mlym: [3430, 3439],\n  mong: [6160, 6169],\n  mymr: [4160, 4169],\n  orya: [2918, 2927],\n  tamldec: [3046, 3055],\n  telu: [3174, 3183],\n  thai: [3664, 3673],\n  tibt: [3872, 3881],\n};\n\nconst hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\n\nexport function parseDigits(str) {\n  let value = parseInt(str, 10);\n  if (isNaN(value)) {\n    value = \"\";\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n\n      if (str[i].search(numberingSystems.hanidec) !== -1) {\n        value += hanidecChars.indexOf(str[i]);\n      } else {\n        for (const key in numberingSystemsUTF16) {\n          const [min, max] = numberingSystemsUTF16[key];\n          if (code >= min && code <= max) {\n            value += code - min;\n          }\n        }\n      }\n    }\n    return parseInt(value, 10);\n  } else {\n    return value;\n  }\n}\n\nexport function digitRegex({ numberingSystem }, append = \"\") {\n  return new RegExp(`${numberingSystems[numberingSystem || \"latn\"]}${append}`);\n}\n","import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\n/**\n * @param token\n * @param {Locale} loc\n */\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\"), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\"), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        // this special-case \"token\" represents a place where a macro-token expanded into a white-space literal\n        // in this case we accept any non-newline white-space\n        case \" \":\n          return simple(/[^\\S\\n\\r]/);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour12: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  hour24: {\n    numeric: \"H\",\n    \"2-digit\": \"HH\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\",\n  },\n};\n\nfunction tokenForPart(part, formatOpts, resolvedOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    const isSpace = /^\\s+$/.test(value);\n    return {\n      literal: !isSpace,\n      val: isSpace ? \" \" : value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  // The user might have explicitly specified hour12 or hourCycle\n  // if so, respect their decision\n  // if not, refer back to the resolvedOpts, which are based on the locale\n  let actualType = type;\n  if (type === \"hour\") {\n    if (formatOpts.hour12 != null) {\n      actualType = formatOpts.hour12 ? \"hour12\" : \"hour24\";\n    } else if (formatOpts.hourCycle != null) {\n      if (formatOpts.hourCycle === \"h11\" || formatOpts.hourCycle === \"h12\") {\n        actualType = \"hour12\";\n      } else {\n        actualType = \"hour24\";\n      }\n    } else {\n      // tokens only differentiate between 24 hours or not,\n      // so we do not need to check hourCycle here, which is less supported anyways\n      actualType = resolvedOpts.hour12 ? \"hour12\" : \"hour24\";\n    }\n  }\n  let val = partTypeStyleToTokenVal[actualType];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches\n        ? dateTimeFromMatches(matches)\n        : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone, specificOffset };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\n\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const df = formatter.dtFormatter(getDummyDateTime());\n  const parts = df.formatToParts();\n  const resolvedOpts = df.resolvedOptions();\n  return parts.map((p) => tokenForPart(p, formatOpts, resolvedOpts));\n}\n","import Duration from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Settings from \"./settings.js\";\nimport Info from \"./info.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport Locale from \"./impl/locale.js\";\nimport {\n  isUndefined,\n  maybeArray,\n  isDate,\n  isNumber,\n  bestBy,\n  daysInMonth,\n  daysInYear,\n  isLeapYear,\n  weeksInWeekYear,\n  normalizeObject,\n  roundTo,\n  objToLocalTS,\n  padStart,\n} from \"./impl/util.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\nimport diff from \"./impl/diff.js\";\nimport { parseRFC2822Date, parseISODate, parseHTTPDate, parseSQL } from \"./impl/regexParser.js\";\nimport {\n  parseFromTokens,\n  explainFromTokens,\n  formatOptsToTokens,\n  expandMacroTokens,\n} from \"./impl/tokenParser.js\";\nimport {\n  gregorianToWeek,\n  weekToGregorian,\n  gregorianToOrdinal,\n  ordinalToGregorian,\n  hasInvalidGregorianData,\n  hasInvalidWeekData,\n  hasInvalidOrdinalData,\n  hasInvalidTimeData,\n  usesLocalWeekValues,\n  isoWeekdayToLocal,\n} from \"./impl/conversions.js\";\nimport * as Formats from \"./impl/formats.js\";\nimport {\n  InvalidArgumentError,\n  ConflictingSpecificationError,\n  InvalidUnitError,\n  InvalidDateTimeError,\n} from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid DateTime\";\nconst MAX_DATE = 8.64e15;\n\nfunction unsupportedZone(zone) {\n  return new Invalid(\"unsupported zone\", `the zone \"${zone.name}\" is not supported`);\n}\n\n// we cache week data on the DT object and this intermediates the cache\n/**\n * @param {DateTime} dt\n */\nfunction possiblyCachedWeekData(dt) {\n  if (dt.weekData === null) {\n    dt.weekData = gregorianToWeek(dt.c);\n  }\n  return dt.weekData;\n}\n\n/**\n * @param {DateTime} dt\n */\nfunction possiblyCachedLocalWeekData(dt) {\n  if (dt.localWeekData === null) {\n    dt.localWeekData = gregorianToWeek(\n      dt.c,\n      dt.loc.getMinDaysInFirstWeek(),\n      dt.loc.getStartOfWeek()\n    );\n  }\n  return dt.localWeekData;\n}\n\n// clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n// to create a new object while only changing some of the properties\nfunction clone(inst, alts) {\n  const current = {\n    ts: inst.ts,\n    zone: inst.zone,\n    c: inst.c,\n    o: inst.o,\n    loc: inst.loc,\n    invalid: inst.invalid,\n  };\n  return new DateTime({ ...current, ...alts, old: current });\n}\n\n// find the right offset a given local time. The o input is our guess, which determines which\n// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\nfunction fixOffset(localTS, o, tz) {\n  // Our UTC time is just a guess because our offset is just a guess\n  let utcGuess = localTS - o * 60 * 1000;\n\n  // Test whether the zone matches the offset for this ts\n  const o2 = tz.offset(utcGuess);\n\n  // If so, offset didn't change and we're done\n  if (o === o2) {\n    return [utcGuess, o];\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= (o2 - o) * 60 * 1000;\n\n  // If that gives us the local time we want, we're done\n  const o3 = tz.offset(utcGuess);\n  if (o2 === o3) {\n    return [utcGuess, o2];\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n}\n\n// convert an epoch timestamp into a calendar object with the given offset\nfunction tsToObj(ts, offset) {\n  ts += offset * 60 * 1000;\n\n  const d = new Date(ts);\n\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth() + 1,\n    day: d.getUTCDate(),\n    hour: d.getUTCHours(),\n    minute: d.getUTCMinutes(),\n    second: d.getUTCSeconds(),\n    millisecond: d.getUTCMilliseconds(),\n  };\n}\n\n// convert a calendar object to a epoch timestamp\nfunction objToTS(obj, offset, zone) {\n  return fixOffset(objToLocalTS(obj), offset, zone);\n}\n\n// create a new DT instance by adding a duration, adjusting for DSTs\nfunction adjustTime(inst, dur) {\n  const oPre = inst.o,\n    year = inst.c.year + Math.trunc(dur.years),\n    month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n    c = {\n      ...inst.c,\n      year,\n      month,\n      day:\n        Math.min(inst.c.day, daysInMonth(year, month)) +\n        Math.trunc(dur.days) +\n        Math.trunc(dur.weeks) * 7,\n    },\n    millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds,\n    }).as(\"milliseconds\"),\n    localTS = objToLocalTS(c);\n\n  let [ts, o] = fixOffset(localTS, oPre, inst.zone);\n\n  if (millisToAdd !== 0) {\n    ts += millisToAdd;\n    // that could have changed the offset by going over a DST, but we want to keep the ts the same\n    o = inst.zone.offset(ts);\n  }\n\n  return { ts, o };\n}\n\n// helper useful in turning the results of parsing into real dates\n// by handling the zone options\nfunction parseDataToDateTime(parsed, parsedZone, opts, format, text, specificOffset) {\n  const { setZone, zone } = opts;\n  if ((parsed && Object.keys(parsed).length !== 0) || parsedZone) {\n    const interpretationZone = parsedZone || zone,\n      inst = DateTime.fromObject(parsed, {\n        ...opts,\n        zone: interpretationZone,\n        specificOffset,\n      });\n    return setZone ? inst : inst.setZone(zone);\n  } else {\n    return DateTime.invalid(\n      new Invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ${format}`)\n    );\n  }\n}\n\n// if you want to output a technical format (e.g. RFC 2822), this helper\n// helps handle the details\nfunction toTechFormat(dt, format, allowZ = true) {\n  return dt.isValid\n    ? Formatter.create(Locale.create(\"en-US\"), {\n        allowZ,\n        forceSimple: true,\n      }).formatDateTimeFromString(dt, format)\n    : null;\n}\n\nfunction toISODate(o, extended) {\n  const longFormat = o.c.year > 9999 || o.c.year < 0;\n  let c = \"\";\n  if (longFormat && o.c.year >= 0) c += \"+\";\n  c += padStart(o.c.year, longFormat ? 6 : 4);\n\n  if (extended) {\n    c += \"-\";\n    c += padStart(o.c.month);\n    c += \"-\";\n    c += padStart(o.c.day);\n  } else {\n    c += padStart(o.c.month);\n    c += padStart(o.c.day);\n  }\n  return c;\n}\n\nfunction toISOTime(\n  o,\n  extended,\n  suppressSeconds,\n  suppressMilliseconds,\n  includeOffset,\n  extendedZone\n) {\n  let c = padStart(o.c.hour);\n  if (extended) {\n    c += \":\";\n    c += padStart(o.c.minute);\n    if (o.c.millisecond !== 0 || o.c.second !== 0 || !suppressSeconds) {\n      c += \":\";\n    }\n  } else {\n    c += padStart(o.c.minute);\n  }\n\n  if (o.c.millisecond !== 0 || o.c.second !== 0 || !suppressSeconds) {\n    c += padStart(o.c.second);\n\n    if (o.c.millisecond !== 0 || !suppressMilliseconds) {\n      c += \".\";\n      c += padStart(o.c.millisecond, 3);\n    }\n  }\n\n  if (includeOffset) {\n    if (o.isOffsetFixed && o.offset === 0 && !extendedZone) {\n      c += \"Z\";\n    } else if (o.o < 0) {\n      c += \"-\";\n      c += padStart(Math.trunc(-o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(-o.o % 60));\n    } else {\n      c += \"+\";\n      c += padStart(Math.trunc(o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(o.o % 60));\n    }\n  }\n\n  if (extendedZone) {\n    c += \"[\" + o.zone.ianaName + \"]\";\n  }\n  return c;\n}\n\n// defaults for unspecified units in the supported calendars\nconst defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  };\n\n// Units in the supported calendars, sorted by bigness\nconst orderedUnits = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedWeekUnits = [\n    \"weekYear\",\n    \"weekNumber\",\n    \"weekday\",\n    \"hour\",\n    \"minute\",\n    \"second\",\n    \"millisecond\",\n  ],\n  orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"];\n\n// standardize case and plurality in units\nfunction normalizeUnit(unit) {\n  const normalized = {\n    year: \"year\",\n    years: \"year\",\n    month: \"month\",\n    months: \"month\",\n    day: \"day\",\n    days: \"day\",\n    hour: \"hour\",\n    hours: \"hour\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    quarter: \"quarter\",\n    quarters: \"quarter\",\n    second: \"second\",\n    seconds: \"second\",\n    millisecond: \"millisecond\",\n    milliseconds: \"millisecond\",\n    weekday: \"weekday\",\n    weekdays: \"weekday\",\n    weeknumber: \"weekNumber\",\n    weeksnumber: \"weekNumber\",\n    weeknumbers: \"weekNumber\",\n    weekyear: \"weekYear\",\n    weekyears: \"weekYear\",\n    ordinal: \"ordinal\",\n  }[unit.toLowerCase()];\n\n  if (!normalized) throw new InvalidUnitError(unit);\n\n  return normalized;\n}\n\nfunction normalizeUnitWithLocalWeeks(unit) {\n  switch (unit.toLowerCase()) {\n    case \"localweekday\":\n    case \"localweekdays\":\n      return \"localWeekday\";\n    case \"localweeknumber\":\n    case \"localweeknumbers\":\n      return \"localWeekNumber\";\n    case \"localweekyear\":\n    case \"localweekyears\":\n      return \"localWeekYear\";\n    default:\n      return normalizeUnit(unit);\n  }\n}\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\nfunction quickDT(obj, opts) {\n  const zone = normalizeZone(opts.zone, Settings.defaultZone),\n    loc = Locale.fromObject(opts),\n    tsNow = Settings.now();\n\n  let ts, o;\n\n  // assume we have the higher-order units\n  if (!isUndefined(obj.year)) {\n    for (const u of orderedUnits) {\n      if (isUndefined(obj[u])) {\n        obj[u] = defaultUnitValues[u];\n      }\n    }\n\n    const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    const offsetProvis = zone.offset(tsNow);\n    [ts, o] = objToTS(obj, offsetProvis, zone);\n  } else {\n    ts = tsNow;\n  }\n\n  return new DateTime({ ts, zone, loc, o });\n}\n\nfunction diffRelative(start, end, opts) {\n  const round = isUndefined(opts.round) ? true : opts.round,\n    format = (c, unit) => {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      const formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n    differ = (unit) => {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n\n  if (opts.unit) {\n    return format(differ(opts.unit), opts.unit);\n  }\n\n  for (const unit of opts.units) {\n    const count = differ(unit);\n    if (Math.abs(count) >= 1) {\n      return format(count, unit);\n    }\n  }\n  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);\n}\n\nfunction lastOpts(argList) {\n  let opts = {},\n    args;\n  if (argList.length > 0 && typeof argList[argList.length - 1] === \"object\") {\n    opts = argList[argList.length - 1];\n    args = Array.from(argList).slice(0, argList.length - 1);\n  } else {\n    args = Array.from(argList);\n  }\n  return [opts, args];\n}\n\n/**\n * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n *\n * A DateTime comprises of:\n * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n *\n * Here is a brief overview of the most commonly used functionality it provides:\n *\n * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime.local}, {@link DateTime.utc}, and (most flexibly) {@link DateTime.fromObject}. To create one from a standard string format, use {@link DateTime.fromISO}, {@link DateTime.fromHTTP}, and {@link DateTime.fromRFC2822}. To create one from a custom string format, use {@link DateTime.fromFormat}. To create one from a native JS date, use {@link DateTime.fromJSDate}.\n * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},\n * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.\n * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.\n * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.\n * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.\n * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.\n *\n * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n */\nexport default class DateTime {\n  /**\n   * @access private\n   */\n  constructor(config) {\n    const zone = config.zone || Settings.defaultZone;\n\n    let invalid =\n      config.invalid ||\n      (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) ||\n      (!zone.isValid ? unsupportedZone(zone) : null);\n    /**\n     * @access private\n     */\n    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n\n    let c = null,\n      o = null;\n    if (!invalid) {\n      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n\n      if (unchanged) {\n        [c, o] = [config.old.c, config.old.o];\n      } else {\n        const ot = zone.offset(this.ts);\n        c = tsToObj(this.ts, ot);\n        invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n        c = invalid ? null : c;\n        o = invalid ? null : ot;\n      }\n    }\n\n    /**\n     * @access private\n     */\n    this._zone = zone;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.invalid = invalid;\n    /**\n     * @access private\n     */\n    this.weekData = null;\n    /**\n     * @access private\n     */\n    this.localWeekData = null;\n    /**\n     * @access private\n     */\n    this.c = c;\n    /**\n     * @access private\n     */\n    this.o = o;\n    /**\n     * @access private\n     */\n    this.isLuxonDateTime = true;\n  }\n\n  // CONSTRUCT\n\n  /**\n   * Create a DateTime for the current instant, in the system's time zone.\n   *\n   * Use Settings to override these default values if needed.\n   * @example DateTime.now().toISO() //~> now in the ISO format\n   * @return {DateTime}\n   */\n  static now() {\n    return new DateTime({});\n  }\n\n  /**\n   * Create a local DateTime\n   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month, 1-indexed\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.local()                                  //~> now\n   * @example DateTime.local({ zone: \"America/New_York\" })      //~> now, in US east coast time\n   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00\n   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00\n   * @example DateTime.local(2017, 3, 12, { locale: \"fr\" })     //~> 2017-03-12T00:00:00, with a French locale\n   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00\n   * @example DateTime.local(2017, 3, 12, 5, { zone: \"utc\" })   //~> 2017-03-12T05:00:00, in UTC\n   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765\n   * @return {DateTime}\n   */\n  static local() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime in UTC\n   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.utc()                                              //~> now\n   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z\n   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: \"fr\" })          //~> 2017-03-12T05:45:00Z with a French locale\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: \"fr\" }) //~> 2017-03-12T05:45:10.765Z with a French locale\n   * @return {DateTime}\n   */\n  static utc() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n\n    opts.zone = FixedOffsetZone.utcInstance;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime from a JavaScript Date object. Uses the default zone.\n   * @param {Date} date - a JavaScript Date object\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @return {DateTime}\n   */\n  static fromJSDate(date, options = {}) {\n    const ts = isDate(date) ? date.valueOf() : NaN;\n    if (Number.isNaN(ts)) {\n      return DateTime.invalid(\"invalid input\");\n    }\n\n    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    return new DateTime({\n      ts: ts,\n      zone: zoneToUse,\n      loc: Locale.fromObject(options),\n    });\n  }\n\n  /**\n   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromMillis(milliseconds, options = {}) {\n    if (!isNumber(milliseconds)) {\n      throw new InvalidArgumentError(\n        `fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`\n      );\n    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start\n      return DateTime.invalid(\"Timestamp out of range\");\n    } else {\n      return new DateTime({\n        ts: milliseconds,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} seconds - a number of seconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromSeconds(seconds, options = {}) {\n    if (!isNumber(seconds)) {\n      throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n    } else {\n      return new DateTime({\n        ts: seconds * 1000,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.year - a year, such as 1987\n   * @param {number} obj.month - a month, 1-12\n   * @param {number} obj.day - a day of the month, 1-31, depending on the month\n   * @param {number} obj.ordinal - day of the year, 1-365 or 366\n   * @param {number} obj.weekYear - an ISO week year\n   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n   * @param {number} obj.localWeekYear - a week year, according to the locale\n   * @param {number} obj.localWeekNumber - a week number, between 1 and 52 or 53, depending on the year, according to the locale\n   * @param {number} obj.localWeekday - a weekday, 1-7, where 1 is the first and 7 is the last day of the week, according to the locale\n   * @param {number} obj.hour - hour of the day, 0-23\n   * @param {number} obj.minute - minute of the hour, 0-59\n   * @param {number} obj.second - second of the minute, 0-59\n   * @param {number} obj.millisecond - millisecond of the second, 0-999\n   * @param {Object} opts - options for creating this DateTime\n   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n   * @param {string} [opts.locale='system\\'s locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })\n   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n   * @example DateTime.fromObject({ localWeekYear: 2022, localWeekNumber: 1, localWeekday: 1 }, { locale: \"en-US\" }).toISODate() //=> '2021-12-26'\n   * @return {DateTime}\n   */\n  static fromObject(obj, opts = {}) {\n    obj = obj || {};\n    const zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    const loc = Locale.fromObject(opts);\n    const normalized = normalizeObject(obj, normalizeUnitWithLocalWeeks);\n    const { minDaysInFirstWeek, startOfWeek } = usesLocalWeekValues(normalized, loc);\n\n    const tsNow = Settings.now(),\n      offsetProvis = !isUndefined(opts.specificOffset)\n        ? opts.specificOffset\n        : zoneToUse.offset(tsNow),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    // cases:\n    // just a weekday -> this week's instance of that weekday, no worries\n    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n    // (gregorian month or day) + ordinal -> error\n    // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    const useWeekData = definiteWeekDef || (normalized.weekday && !containsGregor);\n\n    // configure ourselves to deal with gregorian dates or week stuff\n    let units,\n      defaultValues,\n      objNow = tsToObj(tsNow, offsetProvis);\n    if (useWeekData) {\n      units = orderedWeekUnits;\n      defaultValues = defaultWeekUnitValues;\n      objNow = gregorianToWeek(objNow, minDaysInFirstWeek, startOfWeek);\n    } else if (containsOrdinal) {\n      units = orderedOrdinalUnits;\n      defaultValues = defaultOrdinalUnitValues;\n      objNow = gregorianToOrdinal(objNow);\n    } else {\n      units = orderedUnits;\n      defaultValues = defaultUnitValues;\n    }\n\n    // set default values for missing stuff\n    let foundFirst = false;\n    for (const u of units) {\n      const v = normalized[u];\n      if (!isUndefined(v)) {\n        foundFirst = true;\n      } else if (foundFirst) {\n        normalized[u] = defaultValues[u];\n      } else {\n        normalized[u] = objNow[u];\n      }\n    }\n\n    // make sure the values we have are in range\n    const higherOrderInvalid = useWeekData\n        ? hasInvalidWeekData(normalized, minDaysInFirstWeek, startOfWeek)\n        : containsOrdinal\n        ? hasInvalidOrdinalData(normalized)\n        : hasInvalidGregorianData(normalized),\n      invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    // compute the actual time\n    const gregorian = useWeekData\n        ? weekToGregorian(normalized, minDaysInFirstWeek, startOfWeek)\n        : containsOrdinal\n        ? ordinalToGregorian(normalized)\n        : normalized,\n      [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse),\n      inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc,\n      });\n\n    // gregorian data + weekday serves only to validate\n    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n      return DateTime.invalid(\n        \"mismatched weekday\",\n        `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`\n      );\n    }\n\n    return inst;\n  }\n\n  /**\n   * Create a DateTime from an ISO 8601 string\n   * @param {string} text - the ISO string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n   * @example DateTime.fromISO('2016-W05-4')\n   * @return {DateTime}\n   */\n  static fromISO(text, opts = {}) {\n    const [vals, parsedZone] = parseISODate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n  }\n\n  /**\n   * Create a DateTime from an RFC 2822 string\n   * @param {string} text - the RFC 2822 string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n   * @return {DateTime}\n   */\n  static fromRFC2822(text, opts = {}) {\n    const [vals, parsedZone] = parseRFC2822Date(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n  }\n\n  /**\n   * Create a DateTime from an HTTP header date\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @param {string} text - the HTTP header date\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n   * @return {DateTime}\n   */\n  static fromHTTP(text, opts = {}) {\n    const [vals, parsedZone] = parseHTTPDate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n  }\n\n  /**\n   * Create a DateTime from an input string and format string.\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromFormat(text, fmt, opts = {}) {\n    if (isUndefined(text) || isUndefined(fmt)) {\n      throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n    }\n\n    const { locale = null, numberingSystem = null } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      }),\n      [vals, parsedZone, specificOffset, invalid] = parseFromTokens(localeToUse, text, fmt);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    } else {\n      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text, specificOffset);\n    }\n  }\n\n  /**\n   * @deprecated use fromFormat instead\n   */\n  static fromString(text, fmt, opts = {}) {\n    return DateTime.fromFormat(text, fmt, opts);\n  }\n\n  /**\n   * Create a DateTime from a SQL date, time, or datetime\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale\n   * @param {string} text - the string to parse\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @example DateTime.fromSQL('2017-05-15')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n   * @example DateTime.fromSQL('09:12:34.342')\n   * @return {DateTime}\n   */\n  static fromSQL(text, opts = {}) {\n    const [vals, parsedZone] = parseSQL(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n  }\n\n  /**\n   * Create an invalid DateTime.\n   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent.\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {DateTime}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDateTimeError(invalid);\n    } else {\n      return new DateTime({ invalid });\n    }\n  }\n\n  /**\n   * Check if an object is an instance of DateTime. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDateTime(o) {\n    return (o && o.isLuxonDateTime) || false;\n  }\n\n  /**\n   * Produce the format string for a set of options\n   * @param formatOpts\n   * @param localeOpts\n   * @returns {string}\n   */\n  static parseFormatForOpts(formatOpts, localeOpts = {}) {\n    const tokenList = formatOptsToTokens(formatOpts, Locale.fromObject(localeOpts));\n    return !tokenList ? null : tokenList.map((t) => (t ? t.val : null)).join(\"\");\n  }\n\n  /**\n   * Produce the the fully expanded format token for the locale\n   * Does NOT quote characters, so quoted tokens will not round trip correctly\n   * @param fmt\n   * @param localeOpts\n   * @returns {string}\n   */\n  static expandFormat(fmt, localeOpts = {}) {\n    const expanded = expandMacroTokens(Formatter.parseFormat(fmt), Locale.fromObject(localeOpts));\n    return expanded.map((t) => t.val).join(\"\");\n  }\n\n  // INFO\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n   * @return {number}\n   */\n  get(unit) {\n    return this[unit];\n  }\n\n  /**\n   * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n   * * The DateTime was created by an operation on another invalid date\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get outputCalendar() {\n    return this.isValid ? this.loc.outputCalendar : null;\n  }\n\n  /**\n   * Get the time zone associated with this DateTime.\n   * @type {Zone}\n   */\n  get zone() {\n    return this._zone;\n  }\n\n  /**\n   * Get the name of the time zone.\n   * @type {string}\n   */\n  get zoneName() {\n    return this.isValid ? this.zone.name : null;\n  }\n\n  /**\n   * Get the year\n   * @example DateTime.local(2017, 5, 25).year //=> 2017\n   * @type {number}\n   */\n  get year() {\n    return this.isValid ? this.c.year : NaN;\n  }\n\n  /**\n   * Get the quarter\n   * @example DateTime.local(2017, 5, 25).quarter //=> 2\n   * @type {number}\n   */\n  get quarter() {\n    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n  }\n\n  /**\n   * Get the month (1-12).\n   * @example DateTime.local(2017, 5, 25).month //=> 5\n   * @type {number}\n   */\n  get month() {\n    return this.isValid ? this.c.month : NaN;\n  }\n\n  /**\n   * Get the day of the month (1-30ish).\n   * @example DateTime.local(2017, 5, 25).day //=> 25\n   * @type {number}\n   */\n  get day() {\n    return this.isValid ? this.c.day : NaN;\n  }\n\n  /**\n   * Get the hour of the day (0-23).\n   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n   * @type {number}\n   */\n  get hour() {\n    return this.isValid ? this.c.hour : NaN;\n  }\n\n  /**\n   * Get the minute of the hour (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n   * @type {number}\n   */\n  get minute() {\n    return this.isValid ? this.c.minute : NaN;\n  }\n\n  /**\n   * Get the second of the minute (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n   * @type {number}\n   */\n  get second() {\n    return this.isValid ? this.c.second : NaN;\n  }\n\n  /**\n   * Get the millisecond of the second (0-999).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n   * @type {number}\n   */\n  get millisecond() {\n    return this.isValid ? this.c.millisecond : NaN;\n  }\n\n  /**\n   * Get the week year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015\n   * @type {number}\n   */\n  get weekYear() {\n    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the week number of the week year (1-52ish).\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n   * @type {number}\n   */\n  get weekNumber() {\n    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the day of the week.\n   * 1 is Monday and 7 is Sunday\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 11, 31).weekday //=> 4\n   * @type {number}\n   */\n  get weekday() {\n    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Returns true if this date is on a weekend according to the locale, false otherwise\n   * @returns {boolean}\n   */\n  get isWeekend() {\n    return this.isValid && this.loc.getWeekendDays().includes(this.weekday);\n  }\n\n  /**\n   * Get the day of the week according to the locale.\n   * 1 is the first day of the week and 7 is the last day of the week.\n   * If the locale assigns Sunday as the first day of the week, then a date which is a Sunday will return 1,\n   * @returns {number}\n   */\n  get localWeekday() {\n    return this.isValid ? possiblyCachedLocalWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Get the week number of the week year according to the locale. Different locales assign week numbers differently,\n   * because the week can start on different days of the week (see localWeekday) and because a different number of days\n   * is required for a week to count as the first week of a year.\n   * @returns {number}\n   */\n  get localWeekNumber() {\n    return this.isValid ? possiblyCachedLocalWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the week year according to the locale. Different locales assign week numbers (and therefor week years)\n   * differently, see localWeekNumber.\n   * @returns {number}\n   */\n  get localWeekYear() {\n    return this.isValid ? possiblyCachedLocalWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the ordinal (meaning the day of the year)\n   * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n   * @type {number|DateTime}\n   */\n  get ordinal() {\n    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n  }\n\n  /**\n   * Get the human readable short month name, such as 'Oct'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n   * @type {string}\n   */\n  get monthShort() {\n    return this.isValid ? Info.months(\"short\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable long month name, such as 'October'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthLong //=> October\n   * @type {string}\n   */\n  get monthLong() {\n    return this.isValid ? Info.months(\"long\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable short weekday, such as 'Mon'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n   * @type {string}\n   */\n  get weekdayShort() {\n    return this.isValid ? Info.weekdays(\"short\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the human readable long weekday, such as 'Monday'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n   * @type {string}\n   */\n  get weekdayLong() {\n    return this.isValid ? Info.weekdays(\"long\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the UTC offset of this DateTime in minutes\n   * @example DateTime.now().offset //=> -240\n   * @example DateTime.utc().offset //=> 0\n   * @type {number}\n   */\n  get offset() {\n    return this.isValid ? +this.o : NaN;\n  }\n\n  /**\n   * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameShort() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"short\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameLong() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"long\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get whether this zone's offset ever changes, as in a DST.\n   * @type {boolean}\n   */\n  get isOffsetFixed() {\n    return this.isValid ? this.zone.isUniversal : null;\n  }\n\n  /**\n   * Get whether the DateTime is in a DST.\n   * @type {boolean}\n   */\n  get isInDST() {\n    if (this.isOffsetFixed) {\n      return false;\n    } else {\n      return (\n        this.offset > this.set({ month: 1, day: 1 }).offset ||\n        this.offset > this.set({ month: 5 }).offset\n      );\n    }\n  }\n\n  /**\n   * Get those DateTimes which have the same local time as this DateTime, but a different offset from UTC\n   * in this DateTime's zone. During DST changes local time can be ambiguous, for example\n   * `2023-10-29T02:30:00` in `Europe/Berlin` can have offset `+01:00` or `+02:00`.\n   * This method will return both possible DateTimes if this DateTime's local time is ambiguous.\n   * @returns {DateTime[]}\n   */\n  getPossibleOffsets() {\n    if (!this.isValid || this.isOffsetFixed) {\n      return [this];\n    }\n    const dayMs = 86400000;\n    const minuteMs = 60000;\n    const localTS = objToLocalTS(this.c);\n    const oEarlier = this.zone.offset(localTS - dayMs);\n    const oLater = this.zone.offset(localTS + dayMs);\n\n    const o1 = this.zone.offset(localTS - oEarlier * minuteMs);\n    const o2 = this.zone.offset(localTS - oLater * minuteMs);\n    if (o1 === o2) {\n      return [this];\n    }\n    const ts1 = localTS - o1 * minuteMs;\n    const ts2 = localTS - o2 * minuteMs;\n    const c1 = tsToObj(ts1, o1);\n    const c2 = tsToObj(ts2, o2);\n    if (\n      c1.hour === c2.hour &&\n      c1.minute === c2.minute &&\n      c1.second === c2.second &&\n      c1.millisecond === c2.millisecond\n    ) {\n      return [clone(this, { ts: ts1 }), clone(this, { ts: ts2 })];\n    }\n    return [this];\n  }\n\n  /**\n   * Returns true if this DateTime is in a leap year, false otherwise\n   * @example DateTime.local(2016).isInLeapYear //=> true\n   * @example DateTime.local(2013).isInLeapYear //=> false\n   * @type {boolean}\n   */\n  get isInLeapYear() {\n    return isLeapYear(this.year);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's month\n   * @example DateTime.local(2016, 2).daysInMonth //=> 29\n   * @example DateTime.local(2016, 3).daysInMonth //=> 31\n   * @type {number}\n   */\n  get daysInMonth() {\n    return daysInMonth(this.year, this.month);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's year\n   * @example DateTime.local(2016).daysInYear //=> 366\n   * @example DateTime.local(2013).daysInYear //=> 365\n   * @type {number}\n   */\n  get daysInYear() {\n    return this.isValid ? daysInYear(this.year) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2004).weeksInWeekYear //=> 53\n   * @example DateTime.local(2013).weeksInWeekYear //=> 52\n   * @type {number}\n   */\n  get weeksInWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's local week year\n   * @example DateTime.local(2020, 6, {locale: 'en-US'}).weeksInLocalWeekYear //=> 52\n   * @example DateTime.local(2020, 6, {locale: 'de-DE'}).weeksInLocalWeekYear //=> 53\n   * @type {number}\n   */\n  get weeksInLocalWeekYear() {\n    return this.isValid\n      ? weeksInWeekYear(\n          this.localWeekYear,\n          this.loc.getMinDaysInFirstWeek(),\n          this.loc.getStartOfWeek()\n        )\n      : NaN;\n  }\n\n  /**\n   * Returns the resolved Intl options for this DateTime.\n   * This is useful in understanding the behavior of formatting methods\n   * @param {Object} opts - the same options as toLocaleString\n   * @return {Object}\n   */\n  resolvedLocaleOptions(opts = {}) {\n    const { locale, numberingSystem, calendar } = Formatter.create(\n      this.loc.clone(opts),\n      opts\n    ).resolvedOptions(this);\n    return { locale, numberingSystem, outputCalendar: calendar };\n  }\n\n  // TRANSFORM\n\n  /**\n   * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to {@link DateTime#setZone}('utc')\n   * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n   * @param {Object} [opts={}] - options to pass to `setZone()`\n   * @return {DateTime}\n   */\n  toUTC(offset = 0, opts = {}) {\n    return this.setZone(FixedOffsetZone.instance(offset), opts);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to `setZone('local')`\n   * @return {DateTime}\n   */\n  toLocal() {\n    return this.setZone(Settings.defaultZone);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n   *\n   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.\n   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n   * @return {DateTime}\n   */\n  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {\n    zone = normalizeZone(zone, Settings.defaultZone);\n    if (zone.equals(this.zone)) {\n      return this;\n    } else if (!zone.isValid) {\n      return DateTime.invalid(unsupportedZone(zone));\n    } else {\n      let newTS = this.ts;\n      if (keepLocalTime || keepCalendarTime) {\n        const offsetGuess = zone.offset(this.ts);\n        const asObj = this.toObject();\n        [newTS] = objToTS(asObj, offsetGuess, zone);\n      }\n      return clone(this, { ts: newTS, zone });\n    }\n  }\n\n  /**\n   * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n   * @param {Object} properties - the properties to set\n   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n   * @return {DateTime}\n   */\n  reconfigure({ locale, numberingSystem, outputCalendar } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem, outputCalendar });\n    return clone(this, { loc });\n  }\n\n  /**\n   * \"Set\" the locale. Returns a newly-constructed DateTime.\n   * Just a convenient alias for reconfigure({ locale })\n   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n   * @return {DateTime}\n   */\n  setLocale(locale) {\n    return this.reconfigure({ locale });\n  }\n\n  /**\n   * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n   * You can only set units with this method; for \"setting\" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.\n   *\n   * This method also supports setting locale-based week units, i.e. `localWeekday`, `localWeekNumber` and `localWeekYear`.\n   * They cannot be mixed with ISO-week units like `weekday`.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dt.set({ year: 2017 })\n   * @example dt.set({ hour: 8, minute: 30 })\n   * @example dt.set({ weekday: 5 })\n   * @example dt.set({ year: 2005, ordinal: 234 })\n   * @return {DateTime}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const normalized = normalizeObject(values, normalizeUnitWithLocalWeeks);\n    const { minDaysInFirstWeek, startOfWeek } = usesLocalWeekValues(normalized, this.loc);\n\n    const settingWeekStuff =\n        !isUndefined(normalized.weekYear) ||\n        !isUndefined(normalized.weekNumber) ||\n        !isUndefined(normalized.weekday),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    let mixed;\n    if (settingWeekStuff) {\n      mixed = weekToGregorian(\n        { ...gregorianToWeek(this.c, minDaysInFirstWeek, startOfWeek), ...normalized },\n        minDaysInFirstWeek,\n        startOfWeek\n      );\n    } else if (!isUndefined(normalized.ordinal)) {\n      mixed = ordinalToGregorian({ ...gregorianToOrdinal(this.c), ...normalized });\n    } else {\n      mixed = { ...this.toObject(), ...normalized };\n\n      // if we didn't set the day but we ended up on an overflow date,\n      // use the last day of the right month\n      if (isUndefined(normalized.day)) {\n        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n      }\n    }\n\n    const [ts, o] = objToTS(mixed, this.o, this.zone);\n    return clone(this, { ts, o });\n  }\n\n  /**\n   * Add a period of time to this DateTime and return the resulting DateTime\n   *\n   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @example DateTime.now().plus(123) //~> in 123 milliseconds\n   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes\n   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow\n   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday\n   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n   * @return {DateTime}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration);\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * Subtract a period of time to this DateTime and return the resulting DateTime\n   * See {@link DateTime#plus}\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   @return {DateTime}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration).negate();\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * \"Set\" this DateTime to the beginning of a unit of time.\n   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week\n   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n   * @return {DateTime}\n   */\n  startOf(unit, { useLocaleWeeks = false } = {}) {\n    if (!this.isValid) return this;\n\n    const o = {},\n      normalizedUnit = Duration.normalizeUnit(unit);\n    switch (normalizedUnit) {\n      case \"years\":\n        o.month = 1;\n      // falls through\n      case \"quarters\":\n      case \"months\":\n        o.day = 1;\n      // falls through\n      case \"weeks\":\n      case \"days\":\n        o.hour = 0;\n      // falls through\n      case \"hours\":\n        o.minute = 0;\n      // falls through\n      case \"minutes\":\n        o.second = 0;\n      // falls through\n      case \"seconds\":\n        o.millisecond = 0;\n        break;\n      case \"milliseconds\":\n        break;\n      // no default, invalid units throw in normalizeUnit()\n    }\n\n    if (normalizedUnit === \"weeks\") {\n      if (useLocaleWeeks) {\n        const startOfWeek = this.loc.getStartOfWeek();\n        const { weekday } = this;\n        if (weekday < startOfWeek) {\n          o.weekNumber = this.weekNumber - 1;\n        }\n        o.weekday = startOfWeek;\n      } else {\n        o.weekday = 1;\n      }\n    }\n\n    if (normalizedUnit === \"quarters\") {\n      const q = Math.ceil(this.month / 3);\n      o.month = (q - 1) * 3 + 1;\n    }\n\n    return this.set(o);\n  }\n\n  /**\n   * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week\n   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n   * @return {DateTime}\n   */\n  endOf(unit, opts) {\n    return this.isValid\n      ? this.plus({ [unit]: 1 })\n          .startOf(unit, opts)\n          .minus(1)\n      : this;\n  }\n\n  // OUTPUT\n\n  /**\n   * Returns a string representation of this DateTime formatted according to the specified format string.\n   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n   * of the DateTime in the assigned locale.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toLocaleString(); //=> 4/20/2017\n   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL, { locale: 'fr' }); //=> '28 août 2022'\n   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n   * @example DateTime.now().toLocaleParts(); //=> [\n   *                                   //=>   { type: 'day', value: '25' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'month', value: '05' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'year', value: '1982' }\n   *                                   //=> ]\n   */\n  toLocaleParts(opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this)\n      : [];\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=false] - add the time zone format extension\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n   * @return {string}\n   */\n  toISO({\n    format = \"extended\",\n    suppressSeconds = false,\n    suppressMilliseconds = false,\n    includeOffset = true,\n    extendedZone = false,\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    const ext = format === \"extended\";\n\n    let c = toISODate(this, ext);\n    c += \"T\";\n    c += toISOTime(this, ext, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);\n    return c;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's date component\n   * @param {Object} opts - options\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n   * @return {string}\n   */\n  toISODate({ format = \"extended\" } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return toISODate(this, format === \"extended\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's week date\n   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n   * @return {string}\n   */\n  toISOWeekDate() {\n    return toTechFormat(this, \"kkkk-'W'WW-c\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's time component\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'\n   * @return {string}\n   */\n  toISOTime({\n    suppressMilliseconds = false,\n    suppressSeconds = false,\n    includeOffset = true,\n    includePrefix = false,\n    extendedZone = false,\n    format = \"extended\",\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    let c = includePrefix ? \"T\" : \"\";\n    return (\n      c +\n      toISOTime(\n        this,\n        format === \"extended\",\n        suppressSeconds,\n        suppressMilliseconds,\n        includeOffset,\n        extendedZone\n      )\n    );\n  }\n\n  /**\n   * Returns an RFC 2822-compatible string representation of this DateTime\n   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n   * @return {string}\n   */\n  toRFC2822() {\n    return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.\n   * Specifically, the string conforms to RFC 1123.\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n   * @return {string}\n   */\n  toHTTP() {\n    return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Date\n   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n   * @return {string}\n   */\n  toSQLDate() {\n    if (!this.isValid) {\n      return null;\n    }\n    return toISODate(this, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Time\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'\n   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n   * @return {string}\n   */\n  toSQLTime({ includeOffset = true, includeZone = false, includeOffsetSpace = true } = {}) {\n    let fmt = \"HH:mm:ss.SSS\";\n\n    if (includeZone || includeOffset) {\n      if (includeOffsetSpace) {\n        fmt += \" \";\n      }\n      if (includeZone) {\n        fmt += \"z\";\n      } else if (includeOffset) {\n        fmt += \"ZZ\";\n      }\n    }\n\n    return toTechFormat(this, fmt, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n   * @return {string}\n   */\n  toSQL(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for debugging\n   * @return {string}\n   */\n  toString() {\n    return this.isValid ? this.toISO() : INVALID;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for the REPL.\n   * @return {string}\n   */\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    if (this.isValid) {\n      return `DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`;\n    } else {\n      return `DateTime { Invalid, reason: ${this.invalidReason} }`;\n    }\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime.\n   * @return {number}\n   */\n  toMillis() {\n    return this.isValid ? this.ts : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds of this DateTime.\n   * @return {number}\n   */\n  toSeconds() {\n    return this.isValid ? this.ts / 1000 : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds (as a whole number) of this DateTime.\n   * @return {number}\n   */\n  toUnixInteger() {\n    return this.isValid ? Math.floor(this.ts / 1000) : NaN;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a BSON serializable equivalent to this DateTime.\n   * @return {Date}\n   */\n  toBSON() {\n    return this.toJSDate();\n  }\n\n  /**\n   * Returns a JavaScript object with this DateTime's year, month, day, and so on.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n\n    const base = { ...this.c };\n\n    if (opts.includeConfig) {\n      base.outputCalendar = this.outputCalendar;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns a JavaScript Date equivalent to this DateTime.\n   * @return {Date}\n   */\n  toJSDate() {\n    return new Date(this.isValid ? this.ts : NaN);\n  }\n\n  // COMPARE\n\n  /**\n   * Return the difference between two DateTimes as a Duration.\n   * @param {DateTime} otherDateTime - the DateTime to compare this one to\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example\n   * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n   *     i2 = DateTime.fromISO('1983-10-14T10:30');\n   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n   * @return {Duration}\n   */\n  diff(otherDateTime, unit = \"milliseconds\", opts = {}) {\n    if (!this.isValid || !otherDateTime.isValid) {\n      return Duration.invalid(\"created by diffing an invalid DateTime\");\n    }\n\n    const durOpts = { locale: this.locale, numberingSystem: this.numberingSystem, ...opts };\n\n    const units = maybeArray(unit).map(Duration.normalizeUnit),\n      otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n      earlier = otherIsLater ? this : otherDateTime,\n      later = otherIsLater ? otherDateTime : this,\n      diffed = diff(earlier, later, units, durOpts);\n\n    return otherIsLater ? diffed.negate() : diffed;\n  }\n\n  /**\n   * Return the difference between this DateTime and right now.\n   * See {@link DateTime#diff}\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  diffNow(unit = \"milliseconds\", opts = {}) {\n    return this.diff(DateTime.now(), unit, opts);\n  }\n\n  /**\n   * Return an Interval spanning between this DateTime and another DateTime\n   * @param {DateTime} otherDateTime - the other end point of the Interval\n   * @return {Interval}\n   */\n  until(otherDateTime) {\n    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n  }\n\n  /**\n   * Return whether this DateTime is in the same unit of time as another DateTime.\n   * Higher-order units must also be identical for this function to return `true`.\n   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.\n   * @param {DateTime} otherDateTime - the other DateTime\n   * @param {string} unit - the unit of time to check sameness on\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; only the locale of this DateTime is used\n   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day\n   * @return {boolean}\n   */\n  hasSame(otherDateTime, unit, opts) {\n    if (!this.isValid) return false;\n\n    const inputMs = otherDateTime.valueOf();\n    const adjustedToZone = this.setZone(otherDateTime.zone, { keepLocalTime: true });\n    return (\n      adjustedToZone.startOf(unit, opts) <= inputMs && inputMs <= adjustedToZone.endOf(unit, opts)\n    );\n  }\n\n  /**\n   * Equality check\n   * Two DateTimes are equal if and only if they represent the same millisecond, have the same zone and location, and are both valid.\n   * To compare just the millisecond values, use `+dt1 === +dt2`.\n   * @param {DateTime} other - the other DateTime\n   * @return {boolean}\n   */\n  equals(other) {\n    return (\n      this.isValid &&\n      other.isValid &&\n      this.valueOf() === other.valueOf() &&\n      this.zone.equals(other.zone) &&\n      this.loc.equals(other.loc)\n    );\n  }\n\n  /**\n   * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n   * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n   * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n   * @example DateTime.now().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 día\"\n   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n   */\n  toRelative(options = {}) {\n    if (!this.isValid) return null;\n    const base = options.base || DateTime.fromObject({}, { zone: this.zone }),\n      padding = options.padding ? (this < base ? -options.padding : options.padding) : 0;\n    let units = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n    let unit = options.unit;\n    if (Array.isArray(options.unit)) {\n      units = options.unit;\n      unit = undefined;\n    }\n    return diffRelative(base, this.plus(padding), {\n      ...options,\n      numeric: \"always\",\n      units,\n      unit,\n    });\n  }\n\n  /**\n   * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n   * @example DateTime.now().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"mañana\"\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n   */\n  toRelativeCalendar(options = {}) {\n    if (!this.isValid) return null;\n\n    return diffRelative(options.base || DateTime.fromObject({}, { zone: this.zone }), this, {\n      ...options,\n      numeric: \"auto\",\n      units: [\"years\", \"months\", \"days\"],\n      calendary: true,\n    });\n  }\n\n  /**\n   * Return the min of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n   * @return {DateTime} the min DateTime, or undefined if called with no argument\n   */\n  static min(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.min);\n  }\n\n  /**\n   * Return the max of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n   * @return {DateTime} the max DateTime, or undefined if called with no argument\n   */\n  static max(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.max);\n  }\n\n  // MISC\n\n  /**\n   * Explain how a string would be parsed by fromFormat()\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see description)\n   * @param {Object} options - options taken by fromFormat()\n   * @return {Object}\n   */\n  static fromFormatExplain(text, fmt, options = {}) {\n    const { locale = null, numberingSystem = null } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      });\n    return explainFromTokens(localeToUse, text, fmt);\n  }\n\n  /**\n   * @deprecated use fromFormatExplain instead\n   */\n  static fromStringExplain(text, fmt, options = {}) {\n    return DateTime.fromFormatExplain(text, fmt, options);\n  }\n\n  // FORMAT PRESETS\n\n  /**\n   * {@link DateTime#toLocaleString} format like 10/14/1983\n   * @type {Object}\n   */\n  static get DATE_SHORT() {\n    return Formats.DATE_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED() {\n    return Formats.DATE_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED_WITH_WEEKDAY() {\n    return Formats.DATE_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_FULL() {\n    return Formats.DATE_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_HUGE() {\n    return Formats.DATE_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_SIMPLE() {\n    return Formats.TIME_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SECONDS() {\n    return Formats.TIME_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SHORT_OFFSET() {\n    return Formats.TIME_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_LONG_OFFSET() {\n    return Formats.TIME_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_SIMPLE() {\n    return Formats.TIME_24_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SECONDS() {\n    return Formats.TIME_24_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SHORT_OFFSET() {\n    return Formats.TIME_24_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_LONG_OFFSET() {\n    return Formats.TIME_24_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT() {\n    return Formats.DATETIME_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT_WITH_SECONDS() {\n    return Formats.DATETIME_SHORT_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED() {\n    return Formats.DATETIME_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_SECONDS() {\n    return Formats.DATETIME_MED_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_WEEKDAY() {\n    return Formats.DATETIME_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL() {\n    return Formats.DATETIME_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL_WITH_SECONDS() {\n    return Formats.DATETIME_FULL_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE() {\n    return Formats.DATETIME_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE_WITH_SECONDS() {\n    return Formats.DATETIME_HUGE_WITH_SECONDS;\n  }\n}\n\n/**\n * @private\n */\nexport function friendlyDateTime(dateTimeish) {\n  if (DateTime.isDateTime(dateTimeish)) {\n    return dateTimeish;\n  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n    return DateTime.fromJSDate(dateTimeish);\n  } else if (dateTimeish && typeof dateTimeish === \"object\") {\n    return DateTime.fromObject(dateTimeish);\n  } else {\n    throw new InvalidArgumentError(\n      `Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`\n    );\n  }\n}\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport function purry(fn, args, lazy) {\n    var diff = fn.length - args.length;\n    var arrayArgs = Array.from(args);\n    if (diff === 0) {\n        return fn.apply(void 0, arrayArgs);\n    }\n    if (diff === 1) {\n        var ret = function (data) { return fn.apply(void 0, __spreadArray([data], arrayArgs, false)); };\n        if (lazy || fn.lazy) {\n            ret.lazy = lazy || fn.lazy;\n            ret.lazyArgs = args;\n        }\n        return ret;\n    }\n    throw new Error('Wrong number of arguments');\n}\n","export function pipe(value) {\n    var operations = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        operations[_i - 1] = arguments[_i];\n    }\n    var ret = value;\n    var lazyOps = operations.map(function (op) {\n        var _a = op, lazy = _a.lazy, lazyArgs = _a.lazyArgs;\n        if (lazy) {\n            var fn = lazy.apply(void 0, (lazyArgs || []));\n            fn.indexed = lazy.indexed;\n            fn.single = lazy.single;\n            fn.index = 0;\n            fn.items = [];\n            return fn;\n        }\n        return null;\n    });\n    var opIdx = 0;\n    while (opIdx < operations.length) {\n        var op = operations[opIdx];\n        var lazyOp = lazyOps[opIdx];\n        if (!lazyOp) {\n            ret = op(ret);\n            opIdx++;\n            continue;\n        }\n        var lazySeq = [];\n        for (var j = opIdx; j < operations.length; j++) {\n            if (lazyOps[j]) {\n                lazySeq.push(lazyOps[j]);\n                if (lazyOps[j].single) {\n                    break;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        var acc = [];\n        for (var _a = 0, ret_1 = ret; _a < ret_1.length; _a++) {\n            var item = ret_1[_a];\n            if (_processItem({ item: item, acc: acc, lazySeq: lazySeq })) {\n                break;\n            }\n        }\n        var lastLazySeq = lazySeq[lazySeq.length - 1];\n        if (lastLazySeq.single) {\n            ret = acc[0];\n        }\n        else {\n            ret = acc;\n        }\n        opIdx += lazySeq.length;\n    }\n    return ret;\n}\nfunction _processItem(_a) {\n    var item = _a.item, lazySeq = _a.lazySeq, acc = _a.acc;\n    if (lazySeq.length === 0) {\n        acc.push(item);\n        return false;\n    }\n    var lazyResult = { done: false, hasNext: false };\n    var isDone = false;\n    for (var i = 0; i < lazySeq.length; i++) {\n        var lazyFn = lazySeq[i];\n        var indexed = lazyFn.indexed;\n        var index = lazyFn.index;\n        var items = lazyFn.items;\n        items.push(item);\n        lazyResult = indexed ? lazyFn(item, index, items) : lazyFn(item);\n        lazyFn.index++;\n        if (lazyResult.hasNext) {\n            if (lazyResult.hasMany) {\n                var nextValues = lazyResult.next;\n                for (var _i = 0, nextValues_1 = nextValues; _i < nextValues_1.length; _i++) {\n                    var subItem = nextValues_1[_i];\n                    var subResult = _processItem({\n                        item: subItem,\n                        acc: acc,\n                        lazySeq: lazySeq.slice(i + 1),\n                    });\n                    if (subResult) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            else {\n                item = lazyResult.next;\n            }\n        }\n        if (!lazyResult.hasNext) {\n            break;\n        }\n        if (lazyResult.done) {\n            isDone = true;\n        }\n    }\n    if (lazyResult.hasNext) {\n        acc.push(item);\n    }\n    if (isDone) {\n        return true;\n    }\n    return false;\n}\n","export function _reduceLazy(array, lazy, indexed) {\n    var newArray = [];\n    for (var index = 0; index < array.length; index++) {\n        var item = array[index];\n        var result = indexed ? lazy(item, index, array) : lazy(item);\n        if (result.hasMany === true) {\n            newArray.push.apply(newArray, result.next);\n        }\n        else if (result.hasNext) {\n            newArray.push(result.next);\n        }\n    }\n    return newArray;\n}\n","import { purry } from './purry';\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nexport function equals() {\n    return purry(_equals, arguments);\n}\nfunction _equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        var arrA = isArray(a);\n        var arrB = isArray(b);\n        var i = void 0;\n        var length_1;\n        var key = void 0;\n        if (arrA && arrB) {\n            length_1 = a.length;\n            if (length_1 !== b.length) {\n                return false;\n            }\n            for (i = length_1; i-- !== 0;) {\n                if (!equals(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (arrA !== arrB) {\n            return false;\n        }\n        var dateA = a instanceof Date;\n        var dateB = b instanceof Date;\n        if (dateA !== dateB) {\n            return false;\n        }\n        if (dateA && dateB) {\n            return a.getTime() === b.getTime();\n        }\n        var regexpA = a instanceof RegExp;\n        var regexpB = b instanceof RegExp;\n        if (regexpA !== regexpB) {\n            return false;\n        }\n        if (regexpA && regexpB) {\n            return a.toString() === b.toString();\n        }\n        var keys = keyList(a);\n        length_1 = keys.length;\n        if (length_1 !== keyList(b).length) {\n            return false;\n        }\n        for (i = length_1; i-- !== 0;) {\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n                return false;\n            }\n        }\n        for (i = length_1; i-- !== 0;) {\n            key = keys[i];\n            if (!equals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n","export var _toLazyIndexed = function (fn) {\n    fn.indexed = true;\n    return fn;\n};\n","import { purry } from './purry';\nimport { _reduceLazy } from './_reduceLazy';\nimport { _toLazyIndexed } from './_toLazyIndexed';\nexport function filter() {\n    return purry(_filter(false), arguments, filter.lazy);\n}\nvar _filter = function (indexed) {\n    return function (array, fn) {\n        return _reduceLazy(array, indexed ? filter.lazyIndexed(fn) : filter.lazy(fn), indexed);\n    };\n};\nvar _lazy = function (indexed) {\n    return function (fn) {\n        return function (value, index, array) {\n            var valid = indexed ? fn(value, index, array) : fn(value);\n            if (valid) {\n                return {\n                    done: false,\n                    hasNext: true,\n                    next: value,\n                };\n            }\n            return {\n                done: false,\n                hasNext: false,\n            };\n        };\n    };\n};\n(function (filter) {\n    function indexed() {\n        return purry(_filter(true), arguments, filter.lazyIndexed);\n    }\n    filter.indexed = indexed;\n    filter.lazy = _lazy(false);\n    filter.lazyIndexed = _toLazyIndexed(_lazy(true));\n})(filter || (filter = {}));\n","import { _reduceLazy } from './_reduceLazy';\nimport { purry } from './purry';\nexport function flatten() {\n    return purry(_flatten, arguments, flatten.lazy);\n}\nfunction _flatten(items) {\n    return _reduceLazy(items, flatten.lazy());\n}\n(function (flatten) {\n    function lazy() {\n        return function (next) {\n            if (Array.isArray(next)) {\n                return {\n                    done: false,\n                    hasNext: true,\n                    hasMany: true,\n                    next: next,\n                };\n            }\n            return {\n                done: false,\n                hasNext: true,\n                next: next,\n            };\n        };\n    }\n    flatten.lazy = lazy;\n})(flatten || (flatten = {}));\n","import { isArray } from './isArray';\nimport { isObject } from './isObject';\nimport { isString } from './isString';\nexport function isEmpty(data) {\n    if (data === undefined) {\n        return true;\n    }\n    if (isArray(data) || isString(data)) {\n        return data.length === 0;\n    }\n    if (isObject(data)) {\n        return Object.keys(data).length === 0;\n    }\n    return false;\n}\n","export function isArray(data) {\n    return Array.isArray(data);\n}\n","export function isString(data) {\n    return typeof data === 'string';\n}\n","export function isObject(data) {\n    return !!data && !Array.isArray(data) && typeof data === 'object';\n}\n","import { purry } from './purry';\nimport { _reduceLazy } from './_reduceLazy';\nimport { _toLazyIndexed } from './_toLazyIndexed';\nexport function map() {\n    return purry(_map(false), arguments, map.lazy);\n}\nvar _map = function (indexed) {\n    return function (array, fn) {\n        return _reduceLazy(array, indexed ? map.lazyIndexed(fn) : map.lazy(fn), indexed);\n    };\n};\nvar _lazy = function (indexed) {\n    return function (fn) {\n        return function (value, index, array) {\n            return {\n                done: false,\n                hasNext: true,\n                next: indexed ? fn(value, index, array) : fn(value),\n            };\n        };\n    };\n};\n(function (map) {\n    function indexed() {\n        return purry(_map(true), arguments, map.lazyIndexed);\n    }\n    map.indexed = indexed;\n    map.lazy = _lazy(false);\n    map.lazyIndexed = _toLazyIndexed(_lazy(true));\n    map.strict = map;\n})(map || (map = {}));\n","import { purry } from './purry';\nexport function merge() {\n    return purry(_merge, arguments);\n}\nfunction _merge(a, b) {\n    return Object.assign({}, a, b);\n}\n","import { purry } from './purry';\nexport function reduce() {\n    return purry(_reduce(false), arguments);\n}\nvar _reduce = function (indexed) {\n    return function (items, fn, initialValue) {\n        return items.reduce(function (acc, item, index) {\n            return indexed ? fn(acc, item, index, items) : fn(acc, item);\n        }, initialValue);\n    };\n};\n(function (reduce) {\n    function indexed() {\n        return purry(_reduce(true), arguments);\n    }\n    reduce.indexed = indexed;\n})(reduce || (reduce = {}));\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { purry } from './purry';\nexport function sort() {\n    return purry(_sort, arguments);\n}\nfunction _sort(items, cmp) {\n    var ret = __spreadArray([], items, true);\n    ret.sort(cmp);\n    return ret;\n}\n(function (sort) {\n    sort.strict = sort;\n})(sort || (sort = {}));\n","const t=Symbol.for(\"@ts-pattern/matcher\"),e=Symbol.for(\"@ts-pattern/isVariadic\"),n=\"@ts-pattern/anonymous-select-key\",r=t=>Boolean(t&&\"object\"==typeof t),i=e=>e&&!!e[t],s=(n,o,c)=>{if(i(n)){const e=n[t](),{matched:r,selections:i}=e.match(o);return r&&i&&Object.keys(i).forEach(t=>c(t,i[t])),r}if(r(n)){if(!r(o))return!1;if(Array.isArray(n)){if(!Array.isArray(o))return!1;let t=[],r=[],a=[];for(const s of n.keys()){const o=n[s];i(o)&&o[e]?a.push(o):a.length?r.push(o):t.push(o)}if(a.length){if(a.length>1)throw new Error(\"Pattern error: Using `...P.array(...)` several times in a single pattern is not allowed.\");if(o.length<t.length+r.length)return!1;const e=o.slice(0,t.length),n=0===r.length?[]:o.slice(-r.length),i=o.slice(t.length,0===r.length?Infinity:-r.length);return t.every((t,n)=>s(t,e[n],c))&&r.every((t,e)=>s(t,n[e],c))&&(0===a.length||s(a[0],i,c))}return n.length===o.length&&n.every((t,e)=>s(t,o[e],c))}return Object.keys(n).every(e=>{const r=n[e];return(e in o||i(a=r)&&\"optional\"===a[t]().matcherType)&&s(r,o[e],c);var a})}return Object.is(o,n)},o=e=>{var n,s,a;return r(e)?i(e)?null!=(n=null==(s=(a=e[t]()).getSelectionKeys)?void 0:s.call(a))?n:[]:Array.isArray(e)?c(e,o):c(Object.values(e),o):[]},c=(t,e)=>t.reduce((t,n)=>t.concat(e(n)),[]);function a(...t){if(1===t.length){const[e]=t;return t=>s(e,t,()=>{})}if(2===t.length){const[e,n]=t;return s(e,n,()=>{})}throw new Error(`isMatching wasn't given the right number of arguments: expected 1 or 2, received ${t.length}.`)}function u(t){return Object.assign(t,{optional:()=>l(t),and:e=>m(t,e),or:e=>d(t,e),select:e=>void 0===e?p(t):p(e,t)})}function h(t){return Object.assign((t=>Object.assign(t,{[Symbol.iterator](){let n=0;const r=[{value:Object.assign(t,{[e]:!0}),done:!1},{done:!0,value:void 0}];return{next:()=>{var t;return null!=(t=r[n++])?t:r.at(-1)}}}}))(t),{optional:()=>h(l(t)),select:e=>h(void 0===e?p(t):p(e,t))})}function l(e){return u({[t]:()=>({match:t=>{let n={};const r=(t,e)=>{n[t]=e};return void 0===t?(o(e).forEach(t=>r(t,void 0)),{matched:!0,selections:n}):{matched:s(e,t,r),selections:n}},getSelectionKeys:()=>o(e),matcherType:\"optional\"})})}const f=(t,e)=>{for(const n of t)if(!e(n))return!1;return!0},g=(t,e)=>{for(const[n,r]of t.entries())if(!e(r,n))return!1;return!0};function m(...e){return u({[t]:()=>({match:t=>{let n={};const r=(t,e)=>{n[t]=e};return{matched:e.every(e=>s(e,t,r)),selections:n}},getSelectionKeys:()=>c(e,o),matcherType:\"and\"})})}function d(...e){return u({[t]:()=>({match:t=>{let n={};const r=(t,e)=>{n[t]=e};return c(e,o).forEach(t=>r(t,void 0)),{matched:e.some(e=>s(e,t,r)),selections:n}},getSelectionKeys:()=>c(e,o),matcherType:\"or\"})})}function y(e){return{[t]:()=>({match:t=>({matched:Boolean(e(t))})})}}function p(...e){const r=\"string\"==typeof e[0]?e[0]:void 0,i=2===e.length?e[1]:\"string\"==typeof e[0]?void 0:e[0];return u({[t]:()=>({match:t=>{let e={[null!=r?r:n]:t};return{matched:void 0===i||s(i,t,(t,n)=>{e[t]=n}),selections:e}},getSelectionKeys:()=>[null!=r?r:n].concat(void 0===i?[]:o(i))})})}function v(t){return\"number\"==typeof t}function b(t){return\"string\"==typeof t}function w(t){return\"bigint\"==typeof t}const S=u(y(function(t){return!0})),O=S,j=t=>Object.assign(u(t),{startsWith:e=>{return j(m(t,(n=e,y(t=>b(t)&&t.startsWith(n)))));var n},endsWith:e=>{return j(m(t,(n=e,y(t=>b(t)&&t.endsWith(n)))));var n},minLength:e=>j(m(t,(t=>y(e=>b(e)&&e.length>=t))(e))),maxLength:e=>j(m(t,(t=>y(e=>b(e)&&e.length<=t))(e))),includes:e=>{return j(m(t,(n=e,y(t=>b(t)&&t.includes(n)))));var n},regex:e=>{return j(m(t,(n=e,y(t=>b(t)&&Boolean(t.match(n))))));var n}}),E=j(y(b)),K=t=>Object.assign(u(t),{between:(e,n)=>K(m(t,((t,e)=>y(n=>v(n)&&t<=n&&e>=n))(e,n))),lt:e=>K(m(t,(t=>y(e=>v(e)&&e<t))(e))),gt:e=>K(m(t,(t=>y(e=>v(e)&&e>t))(e))),lte:e=>K(m(t,(t=>y(e=>v(e)&&e<=t))(e))),gte:e=>K(m(t,(t=>y(e=>v(e)&&e>=t))(e))),int:()=>K(m(t,y(t=>v(t)&&Number.isInteger(t)))),finite:()=>K(m(t,y(t=>v(t)&&Number.isFinite(t)))),positive:()=>K(m(t,y(t=>v(t)&&t>0))),negative:()=>K(m(t,y(t=>v(t)&&t<0)))}),x=K(y(v)),A=t=>Object.assign(u(t),{between:(e,n)=>A(m(t,((t,e)=>y(n=>w(n)&&t<=n&&e>=n))(e,n))),lt:e=>A(m(t,(t=>y(e=>w(e)&&e<t))(e))),gt:e=>A(m(t,(t=>y(e=>w(e)&&e>t))(e))),lte:e=>A(m(t,(t=>y(e=>w(e)&&e<=t))(e))),gte:e=>A(m(t,(t=>y(e=>w(e)&&e>=t))(e))),positive:()=>A(m(t,y(t=>w(t)&&t>0))),negative:()=>A(m(t,y(t=>w(t)&&t<0)))}),P=A(y(w)),T=u(y(function(t){return\"boolean\"==typeof t})),k=u(y(function(t){return\"symbol\"==typeof t})),B=u(y(function(t){return null==t}));var _={__proto__:null,matcher:t,optional:l,array:function(...e){return h({[t]:()=>({match:t=>{if(!Array.isArray(t))return{matched:!1};if(0===e.length)return{matched:!0};const n=e[0];let r={};if(0===t.length)return o(n).forEach(t=>{r[t]=[]}),{matched:!0,selections:r};const i=(t,e)=>{r[t]=(r[t]||[]).concat([e])};return{matched:t.every(t=>s(n,t,i)),selections:r}},getSelectionKeys:()=>0===e.length?[]:o(e[0])})})},set:function(...e){return u({[t]:()=>({match:t=>{if(!(t instanceof Set))return{matched:!1};let n={};if(0===t.size)return{matched:!0,selections:n};if(0===e.length)return{matched:!0};const r=(t,e)=>{n[t]=(n[t]||[]).concat([e])},i=e[0];return{matched:f(t,t=>s(i,t,r)),selections:n}},getSelectionKeys:()=>0===e.length?[]:o(e[0])})})},map:function(...e){return u({[t]:()=>({match:t=>{if(!(t instanceof Map))return{matched:!1};let n={};if(0===t.size)return{matched:!0,selections:n};const r=(t,e)=>{n[t]=(n[t]||[]).concat([e])};if(0===e.length)return{matched:!0};var i;if(1===e.length)throw new Error(`\\`P.map\\` wasn't given enough arguments. Expected (key, value), received ${null==(i=e[0])?void 0:i.toString()}`);const[o,c]=e;return{matched:g(t,(t,e)=>{const n=s(o,e,r),i=s(c,t,r);return n&&i}),selections:n}},getSelectionKeys:()=>0===e.length?[]:[...o(e[0]),...o(e[1])]})})},intersection:m,union:d,not:function(e){return u({[t]:()=>({match:t=>({matched:!s(e,t,()=>{})}),getSelectionKeys:()=>[],matcherType:\"not\"})})},when:y,select:p,any:S,_:O,string:E,number:x,bigint:P,boolean:T,symbol:k,nullish:B,instanceOf:function(t){return u(y(function(t){return e=>e instanceof t}(t)))},shape:function(t){return u(y(a(t)))}};const W={matched:!1,value:void 0};function N(t){return new $(t,W)}class ${constructor(t,e){this.input=void 0,this.state=void 0,this.input=t,this.state=e}with(...t){if(this.state.matched)return this;const e=t[t.length-1],r=[t[0]];let i;3===t.length&&\"function\"==typeof t[1]?i=t[1]:t.length>2&&r.push(...t.slice(1,t.length-1));let o=!1,c={};const a=(t,e)=>{o=!0,c[t]=e},u=!r.some(t=>s(t,this.input,a))||i&&!Boolean(i(this.input))?W:{matched:!0,value:e(o?n in c?c[n]:c:this.input,this.input)};return new $(this.input,u)}when(t,e){if(this.state.matched)return this;const n=Boolean(t(this.input));return new $(this.input,n?{matched:!0,value:e(this.input,this.input)}:W)}otherwise(t){return this.state.matched?this.state.value:t(this.input)}exhaustive(){if(this.state.matched)return this.state.value;let t;try{t=JSON.stringify(this.input)}catch(e){t=this.input}throw new Error(`Pattern matching error: no pattern matches value ${t}`)}run(){return this.exhaustive()}returnType(){return this}}export{_ as P,_ as Pattern,a as isMatching,N as match};\n//# sourceMappingURL=index.js.map\n","/** It doesn't make any sense to use lit's translation solution for currently 10 strings\n *  which also creates the necessity of async loading an external translation file.\n *  We just import the strings directly as a JS object.\n */\n\ninterface Locale {\n    [key: string]: string;\n}\n\nexport default class Translations {\n    private _lang: string;\n    private _locales: { [key: string]: Locale };\n\n    constructor() {\n        this._lang = document.documentElement.lang.slice(0, 2);\n        this._locales = {\n            de: {\n                /** Weekdays */\n                Mon: 'Mo',\n                Tues: 'Di',\n                Wed: 'Mi',\n                Thurs: 'Do',\n                Fri: 'Fr',\n                Sat: 'Sa',\n                Sun: 'So',\n                /** Months */\n                1: 'Jan',\n                2: 'Feb',\n                3: 'Mär',\n                4: 'Apr',\n                5: 'Mai',\n                6: 'Jun',\n                7: 'Jul',\n                8: 'Aug',\n                9: 'Sep',\n                10: 'Okt',\n                11: 'Nov',\n                12: 'Dez',\n                /** Misc */\n                Day: 'Tag',\n                Month: 'Monat',\n                'Current Month': 'Aktueller Monat',\n                'all day': 'ganztägig',\n            },\n        };\n    }\n\n    get lang() {\n        return this._lang;\n    }\n\n    set lang(lang: string) {\n        this._lang = lang;\n    }\n\n    getTranslation(key: string | number | undefined) {\n        if (!key) {\n            return key;\n        }\n        const locale = this._locales[this.lang];\n        if (locale) {\n            return locale[key] || key;\n        }\n        return key;\n    }\n}\n","import { LitElement, css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport Translations from '../locales/Translations';\n\n@customElement('lms-calendar-context')\nexport default class Context extends LitElement {\n    private translations = new Translations();\n\n    static override styles = css`\n        div {\n            height: 1.75em;\n            display: grid;\n            grid-template-columns: repeat(7, 1fr);\n        }\n        span {\n            padding: 0.25em;\n            text-align: left;\n        }\n    `;\n\n    override render() {\n        return html` <div>\n            <span>${this.translations.getTranslation('Mon')}</span>\n            <span>${this.translations.getTranslation('Tues')}</span>\n            <span>${this.translations.getTranslation('Wed')}</span>\n            <span>${this.translations.getTranslation('Thurs')}</span>\n            <span>${this.translations.getTranslation('Fri')}</span>\n            <span>${this.translations.getTranslation('Sat')}</span>\n            <span>${this.translations.getTranslation('Sun')}</span>\n        </div>`;\n    }\n}\n","import { LitElement, css, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\n\n@customElement('lms-calendar-day')\nexport default class Day extends LitElement {\n    @state()\n    _hours = [...Array(25).keys()];\n\n    @state()\n    _hasActiveSidebar = false;\n\n    static override styles = css`\n        .container {\n            display: flex;\n            /* Header: 3.5em */\n            height: calc(100% - 3.5em);\n            width: 100%;\n        }\n\n        .main {\n            display: grid;\n            grid-template-columns: 4em 1fr;\n            grid-template-rows: repeat(1440, 1fr);\n            height: calc(100% - 1em);\n            gap: 1px;\n            overflow-y: scroll;\n            text-align: center;\n            padding: 0.5em;\n            position: relative;\n        }\n\n        .hour {\n            text-align: center;\n        }\n\n        .indicator {\n            position: relative;\n            top: -0.6em;\n        }\n\n        .separator {\n            grid-column: 2 / 3;\n            border-top: 1px solid var(--separator-light);\n            position: absolute;\n            width: 100%;\n            z-index: 0;\n        }\n\n        .sidebar {\n            height: 100%;\n            border-left: 1px solid var(--separator-light);\n        }\n\n        .w-100 {\n            width: 100%;\n        }\n\n        .w-70 {\n            width: 70%;\n        }\n\n        .w-30 {\n            width: 30%;\n        }\n\n        .w-0 {\n            width: 0;\n        }\n    `;\n\n    override render() {\n        return html`<div class=\"container\">\n            <div\n                class=\"main w-${!this._hasActiveSidebar\n                    ? '100'\n                    : '70' ?? '100'}\"\n            >\n                ${this._hours.map(\n                    (hour, index) => html`\n                        <div class=\"hour\" style=${this._getHourIndicator(hour)}>\n                            <span class=\"indicator\">\n                                ${hour < 10 ? `0${hour}:00` : `${hour}:00`}\n                            </span>\n                        </div>\n                        ${index\n                            ? html`<div\n                                  class=\"separator\"\n                                  style=\"grid-row: ${hour * 60}\"\n                              ></div>`\n                            : html``}\n                        <slot name=\"${hour}\" class=\"entry\"></slot>\n                    `,\n                )}\n            </div>\n            <div\n                class=\"sidebar w-${!this._hasActiveSidebar ? '0' : '30' ?? '0'}\"\n                ?hidden=${!this._hasActiveSidebar}\n            ></div>\n        </div>`;\n    }\n\n    _getHourIndicator(hour: number) {\n        return hour !== 24\n            ? `grid-row: ${(hour + 1) * 60 - 59}/${(hour + 1) * 60}`\n            : 'grid-row: 1440';\n    }\n}\n","import { LitElement, css, html, nothing } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport * as R from 'remeda';\nimport Translations from '../locales/Translations.js';\n\n@customElement('lms-calendar-entry')\nexport default class Entry extends LitElement {\n    private translations = new Translations();\n\n    @property({ attribute: false })\n    time?: CalendarTimeInterval;\n\n    @property()\n    heading = '';\n\n    @property()\n    content?: string;\n\n    @property({ type: Boolean })\n    isContinuation = false;\n\n    @state()\n    _highlighted?: boolean;\n\n    @state()\n    _extended?: boolean;\n\n    private _sumReducer: (accumulator: number, currentValue: number) => number =\n        (accumulator, currentValue) => accumulator + currentValue;\n\n    static override styles = css`\n        :host {\n            font-size: small;\n            grid-column: 2;\n\n            border-radius: var(--entry-br);\n            grid-row: var(--start-slot);\n            width: var(--entry-w);\n            margin: var(--entry-m);\n            background-color: var(--entry-bc);\n            color: var(--entry-c);\n            /* z-index of separators in day view is 0 */\n            z-index: 1;\n        }\n\n        .main {\n            display: flex;\n            justify-content: space-between;\n            padding: 0.25em;\n            border-radius: var(--border-radius-sm);\n            background-color: inherit;\n        }\n\n        .main > span:first-child {\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n        div[data-highlighted] {\n            background: var(--separator-light);\n        }\n\n        .nowrap {\n            white-space: nowrap;\n        }\n    `;\n\n    override render() {\n        const contentIsEmptyOrUndefined = R.isEmpty(this.content);\n        return html`\n            <div\n                class=\"main\"\n                ?data-highlighted=${this._highlighted}\n                ?data-extended=${this._extended}\n                tabindex=\"1\"\n            >\n                <span\n                    @click=${this._handleClick}\n                    title=\"${this.heading}${!contentIsEmptyOrUndefined\n                        ? ` · ${this.content}`\n                        : ''}\"\n                >\n                    <span> ${this.heading} </span>\n                    <span ?hidden=${contentIsEmptyOrUndefined}\n                        >&middot; ${this.content}</span\n                    >\n                </span>\n                ${this.isContinuation\n                    ? this.translations.getTranslation('all day')\n                    : html`<span class=\"nowrap\"\n                          >${this._displayInterval(this.time)}</span\n                      > `}\n            </div>\n        `;\n    }\n\n    private _displayInterval(time?: CalendarTimeInterval) {\n        if (!time) {\n            return nothing;\n        }\n\n        const END_HOURS = 2;\n        const components = [\n            time.start.hour,\n            time.start.minute,\n            time.end.hour,\n            time.end.minute,\n        ];\n\n        const lastsAllDay =\n            components[END_HOURS] === 24 &&\n            components.reduce(this._sumReducer, 0) % 24 === 0;\n        if (lastsAllDay) {\n            return this.translations.getTranslation('all day');\n        }\n\n        const [startHours, startMinutes, endHours, endMinutes] = components.map(\n            (component) => (component < 10 ? `0${component}` : component),\n        );\n\n        return `${startHours}:${startMinutes} - ${endHours}:${endMinutes}`;\n    }\n\n    private _handleClick() {\n        this._highlighted = !this._highlighted;\n        this._extended = !this._extended;\n    }\n}\n","import { LitElement, css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport * as R from 'remeda';\nimport Translations from '../locales/Translations';\n\n@customElement('lms-calendar-header')\nexport default class Header extends LitElement {\n    private translations = new Translations();\n\n    @property({ type: String })\n    heading?: string;\n\n    @property({ type: Object })\n    activeDate?: CalendarDate;\n\n    @property({ type: Object })\n    expandedDate?: CalendarDate;\n\n    static override styles = css`\n        .controls {\n            height: 3.5em;\n            width: 100%;\n            /* padding: 0.75em 0; */\n            display: flex;\n            flex-direction: row;\n            flex-wrap: nowrap;\n            align-content: center;\n            justify-content: space-between;\n            align-items: center;\n            border-bottom: 1px solid var(--separator-light);\n        }\n\n        @media (max-width: 375px) {\n            .controls {\n                font-size: small;\n                height: 4.5em;\n            }\n        }\n        .info {\n            padding-left: 1em;\n            text-align: right;\n        }\n        .day,\n        .month,\n        .year {\n            color: rgba(0, 0, 0, 0.6);\n        }\n        .buttons {\n            padding-right: 1em;\n        }\n        button {\n            padding: 0.75em;\n            margin: 0;\n            border-radius: 50%;\n            line-height: 0.5em;\n            border: 1px solid transparent;\n        }\n        .context {\n            display: flex;\n        }\n        .context > * {\n            padding: 0.75em 0.5em;\n            border: 1px solid var(--separator-light);\n            background-color: var(--background-color);\n        }\n        .context > *:first-child {\n            border-radius: var(--border-radius-sm) 0 0 var(--border-radius-sm);\n            border-right: none;\n        }\n        .context > *:last-child {\n            border-radius: 0 var(--border-radius-sm) var(--border-radius-sm) 0;\n            border-left: none;\n        }\n        button[data-active] {\n            background-color: var(--separator-light);\n        }\n    `;\n\n    override render() {\n        const hasEmptyDate = R.isEmpty(this.expandedDate ?? {});\n        return html`<div class=\"controls\">\n            <div class=\"info\">\n                <span>\n                    <strong\n                        >${this.heading ||\n                        this.translations.getTranslation(\n                            'Current Month',\n                        )}</strong\n                    >\n                </span>\n                <div ?hidden=${hasEmptyDate}>\n                    <span class=\"day\">${this.expandedDate?.day}</span>\n                    <span class=\"month\"\n                        >${this.translations.getTranslation(\n                            this.expandedDate?.month,\n                        )}</span\n                    >\n                    <span class=\"year\">${this.expandedDate?.year}</span>\n                </div>\n                <div ?hidden=${!hasEmptyDate}>\n                    <span class=\"month\"\n                        >${this.translations.getTranslation(\n                            this.activeDate?.month,\n                        )}</span\n                    >\n                    <span class=\"year\">${this.activeDate?.year}</span>\n                </div>\n            </div>\n            <div class=\"context\" @click=${this._dispatchSwitchView}>\n                <button\n                    ?data-active=${!hasEmptyDate}\n                    data-context=\"day\"\n                    class=\"btn-change-view\"\n                >\n                    ${this.translations.getTranslation('Day')}\n                </button>\n                <button\n                    ?data-active=${hasEmptyDate}\n                    data-context=\"month\"\n                    class=\"btn-change-view\"\n                >\n                    ${this.translations.getTranslation('Month')}\n                </button>\n            </div>\n            <div class=\"buttons\" @click=${this._dispatchSwitchDate}>\n                <button name=\"previous\">«</button>\n                <button name=\"next\">»</button>\n            </div>\n        </div>`;\n    }\n\n    private _dispatchSwitchDate(e: Event) {\n        const target = e.target;\n        if (!(target instanceof HTMLButtonElement)) {\n            return;\n        }\n\n        const direction =\n            e.target === e.currentTarget ? 'container' : target.name;\n        const event = new CustomEvent('switchdate', {\n            detail: { direction },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(event);\n    }\n\n    private _dispatchSwitchView(e: Event) {\n        const target = e.target;\n        if (!(target instanceof HTMLElement)) {\n            return;\n        }\n\n        const view =\n            e.target === e.currentTarget ? 'container' : target.dataset.context;\n        const event = new CustomEvent('switchview', {\n            detail: { view },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(event);\n    }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n","import{noChange as t}from\"../lit-html.js\";import{directive as s,Directive as i,PartType as r}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=s(class extends i{constructor(t){if(super(t),t.type!==r.ATTRIBUTE||\"class\"!==t.name||t.strings?.length>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return\" \"+Object.keys(t).filter((s=>t[s])).join(\" \")+\" \"}update(s,[i]){if(void 0===this.st){this.st=new Set,void 0!==s.strings&&(this.nt=new Set(s.strings.join(\" \").split(/\\s/).filter((t=>\"\"!==t))));for(const t in i)i[t]&&!this.nt?.has(t)&&this.st.add(t);return this.render(i)}const r=s.element.classList;for(const t of this.st)t in i||(r.remove(t),this.st.delete(t));for(const t in i){const s=!!i[t];s===this.st.has(t)||this.nt?.has(t)||(s?(r.add(t),this.st.add(t)):(r.remove(t),this.st.delete(t)))}return t}});export{e as classMap};\n//# sourceMappingURL=class-map.js.map\n","import { DateTime } from 'luxon';\n\n/**\n * This class handles calculations and adjustments for CalendarDate objects based on a specified direction.\n *\n * @example\n * ```javascript\n * const dateCalculator = new DirectionalCalendarDateCalculator({\n *   date: { year: 2023, month: 8, day: 15 },\n *   direction: 'next'\n * });\n *\n * const newDate = dateCalculator.getDateByMonthInDirection();\n * // newDate would be { year: 2023, month: 9, day: 15 }\n * ```\n */\nexport default class DirectionalCalendarDateCalculator {\n    private _date?: CalendarDate | DateTime;\n\n    private _direction?: string;\n\n    constructor({\n        date,\n        direction,\n    }: {\n        date?: CalendarDate;\n        direction?: 'previous' | 'next';\n    }) {\n        this._date = date ? DateTime.fromObject(date) : undefined; // Convert CalendarDate to DateTime\n        this._direction = direction;\n    }\n\n    set date(date: CalendarDate) {\n        const newDate = DateTime.fromObject(date);\n        if (!(newDate instanceof DateTime)) {\n            throw new Error(\"date couldn't be converted to DateTime object\");\n        }\n\n        this._date = newDate;\n    }\n\n    set direction(direction: 'previous' | 'next') {\n        this._direction = direction;\n    }\n\n    public getDateByDayInDirection() {\n        if (!(this._date instanceof DateTime) || !this._direction) {\n            throw new Error('date or direction not defined.');\n        }\n\n        const adjustedDate = this._date.plus({\n            days: this._direction === 'next' ? 1 : -1,\n        });\n\n        return {\n            day: adjustedDate.day,\n            month: adjustedDate.month,\n            year: adjustedDate.year,\n        };\n    }\n\n    public getDateByMonthInDirection() {\n        if (!(this._date instanceof DateTime) || !this._direction) {\n            throw new Error('date or direction not defined.');\n        }\n\n        let newYear = this._date.year;\n        let newMonth = this._date.month + (this._direction === 'next' ? 1 : -1);\n\n        if (newMonth > 12) {\n            newMonth = 1;\n            newYear++;\n        } else if (newMonth < 1) {\n            newMonth = 12;\n            newYear--;\n        }\n\n        const newDate = DateTime.fromObject({\n            year: newYear,\n            month: newMonth,\n            day: this._date.day, // Preserve the day\n        });\n\n        return {\n            day: newDate.day,\n            month: newDate.month,\n            year: newDate.year,\n        };\n    }\n}\n","import { LitElement, css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { match } from 'ts-pattern';\nimport DirectionalCalendarDateCalculator from '../lib/DirectionalCalendarDateCalculator';\nimport Translations from '../locales/Translations';\n\n@customElement('lms-calendar-month')\nexport default class Month extends LitElement {\n    private translations = new Translations();\n\n    private currentDate = new Date();\n\n    @property({ attribute: false })\n    activeDate: CalendarDate = {\n        day: this.currentDate.getDate(),\n        month: this.currentDate.getMonth() + 1,\n        year: this.currentDate.getFullYear(),\n    };\n\n    static override styles = css`\n        .month {\n            /* Header: 3.5em, Context: 2em, Border: 2px */\n            height: calc(100% - 5.5em + 2px);\n            display: grid;\n            grid-template-columns: repeat(7, 1fr);\n            border-top: 1px solid var(--separator-light);\n        }\n\n        .month > div {\n            border-bottom: 1px solid var(--separator-light);\n            border-right: 1px solid var(--separator-light);\n        }\n\n        .month > div:nth-child(7n + 7) {\n            border-right: none;\n        }\n\n        .month > div:nth-last-child(-n + 7) {\n            border-bottom: none;\n        }\n\n        .day {\n            width: 100%;\n            position: relative;\n            display: flex;\n            flex-direction: column;\n            overflow-x: hidden;\n            gap: 1px;\n        }\n\n        .indicator.current {\n            color: crimson;\n            font-weight: bold;\n        }\n\n        .indicator {\n            position: sticky;\n            top: 0.25em;\n            text-align: right;\n            padding: 0 0.25em;\n            margin-bottom: 0.25em;\n            text-align: left;\n        }\n    `;\n\n    private _isCurrentDate(date: string) {\n        return (\n            new Date(date).toDateString() === this.currentDate.toDateString()\n        );\n    }\n\n    private _renderIndicator({ year, month, day }: CalendarDate) {\n        const isCurrentDate = this._isCurrentDate(`${year}/${month}/${day}`);\n        return html` <div\n            class=\"indicator ${classMap({\n                current: isCurrentDate,\n            })}\"\n        >\n            ${match(day)\n                .with(\n                    1,\n                    () => html`\n                        ${day}. ${this.translations.getTranslation(month)}\n                    `,\n                )\n                .otherwise(() => html` ${day} `)}\n        </div>`;\n    }\n\n    override render() {\n        return html`\n            <div class=\"month\">\n                ${this._getCalendarArray()?.map(\n                    ({ year, month, day }) =>\n                        html`<div\n                            class=\"day\"\n                            data-date=\"${year}-${month}-${day}\"\n                            @click=${this._dispatchExpand}\n                            @keydown=${this._handleKeydown}\n                            tabindex=\"0\"\n                        >\n                            ${this._renderIndicator({ year, month, day })}\n                            <slot name=\"${year}-${month}-${day}\"></slot>\n                        </div>`,\n                )}\n            </div>\n        `;\n    }\n\n    private _dispatchExpand(e: Event) {\n        const target = e.target;\n        if (!(target instanceof HTMLElement)) {\n            return;\n        }\n\n        const { date } = target.dataset;\n        if (!date) {\n            return;\n        }\n\n        const [year, month, day] = date\n            .split('-')\n            .map((field: string) => parseInt(field, 10));\n        const event = new CustomEvent('expand', {\n            detail: { date: { day, month, year } },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(event);\n    }\n\n    private _handleKeydown(e: KeyboardEvent) {\n        const key = e.key;\n        if (!(key === 'Space' || key === 'Enter')) {\n            return;\n        }\n\n        this._dispatchExpand(e);\n    }\n\n    private _getDaysInMonth(date: CalendarDate) {\n        /** Important note: Passing 0 as the date shifts the\n         *  months indices by positive 1, so 1-12 */\n        return new Date(date.year, date.month, 0).getDate();\n    }\n\n    private _getOffsetOfFirstDayInMonth(date: CalendarDate) {\n        const offset = new Date(`${date.year}/${date.month}/01`).getDay();\n        return offset === 0 ? 6 : offset - 1;\n    }\n\n    private _getDatesInMonthAsArray(date: CalendarDate, sliceArgs: number[]) {\n        return [\n            ...Array.from(Array(this._getDaysInMonth(date)).keys(), (_, n) => ({\n                year: date.year,\n                month: date.month,\n                day: n + 1,\n            })).slice(...sliceArgs),\n        ];\n    }\n\n    private _getCalendarArray() {\n        if (!this.activeDate) {\n            return;\n        }\n\n        const dateTransformer = new DirectionalCalendarDateCalculator({\n            date: this.activeDate,\n        });\n\n        dateTransformer.direction = 'previous';\n        const previousMonth = this._getDatesInMonthAsArray(\n            dateTransformer.getDateByMonthInDirection(),\n            this._getOffsetOfFirstDayInMonth(this.activeDate)\n                ? [this._getOffsetOfFirstDayInMonth(this.activeDate) * -1]\n                : [-0, -0],\n        );\n        const activeMonth = this._getDatesInMonthAsArray(this.activeDate, []);\n        dateTransformer.direction = 'next';\n        const nextMonth = this._getDatesInMonthAsArray(\n            dateTransformer.getDateByMonthInDirection(),\n            [0, 42 - (previousMonth.length + activeMonth.length)],\n        );\n\n        return previousMonth.concat(activeMonth, nextMonth);\n    }\n}\n","export default function getColorTextWithContrast(\n    color: string,\n): [string, string] {\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n\n    if (color) {\n        const matches: RegExpMatchArray | null = color\n            .replace(\n                /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n                (_m, r, g, b) => `#${r}${r}${g}${g}${b}${b}`,\n            )\n            .substring(1)\n            .match(/.{2}/g);\n\n        if (!matches) {\n            // Return default background and text colors\n            return ['rgb(255,255,255)', 'rgb(0,0,0)'];\n        }\n\n        [red, green, blue] = matches.map((x) => parseInt(x, 16));\n    }\n\n    // Calculate brightness of randomized colour\n    const brightness = (red * 299 + green * 587 + blue * 114) / 1000;\n\n    // Calculate brightness of white and black text\n    const lightText = (255 * 299 + 255 * 587 + 255 * 114) / 1000;\n    const darkText = (0 * 299 + 0 * 587 + 0 * 114) / 1000;\n\n    const backgroundColor = `rgb(${red},${green},${blue})`;\n    const textColor =\n        Math.abs(brightness - lightText) > Math.abs(brightness - darkText)\n            ? 'rgb(255, 255, 255)'\n            : 'rgb(0, 0, 0)';\n\n    return [backgroundColor, textColor];\n}\n","/** This is an implementation of the sweep-line algorithm\n *  Ref: https://www.baeldung.com/cs/finding-all-overlapping-intervals \\\n *  Example: https://stackoverflow.com/questions/30472556/how-to-find-all-overlapping-ranges-and-partition-them-into-chunks\n */\nexport default function partitionOverlappingIntervals(intervals: Interval[]) {\n    const rightEndValues = intervals.map((r) => r.end).sort((a, b) => a - b);\n    intervals.sort((a, b) => a.start - b.start);\n\n    let i = 0;\n    let j = 0;\n    let active = 0;\n\n    const groups = [];\n    let cur = [];\n\n    while (i < intervals.length && j < rightEndValues.length) {\n        if (intervals[i].start < rightEndValues[j]) {\n            cur.push(intervals[i++]);\n            ++active;\n        } else {\n            ++j;\n            if (--active === 0) {\n                groups.push(cur);\n                cur = [];\n            }\n        }\n    }\n\n    if (cur.length > 0) {\n        groups.push(cur);\n    }\n\n    return groups;\n}\n","import partitionOverlappingIntervals from './partitionOverlappingIntervals.js';\n\nexport default function getOverlappingEntitiesIndices(\n    partitions: Interval[][],\n): Grading[] {\n    /** First we determine all non-overlapping partitions and save their indices.\n     *  Indices go into the index portion of the resolving objects and we add\n     *  a depth of 0 to indicate, that this is a full-width element.\n     */\n\n    const result = partitions.reduce(\n        (accumulator: Grading[], partition, index: number) =>\n            partition.length === 1\n                ? [\n                      ...accumulator,\n                      {\n                          index: [partitions.slice(0, index)].flatMap(\n                              (item) => item.flat().length,\n                          )[0],\n                          depth: 0,\n                          group: index,\n                      },\n                  ]\n                : [...accumulator],\n        [],\n    );\n\n    /** Then we filter the non-overlapping partitions out */\n    const _partitions = partitions\n        .map((partition, index) =>\n            partition.map((item, _index) => ({\n                ...item,\n                index:\n                    [partitions.slice(0, index)].flatMap(\n                        (item) => item.flat().length,\n                    )[0] + _index,\n                group: index,\n            })),\n        )\n        .filter((partition) => partition.length > 1);\n\n    /** For each of the remaining partitions we have to check how deeply they overlap.\n     *  TODO: Add indictor for partition group; document...\n     */\n    let depth = 0;\n    let openGroup: number | undefined = Math.min(\n        ...[..._partitions.map((partition) => partition[0].group)],\n    );\n    function recursiveBubbleSort({\n        partitions,\n        isNested = false,\n    }: {\n        partitions: Partition[][];\n        isNested?: Boolean;\n    }) {\n        depth = isNested ? (depth += 1) : 0;\n        partitions.forEach((partition: Partition[]) => {\n            const { group } = partition[0];\n            if (openGroup !== group) {\n                depth = 0;\n            }\n            openGroup = group;\n\n            const delta = [\n                ...partition.map(({ start, end }: Partition) => end - start),\n            ];\n            const maxDelta = Math.max(...delta);\n            const indexMaxDelta: number = delta.indexOf(maxDelta);\n\n            result.push({\n                index: partition[indexMaxDelta].index as number,\n                depth,\n                group: partition[indexMaxDelta].group as number,\n            });\n\n            partition.splice(delta.indexOf(maxDelta), 1);\n\n            recursiveBubbleSort({\n                partitions: partitionOverlappingIntervals(\n                    partition as Interval[],\n                ) as Partition[][],\n                isNested: true,\n            });\n        });\n    }\n\n    recursiveBubbleSort({ partitions: _partitions as Partition[][] });\n\n    return result.sort((a, b) => a.index - b.index);\n}\n","export default function rearrangeDepths(gradings: Grading[]) {\n    const groups = new Map<number, Grading[]>();\n\n    gradings.forEach((item) => {\n        if (!groups.has(item.group)) {\n            groups.set(item.group, []);\n        }\n        groups\n            .get(item.group)!\n            .push({ index: item.index, depth: item.depth, group: item.group });\n    });\n\n    const result: Grading[] = [];\n    groups.forEach((groupGradings) => {\n        groupGradings.sort((a, b) => a.index - b.index);\n        groupGradings.forEach((item, i) => {\n            result.push({ index: item.index, depth: i, group: item.group });\n        });\n    });\n\n    result.sort((a, b) => a.index - b.index);\n    return result;\n}\n","import { ResizeController } from '@lit-labs/observers/resize-controller.js';\nimport {\n    CSSResult,\n    LitElement,\n    PropertyValueMap,\n    css,\n    html,\n    nothing,\n    unsafeCSS,\n} from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { DateTime, Interval } from 'luxon';\nimport * as R from 'remeda';\nimport { match } from 'ts-pattern';\nimport LMSCalendarContext from './components/Context';\nimport './components/Context.js';\nimport LMSCalendarDay from './components/Day';\nimport './components/Day.js';\nimport LMSCalendarEntry from './components/Entry';\nimport './components/Entry.js';\nimport LMSCalendarHeader from './components/Header';\nimport './components/Header.js';\nimport LMSCalendarMonth from './components/Month';\nimport './components/Month.js';\nimport DirectionalCalendarDateCalculator from './lib/DirectionalCalendarDateCalculator.js';\nimport getColorTextWithContrast from './lib/getColorTextWithContrast.js';\nimport getOverlappingEntitiesIndices from './lib/getOverlappingEntitiesIndices.js';\nimport getSortedGradingsByIndex from './lib/getSortedGradingsByIndex.js';\nimport partitionOverlappingIntervals from './lib/partitionOverlappingIntervals.js';\n\n@customElement('lms-calendar')\nexport default class LMSCalendar extends LitElement {\n    private currentDate = new Date();\n\n    @property({ type: String })\n    heading?: string;\n\n    @property({ type: Object })\n    activeDate: CalendarDate = {\n        day: this.currentDate.getDate(),\n        month: this.currentDate.getMonth() + 1,\n        year: this.currentDate.getFullYear(),\n    };\n\n    @property({ type: Array })\n    entries: CalendarEntry[] = [];\n\n    @property({ type: String })\n    color = '#000000';\n\n    @state()\n    _expandedDate?: CalendarDate;\n\n    @state() _calendarWidth: number = window.innerWidth;\n\n    private _handleResize = (entries: ResizeObserverEntry[]): void => {\n        const [div] = entries;\n\n        this._calendarWidth = div.contentRect.width || this._calendarWidth;\n    };\n\n    private _resizeController: ResizeController<void> =\n        new ResizeController<void>(this, {\n            target: null,\n            callback: this._handleResize,\n            skipInitial: true,\n        });\n\n    static override styles = css`\n        :host {\n            --shadow-sm: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n            --shadow-md: rgba(0, 0, 0, 0.15) 0px 3px 3px 0px;\n            --shadow-lg: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n            --shadow-hv: rgba(0, 0, 0, 0.08) 0px 4px 12px;\n\n            --breakpoint-xs: 425px;\n            --breakpoint-sm: 768px;\n            --breakpoint-md: 1024px;\n\n            --separator-light: rgba(0, 0, 0, 0.1);\n            --separator-mid: rgba(0, 0, 0, 0.4);\n            --separator-dark: rgba(0, 0, 0, 0.7);\n\n            --system-ui: system-ui, 'Segoe UI', Roboto, Helvetica, Arial,\n                sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n                'Segoe UI Symbol';\n\n            --border-radius-sm: 5px;\n            --border-radius-md: 7px;\n            --border-radius-lg: 12px;\n\n            --background-color: #ffffff;\n\n            --height: 100%;\n            --width: 100%;\n        }\n        div {\n            width: var(--width);\n            height: var(--height);\n            background-color: var(--background-color);\n            border-radius: var(--border-radius-lg);\n            border: 1px solid var(--separator-light);\n            font-family: var(--system-ui);\n            color: var(--separator-dark);\n            box-shadow: var(--shadow-md);\n        }\n    `;\n\n    protected override firstUpdated(\n        _changedProperties: PropertyValueMap<never> | Map<PropertyKey, unknown>,\n    ): void {\n        const firstElementChild = this.shadowRoot?.firstElementChild;\n        if (!firstElementChild) {\n            return;\n        }\n\n        this._resizeController.observe(firstElementChild);\n    }\n\n    /** We filter invalid entries in the willUpdate hook, so be prepared:\n     *  - This will not be shown\n     *   ```json\n     *   { date: ..., time: { start: { hour: 10, minute: 30 }, end: { hour: 10, minute: 00 } } }\n     *  ```\n     *  - The same goes for invalid dates meaning the end date being before the start date.\n     *\n     *  We then sort the entries inplace.\n     */\n    protected override willUpdate(\n        _changedProperties: PropertyValueMap<never> | Map<PropertyKey, unknown>,\n    ): void {\n        if (!this.entries.length) {\n            return;\n        }\n\n        this.entries = R.pipe(\n            this.entries,\n            R.filter(\n                (entry) =>\n                    Interval.fromDateTimes(\n                        DateTime.fromObject(\n                            R.merge(entry.date.start, entry.time.start),\n                        ),\n                        DateTime.fromObject(\n                            R.merge(entry.date.end, entry.time.end),\n                        ),\n                    ).isValid,\n            ),\n            R.sort.strict(\n                (a, b) =>\n                    a.time.start.hour - b.time.start.hour ||\n                    a.time.start.minute - b.time.start.minute,\n            ),\n        );\n    }\n\n    override render() {\n        const hasExpandedDate = !R.isEmpty(this._expandedDate ?? {});\n        return html`\n            <div>\n                <lms-calendar-header\n                    @switchdate=${this._handleSwitchDate}\n                    @switchview=${this._handleSwitchView}\n                    .heading=${this.heading}\n                    .activeDate=${this.activeDate}\n                    .expandedDate=${this._expandedDate}\n                >\n                </lms-calendar-header>\n\n                <lms-calendar-context ?hidden=${hasExpandedDate}>\n                </lms-calendar-context>\n\n                <lms-calendar-month\n                    @expand=${this._handleExpand}\n                    .activeDate=${this.activeDate}\n                    ?hidden=${hasExpandedDate}\n                >\n                    ${this._calendarWidth < 768\n                        ? this._renderEntriesSumByDay()\n                        : this._renderEntries()}\n                </lms-calendar-month>\n\n                <lms-calendar-day ?hidden=${!hasExpandedDate}>\n                    ${this._renderEntriesByDate()}\n                </lms-calendar-day>\n            </div>\n        `;\n    }\n\n    private _handleSwitchDate(e: CustomEvent) {\n        const dateCalculator = new DirectionalCalendarDateCalculator({});\n        dateCalculator.direction = e.detail.direction;\n\n        if (this._expandedDate) {\n            dateCalculator.date = this._expandedDate;\n            const dateInDirection = dateCalculator.getDateByDayInDirection();\n            this._expandedDate = dateInDirection;\n            this.activeDate = dateInDirection;\n            return;\n        }\n\n        dateCalculator.date = this.activeDate;\n        this.activeDate = dateCalculator.getDateByMonthInDirection();\n    }\n\n    private _handleSwitchView(e: CustomEvent) {\n        return match(e.detail.view)\n            .with('day', () => {\n                this._expandedDate = !R.isEmpty(this._expandedDate ?? {})\n                    ? this._expandedDate\n                    : this.activeDate;\n            })\n            .with('month', () => {\n                this.activeDate = this._expandedDate ?? this.activeDate;\n                this._expandedDate = undefined;\n            })\n            .otherwise(() => {});\n    }\n\n    private _handleExpand(e: CustomEvent) {\n        this._expandedDate = e.detail.date;\n    }\n\n    private _composeEntry({\n        index,\n        slot,\n        styles,\n        entry,\n        isContinuation = false,\n    }: {\n        index: number;\n        slot: string;\n        styles: CSSResult;\n        entry: Partial<CalendarEntry>;\n        isContinuation?: boolean;\n    }) {\n        return html`\n            <style>\n                ${styles}\n            </style>\n            <lms-calendar-entry\n                class=${`_${index}`}\n                slot=${slot}\n                .time=${entry.time}\n                .heading=${entry.heading ?? ''}\n                .content=${entry.content}\n                .isContinuation=${isContinuation ?? false}\n            >\n            </lms-calendar-entry>\n        `;\n    }\n\n    /** Create an array of <lms-calendar-entry> elements for each day the entry spans\n     *  and add them to the entries array. */\n    private _expandEntryMaybe({\n        entry,\n        entryIndex,\n        range,\n        styles,\n    }: {\n        entry: Partial<CalendarEntry>;\n        entryIndex: number;\n        range: [Date, Date, number];\n        styles: string[];\n    }) {\n        return Array.from({ length: range[2] }, (_, index) => {\n            const currentStartDate = DateTime.fromJSDate(range[0]).plus({\n                days: index,\n            });\n            const currentEndDate = currentStartDate\n                .plus({ days: 1 })\n                .minus({ seconds: 1 });\n            const currentEntry = {\n                ...entry,\n                date: {\n                    start: currentStartDate.toObject(),\n                    end: currentEndDate.toObject(),\n                },\n            };\n\n            const slot = `${currentEntry.date.start.year}-${currentEntry.date.start.month}-${currentEntry.date.start.day}`;\n            const isContinuation = index > 0 && range[2] > 1;\n\n            return this._composeEntry({\n                index: entryIndex,\n                slot,\n                styles: css`\n                    lms-calendar-entry._${entryIndex} {\n                        --entry-br: ${unsafeCSS(\n                            range[2] > 1 ? 0 : 'var(--border-radius-sm)',\n                        )};\n                        --entry-m: 0 ${unsafeCSS(index !== 0 ? 0 : '0.25em')} 0\n                            ${unsafeCSS(index !== 0 ? 0 : '1.5em')};\n                        --entry-bc: ${unsafeCSS(styles[0])};\n                        --entry-c: ${unsafeCSS(styles[1])};\n                    }\n                `,\n                entry: {\n                    time: currentEntry.time,\n                    heading: isContinuation ? '' : currentEntry.heading,\n                },\n                isContinuation,\n            });\n        });\n    }\n\n    private _renderEntries() {\n        if (!this.entries.length) {\n            return nothing;\n        }\n\n        return R.pipe(\n            this.entries,\n            R.map.indexed((entry, index) =>\n                this._expandEntryMaybe({\n                    entry,\n                    entryIndex: index,\n                    range: this._getDaysRange(entry.date),\n                    styles: getColorTextWithContrast(entry.color),\n                }),\n            ),\n            R.flatten(),\n        );\n    }\n\n    private _renderEntriesByDate() {\n        if (R.isEmpty(this._expandedDate ?? {})) {\n            return nothing;\n        }\n\n        const entriesByDate = R.pipe(\n            this.entries,\n            R.filter((entry) =>\n                R.equals(entry.date.start, this._expandedDate ?? {}),\n            ),\n        );\n\n        let grading: Grading[] = [];\n        if (!R.isEmpty(entriesByDate)) {\n            grading = R.pipe(\n                entriesByDate,\n                R.map(({ time }) =>\n                    this._getGridSlotByTime(time)\n                        .replace(/[^0-9/]+/g, '')\n                        .split('/'),\n                ),\n                R.map(([start, end]) => ({\n                    start: parseInt(start, 10),\n                    end: parseInt(end, 10),\n                })),\n                partitionOverlappingIntervals,\n                getOverlappingEntitiesIndices,\n                getSortedGradingsByIndex,\n            );\n        }\n\n        return R.pipe(\n            entriesByDate,\n            R.map(\n                (entry) =>\n                    [entry, ...getColorTextWithContrast(entry.color ?? '')] as [\n                        CalendarEntry,\n                        string,\n                        string,\n                    ],\n            ),\n            R.map.indexed(([entry, background, text], index) =>\n                this._composeEntry({\n                    index,\n                    slot: entry.time.start.hour.toString(),\n                    styles: css`\n                        lms-calendar-entry._${index} {\n                            --start-slot: ${unsafeCSS(\n                                this._getGridSlotByTime(entry.time),\n                            )};\n                            --entry-w: ${this._getWidthByGroupSize({\n                                grading,\n                                index,\n                            })}%;\n                            --entry-m: 0 1.5em 0\n                                ${this._getOffsetByDepth({ grading, index })}%;\n                            --entry-bc: ${unsafeCSS(background)};\n                            --entry-c: ${unsafeCSS(text)};\n                        }\n                    `,\n                    entry,\n                }),\n            ),\n        );\n    }\n\n    private _renderEntriesSumByDay() {\n        return R.pipe(\n            this.entries,\n            R.reduce((acc, entry) => {\n                const key = `${entry.date.start.day}-${entry.date.start.month}-${entry.date.start.year}`;\n                acc[key] = acc[key] ? acc[key] + 1 : 1;\n                return acc;\n            }, {} as Record<string, number>),\n            Object.entries,\n            R.map.indexed(([key, value], index) =>\n                this._composeEntry({\n                    index,\n                    slot: key.split('-').reverse().join('-'),\n                    styles: css`\n                        lms-calendar-entry._${index} {\n                            --entry-br: var(--border-radius-sm);\n                            --entry-m: 0 auto;\n                            --entry-bc: whitesmoke;\n                            --entry-c: black;\n                        }\n                    `,\n                    entry: {\n                        heading: `[ ${value} ]`,\n                    },\n                }),\n            ),\n        );\n    }\n\n    private _getGridSlotByTime({ start, end }: CalendarTimeInterval) {\n        const startRow = start.hour * 60 + (start.minute + 1);\n        return `${startRow}/${\n            startRow + (end.hour * 60 + end.minute - startRow)\n        }`;\n    }\n\n    private _getWidthByGroupSize({\n        grading,\n        index,\n    }: {\n        grading: Grading[];\n        index: number;\n    }) {\n        return (\n            100 /\n            grading.filter((item) => item.group === grading[index].group).length\n        );\n    }\n\n    private _getOffsetByDepth({\n        grading,\n        index,\n    }: {\n        grading: Grading[];\n        index: number;\n    }) {\n        if (!grading[index]) {\n            return 0;\n        }\n\n        return grading[index].depth === 0\n            ? 0\n            : grading[index].depth *\n                  (100 /\n                      grading.filter(\n                          (item) => item.group === grading[index].group,\n                      ).length);\n    }\n\n    private _getDaysRange(date: CalendarDateInterval): [Date, Date, number] {\n        const { start, end } = date;\n        const startDate = new Date(start.year, start.month - 1, start.day);\n        const endDate = new Date(end.year, end.month - 1, end.day);\n\n        return [\n            startDate,\n            endDate,\n            (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24) + 1,\n        ];\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'lms-calendar': LMSCalendar;\n        'lms-calendar-header': LMSCalendarHeader;\n        'lms-calendar-month': LMSCalendarMonth;\n        'lms-calendar-day': LMSCalendarDay;\n        'lms-calendar-context': LMSCalendarContext;\n        'lms-calendar-entry': LMSCalendarEntry;\n    }\n\n    type CalendarDate = {\n        day: number;\n        month: number;\n        year: number;\n    };\n\n    type CalendarDateInterval = {\n        start: CalendarDate;\n        end: CalendarDate;\n    };\n\n    type CalendarTime = {\n        hour: number;\n        minute: number;\n    };\n\n    type CalendarTimeInterval = {\n        start: CalendarTime;\n        end: CalendarTime;\n    };\n\n    type CalendarEntry = {\n        date: CalendarDateInterval;\n        time: CalendarTimeInterval;\n        heading: string;\n        content: string;\n        color: string;\n    };\n\n    type Interval = {\n        start: number;\n        end: number;\n    };\n\n    type Grading = {\n        index: number;\n        depth: number;\n        group: number;\n    };\n\n    type Partition = {\n        index?: number;\n        depth?: number;\n        group?: number;\n        start: number;\n        end: number;\n    };\n}\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","SuppressedError","s$5","constructor","s","t","config","callback","h","skipInitial","e","this","Set","o","add","l","window","ResizeObserver","u","handleChanges","requestUpdate","addController","console","warn","value","hostConnected","observe","hostDisconnected","disconnect","hostUpdated","unobserve","delete","globalThis","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","Symbol","WeakMap","n$5","_$cssResult$","Error","cssText","styleSheet","get","replaceSync","set","toString","n","reduce","cssRules","is","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","a","trustedTypes","emptyScript","p","reactiveElementPolyfillSupport","toAttribute","Boolean","Array","JSON","stringify","fromAttribute","Number","parse","f","y","attribute","type","String","converter","reflect","hasChanged","metadata","litPropertyMetadata","b$1","HTMLElement","addInitializer","_$Ei","push","observedAttributes","finalize","_$Eh","keys","createProperty","state","elementProperties","noAccessor","getPropertyDescriptor","call","configurable","enumerable","getPropertyOptions","hasOwnProperty","Map","finalized","properties","_$Eu","elementStyles","finalizeStyles","styles","isArray","flat","reverse","unshift","toLowerCase","super","_$Ep","isUpdatePending","hasUpdated","_$Em","_$Ev","_$ES","Promise","enableUpdating","_$AL","_$E_","forEach","_$EO","renderRoot","isConnected","removeController","size","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","document","createElement","litNonce","setAttribute","textContent","appendChild","connectedCallback","disconnectedCallback","attributeChangedCallback","_$AK","_$EC","removeAttribute","P","_$ET","has","_$Ej","reject","scheduleUpdate","performUpdate","wrapped","shouldUpdate","willUpdate","hostUpdate","update","_$EU","_$AE","firstUpdated","updated","updateComplete","getUpdateComplete","b","mode","ReactiveElement","reactiveElementVersions","createPolicy","createHTML","Math","random","slice","createComment","v","_","m","RegExp","g","$","x","_$litType$","strings","values","w","for","T","A","E","createTreeWalker","C","lastIndex","exec","test","startsWith","V","parts","el","currentNode","content","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","getAttributeNames","endsWith","getAttribute","split","index","name","ctor","k","H","I","R","tagName","append","data","indexOf","innerHTML","N","_$Co","_$Cl","_$litDirective$","_$AO","_$AT","_$AS","S","_$AV","_$AN","_$AD","_$AM","parentNode","_$AU","creationScope","importNode","M","nextSibling","L","_$AI","_$Cv","_$AH","_$AA","_$AB","options","startNode","endNode","_$AR","iterator","insertBefore","createTextNode","_$AC","_$AP","remove","setConnected","element","fill","j","toggleAttribute","capture","once","passive","removeEventListener","addEventListener","handleEvent","host","Z","litHtmlPolyfillSupport","litHtmlVersions","s$2","renderOptions","_$Do","renderBefore","render","_$litPart$","_$litElement$","litElementHydrateSupport","LitElement","litElementPolyfillSupport","litElementVersions","customElements","define","kind","init","LuxonError","InvalidDateTimeError","reason","toMessage","InvalidIntervalError","InvalidDurationError","ConflictingSpecificationError","InvalidUnitError","unit","InvalidArgumentError","ZoneIsAbstractError","DATE_SHORT","year","month","day","DATE_MED","DATE_MED_WITH_WEEKDAY","weekday","DATE_FULL","DATE_HUGE","TIME_SIMPLE","hour","minute","TIME_WITH_SECONDS","second","TIME_WITH_SHORT_OFFSET","timeZoneName","TIME_WITH_LONG_OFFSET","TIME_24_SIMPLE","hourCycle","TIME_24_WITH_SECONDS","TIME_24_WITH_SHORT_OFFSET","TIME_24_WITH_LONG_OFFSET","DATETIME_SHORT","DATETIME_SHORT_WITH_SECONDS","DATETIME_MED","DATETIME_MED_WITH_SECONDS","DATETIME_MED_WITH_WEEKDAY","DATETIME_FULL","DATETIME_FULL_WITH_SECONDS","DATETIME_HUGE","DATETIME_HUGE_WITH_SECONDS","Zone","ianaName","isUniversal","offsetName","ts","opts","formatOffset","format","offset","equals","otherZone","isValid","singleton","SystemZone","instance","Intl","DateTimeFormat","resolvedOptions","timeZone","locale","parseZoneInfo","Date","getTimezoneOffset","dtfCache","typeToPos","era","ianaZoneCache","IANAZone","create","resetCache","isValidSpecifier","isValidZone","zone","zoneName","valid","date","isNaN","NaN","dtf","hour12","adOrBc","formatToParts","formatted","filled","pos","isUndefined","parseInt","partsOffset","replace","parsed","fMonth","fDay","fYear","fadOrBc","fHour","fMinute","fSecond","hackyOffset","abs","asTS","over","objToLocalTS","millisecond","intlLFCache","intlDTCache","getCachedDTF","locString","intlNumCache","intlRelCache","sysLocaleCache","weekInfoCache","listStuff","loc","englishFn","intlFn","listingMode","PolyNumberFormatter","intl","forceSimple","padTo","floor","otherOpts","intlOpts","useGrouping","minimumIntegerDigits","inf","NumberFormat","getCachedINF","fixed","padStart","roundTo","PolyDateFormatter","dt","z","originalZone","undefined","gmtOffset","offsetZ","setZone","plus","minutes","join","toJSDate","part","PolyRelFormatter","isEnglish","style","hasRelative","rtf","base","cacheKeyOpts","RelativeTimeFormat","getCachedRTF","count","numeric","narrow","units","years","quarters","months","weeks","days","hours","seconds","lastable","isDay","isInPast","fmtValue","singular","lilUnits","fmtUnit","English.formatRelativeTime","fallbackWeekSettings","firstDay","minimalDays","weekend","Locale","fromOpts","numberingSystem","outputCalendar","weekSettings","defaultToEN","specifiedLocale","Settings","defaultLocale","localeR","numberingSystemR","defaultNumberingSystem","outputCalendarR","defaultOutputCalendar","weekSettingsR","validateWeekSettings","defaultWeekSettings","fromObject","numbering","parsedLocale","parsedNumberingSystem","parsedOutputCalendar","localeStr","xIndex","substring","uIndex","selectedStr","smaller","calendar","parseLocaleString","includes","intlConfigString","weekdaysCache","standalone","monthsCache","meridiemCache","eraCache","fastNumbersCached","fastNumbers","isActuallyEn","hasNoWeirdness","clone","alts","redefaultToEN","redefaultToSystem","English.months","formatStr","ms","DateTime","utc","mapMonths","extract","weekdays","English.weekdays","mapWeekdays","meridiems","English.meridiems","eras","English.eras","field","matching","dtFormatter","find","numberFormatter","relFormatter","listFormatter","ListFormat","getCachedLF","getWeekSettings","hasLocaleWeekInfo","getWeekInfo","weekInfo","getCachedWeekInfo","getStartOfWeek","getMinDaysInFirstWeek","getWeekendDays","other","FixedOffsetZone","utcInstance","parseSpecifier","match","signedOffset","InvalidZone","normalizeZone","input","defaultZone","isString","lowered","isNumber","throwOnInvalid","now","twoDigitCutoffYear","cutoffYear","resetCaches","Invalid","explanation","nonLeapLadder","leapLadder","unitOutOfRange","dayOfWeek","UTC","setUTCFullYear","getUTCFullYear","js","getUTCDay","computeOrdinal","isLeapYear","uncomputeOrdinal","ordinal","table","month0","findIndex","isoWeekdayToLocal","isoWeekday","startOfWeek","gregorianToWeek","gregObj","minDaysInFirstWeek","weekYear","weekNumber","weeksInWeekYear","timeObject","weekToGregorian","weekData","weekdayOfJan4","yearInDays","daysInYear","gregorianToOrdinal","gregData","ordinalToGregorian","ordinalData","usesLocalWeekValues","obj","localWeekday","localWeekNumber","localWeekYear","hasInvalidGregorianData","validYear","isInteger","validMonth","integerBetween","validDay","daysInMonth","hasInvalidTimeData","validHour","validMinute","validSecond","validMillisecond","bestBy","arr","by","compare","best","next","pair","prop","settings","some","from","thing","bottom","top","padded","parseInteger","string","parseFloating","parseFloat","parseMillis","fraction","number","digits","towardZero","factor","trunc","round","modMonth","floorMod","firstWeekOffset","weekOffset","weekOffsetNext","untruncateYear","offsetFormat","modified","offHourStr","offMinuteStr","offHour","offMin","asNumber","numericValue","normalizeObject","normalizer","normalized","sign","RangeError","pick","monthsLong","monthsShort","monthsNarrow","weekdaysLong","weekdaysShort","weekdaysNarrow","erasLong","erasShort","erasNarrow","stringifyTokens","splits","tokenToString","token","literal","val","macroTokenToFormatOpts","D","Formats.DATE_SHORT","DD","Formats.DATE_MED","DDD","Formats.DATE_FULL","DDDD","Formats.DATE_HUGE","Formats.TIME_SIMPLE","tt","Formats.TIME_WITH_SECONDS","ttt","Formats.TIME_WITH_SHORT_OFFSET","tttt","Formats.TIME_WITH_LONG_OFFSET","Formats.TIME_24_SIMPLE","TT","Formats.TIME_24_WITH_SECONDS","TTT","Formats.TIME_24_WITH_SHORT_OFFSET","TTTT","Formats.TIME_24_WITH_LONG_OFFSET","Formats.DATETIME_SHORT","ff","Formats.DATETIME_MED","fff","Formats.DATETIME_FULL","ffff","Formats.DATETIME_HUGE","F","Formats.DATETIME_SHORT_WITH_SECONDS","FF","Formats.DATETIME_MED_WITH_SECONDS","FFF","Formats.DATETIME_FULL_WITH_SECONDS","FFFF","Formats.DATETIME_HUGE_WITH_SECONDS","Formatter","parseFormat","fmt","current","currentFull","bracketed","charAt","formatOpts","systemLoc","formatWithSystemDefault","formatDateTime","formatDateTimeParts","formatInterval","interval","start","formatRange","end","num","formatDateTimeFromString","knownEnglish","useDateTimeFormatter","isOffsetFixed","allowZ","meridiem","English.meridiemForDateTime","English.monthForDateTime","English.weekdayForDateTime","maybeMacro","English.eraForDateTime","quarter","formatDurationFromString","dur","tokenToField","tokens","realTokens","found","concat","collapsed","shiftTo","filter","lildur","mapped","ianaRegex","combineRegexes","regexes","full","source","combineExtractors","extractors","mergedVals","mergedZone","cursor","ex","patterns","regex","extractor","simpleParse","ret","offsetRegex","isoTimeBaseRegex","isoTimeRegex","isoTimeExtensionRegex","extractISOWeekData","extractISOOrdinalData","sqlTimeRegex","sqlTimeExtensionRegex","int","fallback","extractISOTime","milliseconds","extractISOOffset","local","fullOffset","extractIANAZone","isoTimeOnly","isoDuration","extractISODuration","yearStr","monthStr","weekStr","dayStr","hourStr","minuteStr","secondStr","millisecondsStr","hasNegativePrefix","negativeSeconds","maybeNegate","force","obsOffsets","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","fromStrings","weekdayStr","result","English.monthsShort","English.weekdaysLong","English.weekdaysShort","rfc2822","extractRFC2822","obsOffset","milOffset","rfc1123","rfc850","ascii","extractRFC1123Or850","extractASCII","isoYmdWithTimeExtensionRegex","isoWeekWithTimeExtensionRegex","isoOrdinalWithTimeExtensionRegex","isoTimeCombinedRegex","extractISOYmdTimeAndOffset","extractISOWeekTimeAndOffset","extractISOOrdinalDateAndTime","extractISOTimeAndOffset","extractISOTimeOnly","sqlYmdWithTimeExtensionRegex","sqlTimeCombinedRegex","extractISOTimeOffsetAndIANAZone","INVALID","lowOrderMatrix","casualMatrix","daysInYearAccurate","daysInMonthAccurate","accurateMatrix","orderedUnits","reverseUnits","clear","conf","conversionAccuracy","matrix","Duration","durationToMillis","vals","sum","normalizeValues","reduceRight","previous","previousVal","conv","rollUp","accurate","invalid","isLuxonDuration","fromMillis","normalizeUnit","fromDurationLike","durationLike","isDuration","fromISO","text","parseISODuration","fromISOTime","parseISOTimeOnly","week","toFormat","fmtOpts","toHuman","unitDisplay","listStyle","toObject","toISO","toISOTime","millis","toMillis","suppressMilliseconds","suppressSeconds","includePrefix","includeOffset","toJSON","invalidReason","valueOf","duration","minus","negate","mapUnits","fn","reconfigure","as","normalize","rescale","newVals","entries","removeZeroes","shiftToAll","built","accumulated","lastUnit","own","ak","negated","invalidExplanation","v1","v2","Interval","isLuxonInterval","fromDateTimes","builtStart","friendlyDateTime","builtEnd","validateError","validateStartEnd","after","before","startIsValid","endIsValid","isInterval","toDuration","startOf","useLocaleWeeks","diff","hasSame","isEmpty","isAfter","dateTime","isBefore","contains","splitAt","dateTimes","sorted","sort","results","added","splitBy","idx","divideEqually","numberOfParts","overlaps","abutsStart","abutsEnd","engulfs","intersection","union","merge","intervals","final","sofar","item","xor","currentCount","ends","time","difference","toLocaleString","toISODate","dateFormat","separator","mapEndpoints","mapFn","Info","hasDST","proto","isValidIANAZone","locObj","getMinimumDaysInFirstWeek","getWeekendWeekdays","monthsFormat","weekdaysFormat","features","relative","localeWeek","dayDiff","earlier","later","utcDayStart","toUTC","keepLocalTime","highWater","lowestOrder","differs","differ","highOrderDiffs","remainingMillis","lowerOrderUnits","numberingSystems","arab","arabext","bali","beng","deva","fullwide","gujr","hanidec","khmr","knda","laoo","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt","latn","numberingSystemsUTF16","hanidecChars","digitRegex","MISSING_FTP","intUnit","post","deser","str","code","charCodeAt","search","min","max","parseDigits","spaceOrNBSP","fromCharCode","spaceOrNBSPRegExp","fixListRegex","stripInsensitivities","oneOf","startIndex","groups","simple","partTypeStyleToTokenVal","short","long","dayperiod","dayPeriod","hour24","dummyDateTimeCache","expandMacroTokens","formatOptsToTokens","maybeExpandMacroToken","explainFromTokens","one","two","three","four","six","oneOrTwo","oneToThree","oneToSix","oneToNine","twoToFour","fourToSix","unitate","unitForToken","disqualifyingUnit","regexString","handlers","re","buildRegex","rawMatches","matches","all","matchIndex","specificOffset","q","G","toField","dateTimeFromMatches","df","resolvedOpts","isSpace","actualType","tokenForPart","MAX_DATE","unsupportedZone","possiblyCachedWeekData","possiblyCachedLocalWeekData","localWeekData","inst","old","fixOffset","localTS","tz","utcGuess","o2","o3","tsToObj","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","objToTS","adjustTime","oPre","millisToAdd","parseDataToDateTime","parsedZone","interpretationZone","toTechFormat","extended","longFormat","extendedZone","defaultUnitValues","defaultWeekUnitValues","defaultOrdinalUnitValues","orderedWeekUnits","orderedOrdinalUnits","normalizeUnitWithLocalWeeks","weeknumber","weeksnumber","weeknumbers","weekyear","weekyears","quickDT","tsNow","offsetProvis","diffRelative","calendary","lastOpts","argList","args","ot","_zone","isLuxonDateTime","fromJSDate","isDate","zoneToUse","fromSeconds","containsOrdinal","containsGregorYear","containsGregorMD","containsGregor","definiteWeekDef","useWeekData","defaultValues","objNow","foundFirst","higherOrderInvalid","validWeek","validWeekday","hasInvalidWeekData","validOrdinal","hasInvalidOrdinalData","gregorian","tsFinal","offsetFinal","parseISODate","fromRFC2822","trim","preprocessRFC2822","parseRFC2822Date","fromHTTP","parseHTTPDate","fromFormat","localeToUse","parseFromTokens","fromString","fromSQL","parseSQL","isDateTime","parseFormatForOpts","localeOpts","tokenList","expandFormat","ceil","isWeekend","monthShort","monthLong","weekdayShort","weekdayLong","offsetNameShort","offsetNameLong","isInDST","getPossibleOffsets","dayMs","minuteMs","oEarlier","oLater","o1","ts1","ts2","c1","c2","isInLeapYear","weeksInLocalWeekYear","resolvedLocaleOptions","toLocal","keepCalendarTime","newTS","offsetGuess","asObj","setLocale","settingWeekStuff","mixed","normalizedUnit","endOf","toLocaleParts","ext","toISOWeekDate","toRFC2822","toHTTP","toSQLDate","toSQLTime","includeZone","includeOffsetSpace","toSQL","toSeconds","toUnixInteger","toBSON","includeConfig","otherDateTime","durOpts","otherIsLater","diffed","diffNow","until","inputMs","adjustedToZone","toRelative","padding","toRelativeCalendar","every","fromFormatExplain","fromStringExplain","Formats.DATE_MED_WITH_WEEKDAY","Formats.DATETIME_MED_WITH_WEEKDAY","dateTimeish","__spreadArray","to","pack","ar","purry","lazy","arrayArgs","apply","lazyArgs","pipe","operations","_i","lazyOps","op","_a","indexed","single","items","opIdx","lazySeq","acc","ret_1","_processItem","lazyResult","done","hasNext","isDone","lazyFn","hasMany","nextValues_1","_reduceLazy","array","newArray","keyList","_equals","length_1","arrA","arrB","dateA","dateB","getTime","regexpA","regexpB","_toLazyIndexed","_filter","lazyIndexed","_lazy","flatten","_flatten","isObject","_map","_merge","assign","_reduce","strict","initialValue","_sort","cmp","matched","selections","Infinity","matcherType","getSelectionKeys","optional","t$1","and","or","select","minLength","maxLength","K","between","lt","gt","lte","gte","finite","isFinite","positive","negative","W","when","otherwise","exhaustive","run","returnType","Translations","_lang","documentElement","lang","_locales","de","Mon","Tues","Wed","Thurs","Fri","Sat","Sun","Day","Month","getTranslation","Context","translations","html","css","customElement","_hours","_hasActiveSidebar","_getHourIndicator","Entry","heading","isContinuation","_sumReducer","accumulator","currentValue","contentIsEmptyOrUndefined","R.isEmpty","_highlighted","_extended","_handleClick","_displayInterval","nothing","components","startHours","startMinutes","endHours","endMinutes","component","property","Header","hasEmptyDate","expandedDate","_b","_c","_d","_e","activeDate","_f","_dispatchSwitchView","_dispatchSwitchDate","HTMLButtonElement","direction","currentTarget","event","CustomEvent","detail","bubbles","composed","dispatchEvent","view","dataset","context","_$Ct","_$Ci","st","nt","classList","DirectionalCalendarDateCalculator","_date","_direction","newDate","getDateByDayInDirection","adjustedDate","getDateByMonthInDirection","newYear","newMonth","currentDate","getDate","getMonth","getFullYear","_isCurrentDate","toDateString","_renderIndicator","isCurrentDate","classMap","with","_getCalendarArray","_dispatchExpand","_handleKeydown","_getDaysInMonth","_getOffsetOfFirstDayInMonth","getDay","_getDatesInMonthAsArray","sliceArgs","dateTransformer","previousMonth","activeMonth","nextMonth","getColorTextWithContrast","color","red","green","blue","_m","brightness","partitionOverlappingIntervals","rightEndValues","active","cur","getOverlappingEntitiesIndices","partitions","partition","flatMap","depth","group","_partitions","_index","openGroup","recursiveBubbleSort","isNested","delta","maxDelta","indexMaxDelta","splice","rearrangeDepths","gradings","groupGradings","LMSCalendar","_calendarWidth","innerWidth","_handleResize","div","contentRect","width","_resizeController","ResizeController","_changedProperties","firstElementChild","R.pipe","R.filter","entry","R.merge","R.sort","hasExpandedDate","_expandedDate","_handleSwitchDate","_handleSwitchView","_handleExpand","_renderEntriesSumByDay","_renderEntries","_renderEntriesByDate","dateCalculator","dateInDirection","_composeEntry","slot","_expandEntryMaybe","entryIndex","range","currentStartDate","currentEndDate","currentEntry","unsafeCSS","R.map","_getDaysRange","R.flatten","entriesByDate","R.equals","grading","_getGridSlotByTime","getSortedGradingsByIndex","background","_getWidthByGroupSize","_getOffsetByDepth","R.reduce","startRow","startDate","endDate"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54]}